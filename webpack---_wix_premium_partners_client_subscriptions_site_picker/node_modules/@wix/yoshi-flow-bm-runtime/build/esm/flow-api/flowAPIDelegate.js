var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { once } from 'lodash';
import { assertEnabledApi } from '../util/assert-enabled-api';
import { assertErrorMonitorEnabledApi } from '../util/assert-error-monitor-enabled-api';
import { createFetchAsyncMessagesLoader } from '../createFetchAsyncMessagesLoader';
import { createFlowAPIInstances } from './createFlowAPIInstances';
import { createModuleFlowAPI } from './createModuleFlowAPI';
var FlowAPIDelegate = /** @class */ (function () {
    function FlowAPIDelegate(params) {
        this.module = params.module;
        this.optionalDeps = params.optionalDeps;
        this.bmModule = params.bmModule;
    }
    Object.defineProperty(FlowAPIDelegate.prototype, "flowAPIInstances", {
        get: function () {
            var optionalDeps = this.optionalDeps;
            if (this._flowAPIInstances == null) {
                this._flowAPIInstances = createFlowAPIInstances({
                    optionalDeps: optionalDeps,
                    bmModule: this.bmModule,
                    module: this.module,
                });
            }
            return this._flowAPIInstances;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FlowAPIDelegate.prototype, "moduleFlowAPI", {
        get: function () {
            var _a = this, bmModule = _a.bmModule, module = _a.module, optionalDeps = _a.optionalDeps;
            if (this._moduleFlowAPI == null) {
                this._moduleFlowAPI = createModuleFlowAPI({
                    module: module,
                    bmModule: bmModule,
                    optionalDeps: optionalDeps,
                    flowAPIInstances: this.flowAPIInstances,
                });
            }
            return this._moduleFlowAPI;
        },
        enumerable: false,
        configurable: true
    });
    FlowAPIDelegate.prototype.createMonitors = function (appName) {
        var _a, _b;
        var _c = this, bmModule = _c.bmModule, module = _c.module;
        var sentryConfig = module.config.sentry;
        var fedopsLogger;
        var errorMonitor;
        if ((sentryConfig === null || sentryConfig === void 0 ? void 0 : sentryConfig.DSN) && (sentryConfig === null || sentryConfig === void 0 ? void 0 : sentryConfig.errorMonitor)) {
            var monitoringTools = bmModule._essentials.createMonitors({
                errorMonitorOptions: {
                    dsn: sentryConfig === null || sentryConfig === void 0 ? void 0 : sentryConfig.DSN,
                    appName: process.env.ARTIFACT_ID,
                    version: process.env.ARTIFACT_VERSION,
                },
                fedopsLoggerOptions: {
                    appName: appName,
                    options: __assign({}, (_a = module.config.fedops) === null || _a === void 0 ? void 0 : _a.config),
                },
            });
            fedopsLogger = monitoringTools.fedopsLogger;
            errorMonitor = monitoringTools.errorMonitor;
        }
        else {
            fedopsLogger = bmModule._essentials.createFedopsLogger(appName, (_b = module.config.fedops) === null || _b === void 0 ? void 0 : _b.config);
        }
        return { fedopsLogger: fedopsLogger, errorMonitor: errorMonitor };
    };
    FlowAPIDelegate.prototype.createComponentTranslationsAPI = function (translations) {
        var _this = this;
        var _a, _b, _c;
        var bmModule = this.bmModule;
        var maybeErrorReporterTransport = ((_a = this.moduleFlowAPI.sentryAndHub) === null || _a === void 0 ? void 0 : _a.hub) || this.moduleFlowAPI.errorMonitor;
        var _d = createFetchAsyncMessagesLoader({
            localeDistPath: translations.localeDistPath,
            availableLocales: translations.availableLocales,
            errorReporter: maybeErrorReporterTransport,
        }), asyncMessagesLoader = _d.asyncMessagesLoader, addLocaleMessages = _d.addLocaleMessages;
        var i18n = bmModule._essentials.createI18n({
            asyncMessagesLoader: asyncMessagesLoader,
            useSuspense: (_c = (_b = this.module.config.translations) === null || _b === void 0 ? void 0 : _b.suspense) !== null && _c !== void 0 ? _c : true,
            disableAutoInit: true,
        });
        var init = once(function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!!i18n.isInitialized) return [3 /*break*/, 2];
                        return [4 /*yield*/, i18n.init()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/, i18n];
                }
            });
        }); });
        return {
            i18n: i18n,
            init: init,
            asyncMessagesLoader: asyncMessagesLoader,
            addLocaleMessages: addLocaleMessages,
        };
    };
    FlowAPIDelegate.prototype.createBMMethodFlowAPI = function (method) {
        var _this = this;
        var _a = this, moduleFlowAPI = _a.moduleFlowAPI, module = _a.module;
        var _b = this.createMonitors(method.methodId), fedopsLogger = _b.fedopsLogger, errorMonitor = _b.errorMonitor;
        return {
            get module() {
                return moduleFlowAPI.module;
            },
            get moduleInfo() {
                return moduleFlowAPI.moduleInfo;
            },
            get httpClient() {
                return moduleFlowAPI.httpClient;
            },
            get sentry() {
                var _a, _b;
                assertErrorMonitorEnabledApi(moduleFlowAPI.sentryAndHub, (_b = (_a = module.config) === null || _a === void 0 ? void 0 : _a.sentry) === null || _b === void 0 ? void 0 : _b.errorMonitor, 'sentry');
                return moduleFlowAPI.sentryAndHub.hub;
            },
            get errorMonitor() {
                var _a, _b;
                assertErrorMonitorEnabledApi(errorMonitor, (_b = (_a = module.config) === null || _a === void 0 ? void 0 : _a.sentry) === null || _b === void 0 ? void 0 : _b.errorMonitor, 'sentry.errorMonitor');
                return errorMonitor;
            },
            get moduleParams() {
                return moduleFlowAPI.moduleParams;
            },
            getI18n: moduleFlowAPI.getI18n,
            getExperiments: moduleFlowAPI.getExperiments,
            getBILogger: moduleFlowAPI.getBILogger,
            getModuleFedopsLogger: moduleFlowAPI.getModuleFedopsLogger,
            getFedopsLogger: function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                return [2 /*return*/, fedopsLogger];
            }); }); },
            fedopsLogger: fedopsLogger,
            getCurrentInstance: moduleFlowAPI.getCurrentInstance,
        };
    };
    FlowAPIDelegate.prototype.getComponentHooksFlowAPI = function (component, _a, _b) {
        var _this = this;
        var maybeComponentTranslationsAPI = _a.maybeComponentTranslationsAPI, ownProps = _a.ownProps;
        var fedopsLogger = _b.fedopsLogger, errorMonitor = _b.errorMonitor;
        var _c = this, moduleFlowAPI = _c.moduleFlowAPI, module = _c.module;
        var getI18n = maybeComponentTranslationsAPI
            ? maybeComponentTranslationsAPI.init
            : moduleFlowAPI.getI18n;
        return {
            get module() {
                return moduleFlowAPI.module;
            },
            get moduleInfo() {
                return moduleFlowAPI.moduleInfo;
            },
            get httpClient() {
                return moduleFlowAPI.httpClient;
            },
            get sentry() {
                var _a, _b;
                assertErrorMonitorEnabledApi(moduleFlowAPI.sentryAndHub, (_b = (_a = module.config) === null || _a === void 0 ? void 0 : _a.sentry) === null || _b === void 0 ? void 0 : _b.errorMonitor, 'sentry');
                return moduleFlowAPI.sentryAndHub.hub;
            },
            get errorMonitor() {
                var _a, _b;
                assertErrorMonitorEnabledApi(errorMonitor, (_b = (_a = module.config) === null || _a === void 0 ? void 0 : _a.sentry) === null || _b === void 0 ? void 0 : _b.errorMonitor, 'sentry.errorMonitor');
                return errorMonitor;
            },
            get moduleParams() {
                return moduleFlowAPI.moduleParams;
            },
            getModuleFedopsLogger: moduleFlowAPI.getModuleFedopsLogger,
            getI18n: getI18n,
            getExperiments: moduleFlowAPI.getExperiments,
            getBILogger: moduleFlowAPI.getBILogger,
            componentInfo: {
                componentId: component.componentId,
                type: component.componentType,
            },
            getFedopsLogger: function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                return [2 /*return*/, fedopsLogger];
            }); }); },
            fedopsLogger: fedopsLogger,
            getCurrentInstance: moduleFlowAPI.getCurrentInstance,
            ownProps: ownProps,
        };
    };
    FlowAPIDelegate.prototype.createBMComponentAPI = function (component, _a, _b) {
        var componentTranslationsAPI = _a.componentTranslationsAPI;
        var fedopsLogger = _b.fedopsLogger, errorMonitor = _b.errorMonitor;
        return __awaiter(this, void 0, void 0, function () {
            var _c, moduleFlowAPI, flowAPIInstances, module, maybeTranslations, maybeExperiments, getBILogger, maybeBILogger, translationsAPI;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _c = this, moduleFlowAPI = _c.moduleFlowAPI, flowAPIInstances = _c.flowAPIInstances, module = _c.module;
                        maybeTranslations = flowAPIInstances.maybeTranslations, maybeExperiments = flowAPIInstances.maybeExperiments, getBILogger = flowAPIInstances.getBILogger;
                        return [4 /*yield*/, getBILogger()];
                    case 1:
                        maybeBILogger = _d.sent();
                        translationsAPI = componentTranslationsAPI !== null && componentTranslationsAPI !== void 0 ? componentTranslationsAPI : maybeTranslations;
                        return [2 /*return*/, {
                                _translations: translationsAPI,
                                module: module,
                                moduleInfo: moduleFlowAPI.moduleInfo,
                                get httpClient() {
                                    return moduleFlowAPI.httpClient;
                                },
                                get _sentry() {
                                    var _a;
                                    return (_a = moduleFlowAPI.sentryAndHub) === null || _a === void 0 ? void 0 : _a.hub;
                                },
                                get sentry() {
                                    var _a, _b;
                                    assertErrorMonitorEnabledApi(moduleFlowAPI.sentryAndHub, (_b = (_a = module.config) === null || _a === void 0 ? void 0 : _a.sentry) === null || _b === void 0 ? void 0 : _b.errorMonitor, 'sentry');
                                    return moduleFlowAPI.sentryAndHub.hub;
                                },
                                get errorMonitor() {
                                    var _a, _b;
                                    assertErrorMonitorEnabledApi(errorMonitor, (_b = (_a = module.config) === null || _a === void 0 ? void 0 : _a.sentry) === null || _b === void 0 ? void 0 : _b.errorMonitor, 'sentry.errorMonitor');
                                    return errorMonitor;
                                },
                                get moduleParams() {
                                    return moduleFlowAPI.moduleParams;
                                },
                                get i18n() {
                                    assertEnabledApi(translationsAPI, 'i18n');
                                    var i18n = translationsAPI.i18n;
                                    return i18n;
                                },
                                get biLogger() {
                                    assertEnabledApi(maybeBILogger, 'biLogger');
                                    return maybeBILogger;
                                },
                                get experiments() {
                                    assertEnabledApi(maybeExperiments, 'experiments');
                                    return maybeExperiments;
                                },
                                componentInfo: {
                                    componentId: component.componentId,
                                    type: component.componentType,
                                },
                                get fedopsLogger() {
                                    assertEnabledApi(fedopsLogger, 'fedopsLogger');
                                    return fedopsLogger;
                                },
                            }];
                }
            });
        });
    };
    FlowAPIDelegate.prototype.prefetchTranslations = function (componentTranslationsAPI) {
        return __awaiter(this, void 0, void 0, function () {
            var _translations, translationsAPI;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _translations = this.moduleFlowAPI._translations;
                        translationsAPI = componentTranslationsAPI !== null && componentTranslationsAPI !== void 0 ? componentTranslationsAPI : _translations;
                        return [4 /*yield*/, (translationsAPI === null || translationsAPI === void 0 ? void 0 : translationsAPI.init())];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    FlowAPIDelegate.prototype.prefetchExperiments = function () {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var module, experiments, _b, scopes, centralized;
            return __generator(this, function (_c) {
                module = this.module;
                experiments = this.flowAPIInstances.maybeExperiments;
                if (experiments) {
                    _b = (_a = module.config.experiments) !== null && _a !== void 0 ? _a : {}, scopes = _b.scopes, centralized = _b.centralized;
                    if (scopes && !centralized) {
                        return [2 /*return*/, Promise.all(scopes.map(function (scope) { return experiments.load(scope); }))];
                    }
                }
                return [2 /*return*/];
            });
        });
    };
    return FlowAPIDelegate;
}());
export { FlowAPIDelegate };
//# sourceMappingURL=flowAPIDelegate.js.map