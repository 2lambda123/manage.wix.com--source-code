var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { BusinessManagerModule, registerModule, registerPageComponentMonitors, } from '@wix/business-manager-api';
import { ModuleRegistry } from 'react-module-container';
import { createLazyComponent } from './createLazyComponent';
import { FlowAPIDelegate } from './flow-api/flowAPIDelegate';
export function createModule(_a) {
    var context = _a.context, _b = _a.requireableModule, module = _b.module, configHook = _b.configHook, initHook = _b.initHook, pages = _a.pages, exportedComponents = _a.exportedComponents, methods = _a.methods, optionalDeps = _a.optionalDeps;
    var config = module.config, moduleId = module.moduleId;
    var moduleConfigurationId = config.moduleConfigurationId;
    var Module = /** @class */ (function (_super) {
        __extends(Module, _super);
        function Module(moduleId) {
            var _this = _super.call(this, moduleId) || this;
            _this.state = {};
            _this.setState = function (newState) { return (_this.state = newState); };
            if (moduleConfigurationId) {
                _this.setModuleConfigurationId(moduleConfigurationId);
            }
            _this.flowAPIDelegate = new FlowAPIDelegate({
                bmModule: _this,
                module: module,
                optionalDeps: optionalDeps,
            });
            return _this;
        }
        Module.prototype.register = function (moduleParams) {
            var _this = this;
            this.moduleParams = moduleParams;
            var flowAPIDelegate = this.flowAPIDelegate;
            var moduleFlowAPI = flowAPIDelegate.moduleFlowAPI;
            var sentryAndHub = moduleFlowAPI.sentryAndHub;
            pages.forEach(function (component) {
                var _a = component.component, componentId = _a.componentId, componentName = _a.componentName;
                var monitoringTools = flowAPIDelegate.createMonitors(componentId);
                if (monitoringTools.errorMonitor || sentryAndHub) {
                    registerPageComponentMonitors(componentId, {
                        errorMonitor: monitoringTools.errorMonitor,
                        sentryClient: sentryAndHub === null || sentryAndHub === void 0 ? void 0 : sentryAndHub.client,
                    });
                }
                _this.registerPageComponent(componentName, createLazyComponent(component, {
                    module: module,
                    flowAPIDelegate: flowAPIDelegate,
                    context: context,
                    monitoringTools: monitoringTools,
                }));
            });
            exportedComponents.forEach(function (component) {
                var componentId = component.component.componentId;
                var monitoringTools = flowAPIDelegate.createMonitors(componentId);
                _this.registerComponentWithModuleParams(componentId, createLazyComponent(component, {
                    context: context,
                    module: module,
                    flowAPIDelegate: flowAPIDelegate,
                    monitoringTools: monitoringTools,
                }), { suspense: true });
            });
            methods.forEach(function (_a) {
                var method = _a.method, fn = _a.fn;
                ModuleRegistry.registerMethod(method.methodId, function () {
                    return fn().bind(_this, flowAPIDelegate.createBMMethodFlowAPI(method));
                });
            });
        };
        Object.defineProperty(Module.prototype, "_essentials", {
            get: function () {
                return this.appEssentials;
            },
            enumerable: false,
            configurable: true
        });
        Module.prototype.init = function (_) {
            var flowAPIDelegate = this.flowAPIDelegate;
            if (initHook) {
                initHook.call(this, flowAPIDelegate.moduleFlowAPI);
            }
        };
        Module.prototype.config = function (sourceModule, configPayload) {
            var flowAPIDelegate = this.flowAPIDelegate;
            if (configHook) {
                configHook.call(this, flowAPIDelegate.moduleFlowAPI, sourceModule, configPayload);
            }
        };
        Module.prototype.prefetchFlowAPI = function () {
            var _a;
            var flowAPIDelegate = this.flowAPIDelegate;
            return Promise.all([(_a = flowAPIDelegate.moduleFlowAPI._translations) === null || _a === void 0 ? void 0 : _a.init()]);
        };
        Module.prototype.prefetchComponent = function (componentId) {
            var flowAPIPrefetchPromise = this.prefetchFlowAPI();
            var component = exportedComponents.find(function (_a) {
                var component = _a.component;
                return component.componentId === componentId;
            });
            if (component == null) {
                return;
            }
            return Promise.all([
                flowAPIPrefetchPromise,
                component.loadReactComponent(),
            ]);
        };
        return Module;
    }(BusinessManagerModule));
    registerModule(moduleId, Module);
}
//# sourceMappingURL=createModule.js.map