var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import { useEffect, useState } from 'react';
import { appDefIds } from '@wix/business-manager-api';
import { useModuleInfo } from './useModuleInfo';
import { useBusinessManagerAPI } from './useBusinessManagerAPI';
export var useInstance = function (maybeAppDefId) {
    var _a;
    var configAppDefId = useModuleInfo().appDefinitionId;
    var _b = useBusinessManagerAPI(), getCurrentInstance = _b.getCurrentInstance, registerToInstanceChanges = _b.registerToInstanceChanges;
    var appDefId = (_a = maybeAppDefId !== null && maybeAppDefId !== void 0 ? maybeAppDefId : configAppDefId) !== null && _a !== void 0 ? _a : appDefIds.metaSite;
    var _c = __read(useState(function () { return getCurrentInstance(appDefId); }), 2), instance = _c[0], setInstance = _c[1];
    useEffect(function () {
        var remove = registerToInstanceChanges(appDefId, setInstance).remove;
        return remove;
    }, [appDefId, setInstance]);
    return instance;
};
//# sourceMappingURL=useInstance.js.map