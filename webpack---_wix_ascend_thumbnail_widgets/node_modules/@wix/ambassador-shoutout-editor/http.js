/* eslint-disable */
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShoutoutEditor = void 0;
var http_1 = require("@wix/ambassador/runtime/http");
var ShoutoutEditor = function (baseUrl, httpClientConfig) {
    var httpClient = new http_1.AmbassadorHTTPClient(baseUrl, httpClientConfig);
    return {
        AccountDetailsService: function () {
            return function (headers) {
                var service = {
                    get: function (getAccountDetailsRequest) {
                        return httpClient.invoke('GET', '/v1/account-details', getAccountDetailsRequest, headers);
                    },
                };
                service.get.__http_method = 'GET';
                service.get.__http_url = '/v1/account-details';
                return service;
            };
        },
        AutomationService: function () {
            return function (headers) {
                var service = {
                    getCampaignMapping: function (getCampaignMappingRequest) {
                        return httpClient.invoke('GET', '/v1/automation-mapping/{automation_rule_id}/{template_id}', getCampaignMappingRequest, headers);
                    },
                    getPingCampaignMapping: function (getPingCampaignMappingRequest) {
                        return httpClient.invoke('GET', '/v1/ping-mapping/{automation_rule_id}/{template_id}', getPingCampaignMappingRequest, headers);
                    },
                    queryAutomationTemplates: function (queryAutomationTemplatesRequest) {
                        return httpClient.invoke('POST', '/v1/automation/template/query', queryAutomationTemplatesRequest, headers);
                    },
                };
                service.getCampaignMapping.__http_method = 'GET';
                service.getCampaignMapping.__http_url = '/v1/automation-mapping/{automation_rule_id}/{template_id}';
                service.getPingCampaignMapping.__http_method = 'GET';
                service.getPingCampaignMapping.__http_url = '/v1/ping-mapping/{automation_rule_id}/{template_id}';
                service.queryAutomationTemplates.__http_method = 'POST';
                service.queryAutomationTemplates.__http_url = '/v1/automation/template/query';
                return service;
            };
        },
        CampaignDataService: function () {
            return function (headers) {
                var service = {
                    getPlaceholderKeys: function (getPlaceholderKeysRequest) {
                        return httpClient.invoke('GET', '/v1/campaign-data/{campaign_id}/placeholder-keys', getPlaceholderKeysRequest, headers);
                    },
                };
                service.getPlaceholderKeys.__http_method = 'GET';
                service.getPlaceholderKeys.__http_url = '/v1/campaign-data/{campaign_id}/placeholder-keys';
                return service;
            };
        },
        CampaignService: function () {
            return function (headers) {
                var service = {
                    create: function (createCampaignRequest) { return httpClient.invoke('POST', '/v1/campaigns', createCampaignRequest, headers); },
                    createFromTemplate: function (createFromTemplateRequest) {
                        return httpClient.invoke('POST', '/v1/campaigns/create-from-template/{template_id}', createFromTemplateRequest, headers);
                    },
                    createPublishedAutomation: function (createPublishedAutomationRequest) {
                        return httpClient.invoke('POST', '/v1/campaigns/publish-automation', createPublishedAutomationRequest, headers);
                    },
                    delete: function (deleteCampaignRequest) {
                        return httpClient.invoke('DELETE', '/v1/campaigns/{campaign_id}', deleteCampaignRequest, headers);
                    },
                    get: function (getCampaignRequest) { return httpClient.invoke('GET', '/v1/campaigns/{campaign_id}', getCampaignRequest, headers); },
                    getComposer: function (getComposerRequest) {
                        return httpClient.invoke('GET', '/v1/campaigns/{campaign_id}/composer', getComposerRequest, headers);
                    },
                    list: function (listCampaignsRequest) { return httpClient.invoke('GET', '/v1/campaigns', listCampaignsRequest, headers); },
                    pauseScheduling: function (pauseSchedulingRequest) {
                        return httpClient.invoke('POST', '/v1/campaigns/{campaign_id}/pause-scheduling', pauseSchedulingRequest, headers);
                    },
                    preview: function (previewCampaignRequest) {
                        return httpClient.invoke('POST', '/v1/campaigns/{campaign_id}/preview', previewCampaignRequest, headers);
                    },
                    publish: function (publishCampaignRequest) {
                        return httpClient.invoke('POST', '/v1/campaigns/{campaign_id}/publish', publishCampaignRequest, headers);
                    },
                    reuse: function (reuseCampaignRequest) {
                        return httpClient.invoke('POST', '/v1/campaigns/{campaign_id}/reuse', reuseCampaignRequest, headers);
                    },
                    sendTest: function (sendTestRequest) { return httpClient.invoke('POST', '/v1/campaigns/{campaign_id}/test', sendTestRequest, headers); },
                };
                service.create.__http_method = 'POST';
                service.create.__http_url = '/v1/campaigns';
                service.createFromTemplate.__http_method = 'POST';
                service.createFromTemplate.__http_url = '/v1/campaigns/create-from-template/{template_id}';
                service.createPublishedAutomation.__http_method = 'POST';
                service.createPublishedAutomation.__http_url = '/v1/campaigns/publish-automation';
                service.delete.__http_method = 'DELETE';
                service.delete.__http_url = '/v1/campaigns/{campaign_id}';
                service.get.__http_method = 'GET';
                service.get.__http_url = '/v1/campaigns/{campaign_id}';
                service.getComposer.__http_method = 'GET';
                service.getComposer.__http_url = '/v1/campaigns/{campaign_id}/composer';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/v1/campaigns';
                service.pauseScheduling.__http_method = 'POST';
                service.pauseScheduling.__http_url = '/v1/campaigns/{campaign_id}/pause-scheduling';
                service.preview.__http_method = 'POST';
                service.preview.__http_url = '/v1/campaigns/{campaign_id}/preview';
                service.publish.__http_method = 'POST';
                service.publish.__http_url = '/v1/campaigns/{campaign_id}/publish';
                service.reuse.__http_method = 'POST';
                service.reuse.__http_url = '/v1/campaigns/{campaign_id}/reuse';
                service.sendTest.__http_method = 'POST';
                service.sendTest.__http_url = '/v1/campaigns/{campaign_id}/test';
                return service;
            };
        },
        CampaignTranslationService: function () {
            return function (headers) {
                var service = {
                    discardDraft: function (discardDraftRequest) {
                        return httpClient.invoke('POST', '/v1/campaigns/{campaign_id}/translations/discard-draft', discardDraftRequest, headers);
                    },
                    isCampaignCustomized: function (isCampaignCustomizedRequest) {
                        return httpClient.invoke('GET', '/v1/automation/campaign/{campaign_id}/customized', isCampaignCustomizedRequest, headers);
                    },
                    list: function (listTranslationsRequest) {
                        return httpClient.invoke('GET', '/v1/campaigns/translations/list', listTranslationsRequest, headers);
                    },
                    publishDraft: function (publishDraftRequest) {
                        return httpClient.invoke('POST', '/v1/campaigns/{campaign_id}/translations/publish-draft', publishDraftRequest, headers);
                    },
                    resetCampaignDraftToDefault: function (resetCampaignDraftToDefaultRequest) {
                        return httpClient.invoke('POST', '/v1/automation/campaign/{campaign_id}/reset', resetCampaignDraftToDefaultRequest, headers);
                    },
                };
                service.discardDraft.__http_method = 'POST';
                service.discardDraft.__http_url = '/v1/campaigns/{campaign_id}/translations/discard-draft';
                service.isCampaignCustomized.__http_method = 'GET';
                service.isCampaignCustomized.__http_url = '/v1/automation/campaign/{campaign_id}/customized';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/v1/campaigns/translations/list';
                service.publishDraft.__http_method = 'POST';
                service.publishDraft.__http_url = '/v1/campaigns/{campaign_id}/translations/publish-draft';
                service.resetCampaignDraftToDefault.__http_method = 'POST';
                service.resetCampaignDraftToDefault.__http_url = '/v1/automation/campaign/{campaign_id}/reset';
                return service;
            };
        },
        CampaignValidationService: function () {
            return function (headers) {
                var service = {
                    validateLink: function (validateLinkRequest) {
                        return httpClient.invoke('POST', '/v1/campaign-validation/validate-link', validateLinkRequest, headers);
                    },
                };
                service.validateLink.__http_method = 'POST';
                service.validateLink.__http_url = '/v1/campaign-validation/validate-link';
                return service;
            };
        },
        ConfigurationService: function () {
            return function (headers) {
                var service = {
                    delete: function (deleteConfigurationRequest) {
                        return httpClient.invoke('DELETE', '/v1/configurations/{id}', deleteConfigurationRequest, headers);
                    },
                    list: function (listConfigurationsRequest) {
                        return httpClient.invoke('GET', '/v1/configurations', listConfigurationsRequest, headers);
                    },
                    save: function (saveConfigurationRequest) {
                        return httpClient.invoke('POST', '/v1/configurations', saveConfigurationRequest, headers);
                    },
                };
                service.delete.__http_method = 'DELETE';
                service.delete.__http_url = '/v1/configurations/{id}';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/v1/configurations';
                service.save.__http_method = 'POST';
                service.save.__http_url = '/v1/configurations';
                return service;
            };
        },
        SenderDetailsService: function () {
            return function (headers) {
                var service = {
                    get: function (getSenderDetailsRequest) {
                        return httpClient.invoke('GET', '/v1/sender-details', getSenderDetailsRequest, headers);
                    },
                    resolveActualFromAddress: function (resolveActualFromAddressRequest) {
                        return httpClient.invoke('POST', '/v1/sender-details/actual-from-address', resolveActualFromAddressRequest, headers);
                    },
                    update: function (updateSenderDetailsRequest) {
                        return httpClient.invoke('PATCH', '/v1/sender-details', updateSenderDetailsRequest, headers);
                    },
                    verifyEmail: function (verifySenderEmailRequest) {
                        return httpClient.invoke('POST', '/v1/sender-details/verify-email', verifySenderEmailRequest, headers);
                    },
                };
                service.get.__http_method = 'GET';
                service.get.__http_url = '/v1/sender-details';
                service.resolveActualFromAddress.__http_method = 'POST';
                service.resolveActualFromAddress.__http_url = '/v1/sender-details/actual-from-address';
                service.update.__http_method = 'PATCH';
                service.update.__http_url = '/v1/sender-details';
                service.verifyEmail.__http_method = 'POST';
                service.verifyEmail.__http_url = '/v1/sender-details/verify-email';
                return service;
            };
        },
        TemplateService: function () {
            return function (headers) {
                var service = {
                    buildComposer: function (buildComposerRequest) {
                        return httpClient.invoke('POST', '/v1/templates/{template_id}/build-composer', buildComposerRequest, headers);
                    },
                    clone: function (cloneTemplateRequest) {
                        return httpClient.invoke('POST', '/v1/templates/{template_id}/clone', cloneTemplateRequest, headers);
                    },
                    get: function (getTemplateRequest) { return httpClient.invoke('GET', '/v1/templates/{template_id}', getTemplateRequest, headers); },
                    list: function (listTemplatesRequest) { return httpClient.invoke('GET', '/v1/templates', listTemplatesRequest, headers); },
                    preview: function (previewTemplateRequest) {
                        return httpClient.invoke('POST', '/v1/templates/{template_id}/preview', previewTemplateRequest, headers);
                    },
                    reuse: function (reuseTemplateRequest) {
                        return httpClient.invoke('POST', '/v1/templates/{template_id}/reuse', reuseTemplateRequest, headers);
                    },
                };
                service.buildComposer.__http_method = 'POST';
                service.buildComposer.__http_url = '/v1/templates/{template_id}/build-composer';
                service.clone.__http_method = 'POST';
                service.clone.__http_url = '/v1/templates/{template_id}/clone';
                service.get.__http_method = 'GET';
                service.get.__http_url = '/v1/templates/{template_id}';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/v1/templates';
                service.preview.__http_method = 'POST';
                service.preview.__http_url = '/v1/templates/{template_id}/preview';
                service.reuse.__http_method = 'POST';
                service.reuse.__http_url = '/v1/templates/{template_id}/reuse';
                return service;
            };
        },
        TriggeredEmails: function () {
            return function (headers) {
                var service = {
                    emailAnyContact: function (emailContactRequest) {
                        return httpClient.invoke('POST', '/v1/emailAnyContact', emailContactRequest, headers);
                    },
                    emailContact: function (emailContactRequest) { return httpClient.invoke('POST', '/v1/emailContact', emailContactRequest, headers); },
                    emailMember: function (emailMemberRequest) { return httpClient.invoke('POST', '/v1/emailMember', emailMemberRequest, headers); },
                };
                service.emailAnyContact.__http_method = 'POST';
                service.emailAnyContact.__http_url = '/v1/emailAnyContact';
                service.emailContact.__http_method = 'POST';
                service.emailContact.__http_url = '/v1/emailContact';
                service.emailMember.__http_method = 'POST';
                service.emailMember.__http_url = '/v1/emailMember';
                return service;
            };
        },
    };
};
exports.ShoutoutEditor = ShoutoutEditor;
exports.ShoutoutEditor.__transport = 'http';
__exportStar(require("./types"), exports);
//# sourceMappingURL=http.js.map