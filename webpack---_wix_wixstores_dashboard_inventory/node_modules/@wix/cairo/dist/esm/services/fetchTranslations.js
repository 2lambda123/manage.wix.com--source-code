import { __awaiter, __generator } from "tslib";
import messagesEn from '../assets/locale/messages_en.json';
export var fetchTranslations = function (_a) {
    var errorMonitor = _a.errorMonitor;
    return function (locale) { return __awaiter(void 0, void 0, void 0, function () {
        var e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    if (locale === 'en') {
                        return [2 /*return*/, messagesEn];
                    }
                    return [4 /*yield*/, import(
                        /* webpackChunkName: "cairo-locale-[request]" */ "../assets/locale/messages_" + locale + ".json")];
                case 1: return [2 /*return*/, _a.sent()];
                case 2:
                    e_1 = _a.sent();
                    // ignore missing translation files
                    if (/Cannot find module/.test(e_1 === null || e_1 === void 0 ? void 0 : e_1.message)) {
                        throw e_1;
                    }
                    errorMonitor.captureException(e_1);
                    if (process.env.NODE_ENV === 'development') {
                        console.error("@wix/cairo: Failed to fetch translation for locale '" + locale + "', caused by:");
                        console.error(e_1);
                    }
                    throw e_1; // i18n will catch & fallback to default locale
                case 3: return [2 /*return*/];
            }
        });
    }); };
};
export var prefetchTranslations = function (params) { return function (locale) {
    fetchTranslations(params)(locale).catch(function () { return null; });
}; };
//# sourceMappingURL=fetchTranslations.js.map