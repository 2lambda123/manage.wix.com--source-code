'use strict';

exports.__esModule = true;

var _urlUtils = require('./url-utils');

var isDispatcherUrl = function isDispatcherUrl(url) {
  return (/_api/.test(url)
  );
};
var escapeRegExp = function escapeRegExp(str) {
  return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
}; // eslint-disable-line no-useless-escape

var getWindowLocationOrigin = function getWindowLocationOrigin() {
  var location = typeof window !== 'undefined' && window.location;
  return location ? (0, _urlUtils.extractOrigin)(location) : '';
};

var requestSuccess = function requestSuccess(config) {
  var url = config.url,
      baseURL = config.baseURL;

  var parsedBaseUrl = (0, _urlUtils.parseUrl)(baseURL);
  var baseUrlOrigin = (0, _urlUtils.isRelativeUrl)(baseURL) ? getWindowLocationOrigin() : (0, _urlUtils.extractOrigin)(parsedBaseUrl, true);
  var baseUrlWithoutOrigin = baseURL.replace(baseUrlOrigin, '');

  var baseUrlRegex = new RegExp('^' + escapeRegExp(baseURL));
  var relativeUrl = url.replace(baseUrlRegex, ''); //get the original relative path without baseURL

  if (!(0, _urlUtils.isRelativeUrl)(relativeUrl)) {
    return config;
  }

  var finalUrl = isDispatcherUrl(url) ? (0, _urlUtils.joinPath)(baseUrlOrigin, relativeUrl) : (0, _urlUtils.joinPath)(baseUrlOrigin, baseUrlWithoutOrigin, relativeUrl);

  return Object.assign({}, config, {
    url: finalUrl
  });
};

exports.default = { requestSuccess: requestSuccess };