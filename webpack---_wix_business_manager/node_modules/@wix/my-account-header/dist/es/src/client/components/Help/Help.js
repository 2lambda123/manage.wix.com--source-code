import { __extends } from "tslib";
import * as React from 'react';
import { withTranslation } from '@wix/wix-i18n-config';
import { connect } from 'react-redux';
import { ReactDropdownDialog } from '../ReactDropdownDialog/ReactDropdownDialog';
import { provideLogger } from '../../services/BiLogger';
import DropdownDialogBi from '../DropdownDialogBi/DropdownDialogBi.container';
import * as style from './Help.scss';
import { TextualHelp } from '../TextualHelp/TextualHelp';
import HelpDropdown from '../HelpDropdown/HelpDropdown';
import HelpProDropdown from '../HelpProDropdown/HelpProDropdown.container';
import { withErrorBoundary } from '@wix/business-manager-common-utils';
import * as expertsSelectors from '../../selectors/expertsSelectors';
var HelpComponent = /** @class */ (function (_super) {
    __extends(HelpComponent, _super);
    function HelpComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HelpComponent.prototype.render = function () {
        var _a = this.props, containerClassName = _a.containerClassName, iconClassName = _a.iconClassName, showProHelp = _a.showProHelp, useIcon = _a.useIcon, biPageView = _a.biPageView;
        var HelpView = function () { return useIcon ?
            React.createElement("div", { className: iconClassName, "data-hook": "help-icon" }) :
            React.createElement(TextualHelp, null); };
        var wrapperClassName = useIcon ? containerClassName : style.helpLinkContainer;
        if (showProHelp) {
            return (React.createElement(ReactDropdownDialog, { openStrategy: 'click', appendToBody: false },
                React.createElement("div", { className: wrapperClassName },
                    React.createElement(HelpView, null)),
                React.createElement(DropdownDialogBi, { extraBiParams: { view: 'priority-support', page_view: biPageView } },
                    React.createElement(HelpProDropdown, null))));
        }
        return (React.createElement(HelpDropdown, { HelpView: HelpView }));
    };
    return HelpComponent;
}(React.Component));
export { HelpComponent };
var mapStateToProps = function (state) { return ({
    biPageView: state.biPageView,
    showProHelp: expertsSelectors.showProHelp(state)
}); };
export default withErrorBoundary()(provideLogger(withTranslation()(connect(mapStateToProps)(HelpComponent))));
//# sourceMappingURL=Help.js.map