import { __extends } from "tslib";
import { ReactLazyComponent } from 'react-module-container';
import { connect } from 'react-redux';
import { create as fedopsLoggerCreate } from '@wix/fedops-logger';
import { withErrorBoundary } from '@wix/business-manager-common-utils';
import { getLanguage } from '../../selectors/currentUserSelectors';
var NotificationsWidgetLazyComponent = /** @class */ (function (_super) {
    __extends(NotificationsWidgetLazyComponent, _super);
    function NotificationsWidgetLazyComponent(props) {
        var _this = this;
        var pingNotificationsWidgetStaticsUrl = props.pingNotificationsWidgetStaticsUrl, isDebug = props.isDebug;
        var manifest = {
            files: [
                pingNotificationsWidgetStaticsUrl + "module-registry-components" + (isDebug ? '' : '.min') + ".css",
                pingNotificationsWidgetStaticsUrl + "module-registry-components.bundle" + (isDebug ? '' : '.min') + ".js"
            ],
            resolve: function () {
                fedopsLoggerCreate('notifications-widget-component', { isWidgetLogger: true }).appLoadStarted();
                // }
            },
            component: 'ping.NotificationsWidgetComponent'
        };
        _this = _super.call(this, props, manifest) || this;
        return _this;
    }
    return NotificationsWidgetLazyComponent;
}(ReactLazyComponent));
var mapStateToProps = function (state) { return ({
    pingNotificationsWidgetStaticsUrl: state.topology.pingNotificationsWidgetStaticsUrl,
    isDebug: state.isDebug,
    experiments: state.experiments,
    locale: getLanguage(state)
}); };
export default withErrorBoundary()(connect(mapStateToProps)(NotificationsWidgetLazyComponent));
//# sourceMappingURL=NotificationsWidgetLazyComponent.container.js.map