import { __assign, __extends } from "tslib";
import * as React from 'react';
import { provideLogger } from '../../services/BiLogger';
import { BiEvents } from '../../constants/biEvents';
var DropdownDialogBiComp = /** @class */ (function (_super) {
    __extends(DropdownDialogBiComp, _super);
    function DropdownDialogBiComp() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DropdownDialogBiComp.prototype.componentDidMount = function () {
        var _a = this.props, metaSiteId = _a.metaSiteId, extraBiParams = _a.extraBiParams, biLogger = _a.biLogger;
        biLogger.logEvent(BiEvents.OPEN_DIALOG_CLICK, __assign({ msid: metaSiteId }, extraBiParams));
    };
    DropdownDialogBiComp.prototype.componentWillUnmount = function () {
        var _a = this.props, metaSiteId = _a.metaSiteId, extraBiParams = _a.extraBiParams, biLogger = _a.biLogger;
        biLogger.logEvent(BiEvents.CLOSE_DIALOG_CLICK, __assign({ msid: metaSiteId }, extraBiParams));
    };
    DropdownDialogBiComp.prototype.render = function () {
        return React.Children.only(this.props.children);
    };
    return DropdownDialogBiComp;
}(React.Component));
export var DropdownDialogBi = provideLogger(DropdownDialogBiComp);
//# sourceMappingURL=DropdownDialogBi.js.map