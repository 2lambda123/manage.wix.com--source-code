import { __assign, __extends } from "tslib";
import * as React from 'react';
import * as css from './SearchEverythingWidget.scss';
import { connect } from 'react-redux';
import { SearchEverythingWidgetLazyComponent } from '@wix/search-everything-component/dist/src/biz-mgr-integration/search-everything-widget-lazy-component';
import { getCurrentSiteId } from '../../selectors/currentSiteSelectors';
import { getLanguage } from '../../selectors/currentUserSelectors';
import { getIsADIEditorType } from '../../selectors/editorTypeSelectors';
import { getDebugStatus } from '../../selectors/debugSelectors';
import { withErrorBoundary } from '@wix/business-manager-common-utils';
var SearchEverythingWidgetComponent = /** @class */ (function (_super) {
    __extends(SearchEverythingWidgetComponent, _super);
    function SearchEverythingWidgetComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SearchEverythingWidgetComponent.prototype.render = function () {
        return (React.createElement("div", { className: css.searchWidgetContainer },
            React.createElement(SearchEverythingWidgetLazyComponent, __assign({}, this.props))));
    };
    return SearchEverythingWidgetComponent;
}(React.PureComponent));
export { SearchEverythingWidgetComponent };
var mapStateToProps = function (state) { return ({
    topology: state.topology,
    experiments: state.experiments,
    isDebug: getDebugStatus(state),
    locale: getLanguage(state),
    metaSiteId: getCurrentSiteId(state),
    isADIEditorType: getIsADIEditorType(state)
}); };
export default withErrorBoundary()(connect(mapStateToProps)(SearchEverythingWidgetComponent));
//# sourceMappingURL=SearchEverythingWidget.js.map