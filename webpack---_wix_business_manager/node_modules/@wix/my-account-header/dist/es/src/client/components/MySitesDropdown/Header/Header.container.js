import * as React from 'react';
import { provideLogger } from '../../../services/BiLogger';
import { connect } from 'react-redux';
import HeaderComponent from './Header';
import { useCallback } from 'react';
import { BiEvents, BiParams } from '../../../constants/biEvents';
import { getCurrentSiteId } from '../../../selectors/currentSiteSelectors';
import { getBiPageView } from '../../../selectors/biPageViewSelectors';
import { hasPermission } from '../../../selectors/getPermissions';
import { HeaderPermissions } from '../../AccountMenu/MenuItems';
import { hasRecentSitesListError } from '../../../selectors/recentSitesListSelector';
export var createSiteUrl = "/create-site?ref=" + BiParams.MY_SITES_DROPDOWN;
export var Header = function (_a) {
    var currentSiteId = _a.currentSiteId, biPageView = _a.biPageView, biLogger = _a.biLogger, isCreateNewSiteEnabled = _a.isCreateNewSiteEnabled, isErrorInRecentSitesList = _a.isErrorInRecentSitesList;
    var handleClick = useCallback(function () {
        biLogger.logEvent(BiEvents.MY_SITES_DROPDOWN_ACTION, {
            msid: currentSiteId,
            page_view: biPageView,
            item_name: 'create-new-site'
        });
        window.open(createSiteUrl);
    }, [biLogger, currentSiteId]);
    return React.createElement(HeaderComponent, { onClick: handleClick, isCreateNewSiteEnabled: isCreateNewSiteEnabled, isErrorInRecentSitesList: isErrorInRecentSitesList });
};
var mapStateToProps = function (state) { return ({
    currentSiteId: getCurrentSiteId(state),
    biPageView: getBiPageView(state),
    isCreateNewSiteEnabled: hasPermission(state, HeaderPermissions.viewCreateSite),
    isErrorInRecentSitesList: hasRecentSitesListError(state)
}); };
export default provideLogger(connect(mapStateToProps)(Header));
//# sourceMappingURL=Header.container.js.map