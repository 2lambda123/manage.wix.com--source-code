import { __extends } from "tslib";
import * as React from 'react';
import * as css from './LanguagesList.scss';
import { supportedLanguages } from './Languages';
import getLanguageOrderFunction from './LanguagesListOrder';
import { connect } from 'react-redux';
import { isEditorXBrand } from '../../selectors/isEditorXSelector';
import { getLanguage } from '../../selectors/currentUserSelectors';
import { Text } from 'wix-style-react';
import { experimentsSelectors } from '@wix/wix-experiments-redux';
var LanguagesList = /** @class */ (function (_super) {
    __extends(LanguagesList, _super);
    function LanguagesList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.indonesianCode = 'id';
        _this.availableLanguages = Object.keys(supportedLanguages).filter(function (code) { return code !== _this.props.currentLanguage && code !== _this.indonesianCode; });
        return _this;
    }
    LanguagesList.prototype.getIsIndonesianCurrentLanguage = function () {
        return this.props.currentLanguage === this.indonesianCode;
    };
    LanguagesList.prototype.insertLanguageAtBottomLeft = function (languageCode, languagesList) {
        var medianIndex = Math.round((languagesList.length - 1) / 2);
        languagesList.splice(medianIndex, 0, languageCode);
    };
    LanguagesList.prototype.render = function () {
        var _this = this;
        var isEditorX = this.props.isEditorX;
        var className = css.containerAddIndonesianFTOff;
        if (this.props.showIndonesianLanguage && !this.getIsIndonesianCurrentLanguage()) {
            this.insertLanguageAtBottomLeft(this.indonesianCode, this.availableLanguages);
            className = css.container;
        }
        var getItemOrderByIndex = getLanguageOrderFunction(this.availableLanguages.length);
        var domain = isEditorX ? 'manage.editorx.com' : 'users.wix.com';
        return (React.createElement("div", { "data-hook": "languages-container", className: className }, this.availableLanguages.map(function (code, index) {
            return React.createElement("div", { key: code, className: css.item, "data-hook": "available-language", "data-language-code": code, style: { order: getItemOrderByIndex(index) } },
                React.createElement("a", { href: "https://" + domain + "/wix-users/auth/setLanguage?language=" + code + "&redirectTo=" + location.href, "data-hook": "language-link-" + code, onClick: function () { return _this.props.reportLanguageClicked(code); } },
                    React.createElement(Text, { weight: "normal", size: "small", secondary: true }, supportedLanguages[code])));
        })));
    };
    return LanguagesList;
}(React.PureComponent));
var mapStateToProps = function (state) {
    return {
        currentLanguage: getLanguage(state),
        isEditorX: isEditorXBrand(state),
        showIndonesianLanguage: experimentsSelectors(state).enabled('specs.wossm.AddIndonesianAccountLanguage'),
    };
};
export default connect(mapStateToProps)(LanguagesList);
//# sourceMappingURL=LanguagesList.js.map