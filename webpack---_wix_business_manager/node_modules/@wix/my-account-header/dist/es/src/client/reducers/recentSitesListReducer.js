import { __assign } from "tslib";
import { SET_RECENT_SITES_LIST_ERROR, SET_RECENT_SITES_LIST_DATA, SET_RECENT_SITES_LIST_LOADING } from '../actions/dataActions';
var initialState = null;
export var recentSitesList = function (state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case SET_RECENT_SITES_LIST_DATA:
            return __assign(__assign({}, state), { list: action.payload, hasError: false, isLoading: false });
        case SET_RECENT_SITES_LIST_ERROR:
            return __assign(__assign({}, state), { list: null, hasError: true, isLoading: false });
        case SET_RECENT_SITES_LIST_LOADING:
            return __assign(__assign({}, state), { isLoading: true });
        default:
            return state;
    }
};
//# sourceMappingURL=recentSitesListReducer.js.map