import { combineReducers } from 'redux';
import { currentUser } from './currentUserReducers';
import { experimentsReducer } from '@wix/wix-experiments-redux';
import { expertTypes } from './expertsReducer';
import { account } from './accountReducer';
import { permissions } from './permissionsReducer';
import { recentSitesList } from './recentSitesListReducer';
import { currentSite } from './currentSiteReducer';
var buildFakeReducer = function (defaultValue) { return function (state, action) {
    if (state === void 0) { state = defaultValue; }
    return state;
}; };
export var rootReducer = combineReducers({
    currentUser: currentUser,
    currentSite: currentSite,
    siteCoBranding: buildFakeReducer(null),
    biPageView: buildFakeReducer(null),
    isADIEditorType: buildFakeReducer(false),
    currentPage: buildFakeReducer(null),
    isDebug: buildFakeReducer(false),
    topology: buildFakeReducer({}),
    experiments: experimentsReducer,
    pingNotificationsWidgetStaticsUrl: buildFakeReducer(''),
    searchEverythingWidgetStaticsUrl: buildFakeReducer(''),
    inboxHeaderWidgetStaticsUrl: buildFakeReducer(''),
    expertTypes: expertTypes,
    account: account,
    permissions: permissions,
    isEditorX: buildFakeReducer(null),
    recentSitesList: recentSitesList
});
//# sourceMappingURL=index.js.map