import { __extends } from "tslib";
import * as React from 'react';
import { withHeaderProvider } from '../../HeaderProvider/HeaderProvider';
import { withExperimentsProvider } from '../../ExperimentsProvider/ExperimentsProvider';
import { HeaderLayout } from '../HeaderLayout/HeaderLayout';
import HeaderActions from '../HeaderActions/HeaderActions';
import HeaderLinks from '../../HeaderLinks/HeaderLinks';
import { HeaderViewMode } from '../../../constants/headerViewMode';
var SiteLevelHeader = /** @class */ (function (_super) {
    __extends(SiteLevelHeader, _super);
    function SiteLevelHeader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SiteLevelHeader.prototype.render = function () {
        return (React.createElement(HeaderLayout, null,
            React.createElement(HeaderLinks, { viewMode: HeaderViewMode.SITE }),
            React.createElement(HeaderActions, { viewMode: HeaderViewMode.SITE })));
    };
    return SiteLevelHeader;
}(React.PureComponent));
export { SiteLevelHeader };
export var HeaderWithProvider = withHeaderProvider(SiteLevelHeader);
export var Header = withExperimentsProvider({ scope: 'business-manager' })(HeaderWithProvider);
export default Header;
//# sourceMappingURL=SiteLevelHeader.js.map