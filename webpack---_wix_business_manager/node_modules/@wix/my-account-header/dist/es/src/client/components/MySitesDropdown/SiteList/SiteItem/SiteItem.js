import * as React from 'react';
import { Box, Text, Image, Badge, Divider } from 'wix-style-react';
import * as s from './SiteItem.scss';
import Confirm from 'wix-ui-icons-common/Confirm';
import { MySitesDropdownDataHooks } from '../../MySitesDropdown.data-hooks';
import { connect } from 'react-redux';
import { experimentsSelectors } from '@wix/wix-experiments-redux';
import { provideLogger } from '../../../../services/BiLogger';
import { getCurrentSiteId } from '../../../../selectors/currentSiteSelectors';
import { getBiPageView } from '../../../../selectors/biPageViewSelectors';
import { BiEvents } from '../../../../constants/biEvents';
import { withTranslation } from '@wix/wix-i18n-config';
var SiteItem = function (_a) {
    var _b = _a.site, thumbnail = _b.thumbnail, name = _b.name, isPremium = _b.isPremium, msid = _b.msid, t = _a.t, isCurrent = _a.isCurrent, scrollShown = _a.scrollShown, currentSiteId = _a.currentSiteId, biPageView = _a.biPageView, biLogger = _a.biLogger, location = _a.location, isLast = _a.isLast, shouldDisplayPremiumBadgeInLowerCase = _a.shouldDisplayPremiumBadgeInLowerCase;
    function onSiteItemClick() {
        biLogger.logEvent(BiEvents.MY_SITES_DROPDOWN_SITE_CLICKED, {
            msid: currentSiteId,
            page_view: biPageView,
            msid_clicked: msid,
            location: location
        });
        window.location.href = "/dashboard/" + msid + "?referralInfo=sites-dropdown";
    }
    return (React.createElement("div", { onClick: onSiteItemClick, "data-hook": MySitesDropdownDataHooks.SiteItemDiv, className: (isCurrent) ? s.selected : '' },
        React.createElement(Box, { height: 60, verticalAlign: "middle", align: "space-between", className: s.container, padding: scrollShown ? '0 6px 0 24px' : '0 24px 0 24px', dataHook: MySitesDropdownDataHooks.Site },
            React.createElement(Box, { verticalAlign: "middle" },
                React.createElement(Image, { width: 65, height: 36, src: thumbnail, className: s.thumbnail, borderRadius: '4px', showBorder: true, dataHook: MySitesDropdownDataHooks.Image }),
                React.createElement(Text, { className: s.siteName, size: "small", weight: "normal", ellipsis: true, dataHook: MySitesDropdownDataHooks.SiteName }, name)),
            React.createElement(Box, { verticalAlign: "middle" },
                isPremium &&
                    React.createElement(Badge, { size: "small", skin: "premium", className: s.premiumBadge, uppercase: !shouldDisplayPremiumBadgeInLowerCase, dataHook: MySitesDropdownDataHooks.PremiumBadge }, t('premium_ribbon.label')),
                React.createElement(Box, { height: 24, width: 24 }, isCurrent && React.createElement(Box, { dataHook: MySitesDropdownDataHooks.CurrentSiteMarker },
                    React.createElement(Confirm, null))))),
        !isLast &&
            React.createElement(Box, { paddingLeft: '18px', paddingRight: scrollShown ? undefined : '18px', dataHook: MySitesDropdownDataHooks.SiteDivider },
                React.createElement(Divider, null))));
};
var mapStateToProps = function (state) {
    var shouldDisplayPremiumBadgeInLowerCase = experimentsSelectors(state).enabled('specs.wosbm.displayPremiumInLowerCase');
    return {
        currentSiteId: getCurrentSiteId(state),
        biPageView: getBiPageView(state),
        shouldDisplayPremiumBadgeInLowerCase: shouldDisplayPremiumBadgeInLowerCase,
    };
};
export default provideLogger(connect(mapStateToProps)(withTranslation()(SiteItem)));
//# sourceMappingURL=SiteItem.js.map