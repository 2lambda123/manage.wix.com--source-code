import { __extends } from "tslib";
import * as React from 'react';
import { Popover, Text } from 'wix-style-react';
import * as s from './IconTooltip.scss';
var HEADER_HEIGHT = 48;
var IconTooltip = /** @class */ (function (_super) {
    __extends(IconTooltip, _super);
    function IconTooltip(props) {
        var _this = _super.call(this, props) || this;
        _this.state = { shown: false };
        return _this;
    }
    IconTooltip.prototype.show = function () {
        this.setState({ shown: true });
    };
    IconTooltip.prototype.hide = function () {
        this.setState({ shown: false });
    };
    IconTooltip.prototype.shouldShow = function (e) {
        return e.clientY <= HEADER_HEIGHT;
    };
    IconTooltip.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, content = _a.content;
        var shown = this.state.shown;
        return (React.createElement(Popover, { placement: "bottom", shown: shown, theme: "dark", showArrow: true, onMouseEnter: function (e) {
                // this conditions prevent the tooltip to appear when hovering in to the dropdown
                if (_this.shouldShow(e)) {
                    _this.show();
                }
            }, onMouseLeave: function () { return _this.hide(); }, onClick: function () { return _this.hide(); } },
            React.createElement(Popover.Content, null,
                React.createElement("div", { className: s.outer },
                    React.createElement(Text, { light: true, size: "tiny" },
                        React.createElement("span", { className: s.inner }, content)))),
            React.createElement(Popover.Element, null, children)));
    };
    return IconTooltip;
}(React.Component));
export default IconTooltip;
//# sourceMappingURL=IconTooltip.js.map