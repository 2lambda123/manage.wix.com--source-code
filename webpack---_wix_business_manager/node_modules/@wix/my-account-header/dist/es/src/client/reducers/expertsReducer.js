import { __assign } from "tslib";
import { ExpertType } from '../types/experts';
import { HEADER_DATA_FETCH_SUCCESS } from '../actions/dataActions';
import { reportDashboardEnabledStatus, reportExpertStatus } from '../services/wixRecorderMethods';
export var initialState = {
    types: new Set(),
    accountLevel: null,
    isExpertDashboardEnabled: false
};
export var expertTypes = function (state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case HEADER_DATA_FETCH_SUCCESS:
            var types = filterUnknownTypes(action.payload.expertTypes);
            action.payload.expertTypes ? reportExpertStatus(types) : reportDashboardEnabledStatus(action.payload.isExpertDashboardEnabled);
            return __assign(__assign({}, state), { types: types, accountLevel: action.payload.expertAccountLevel, isExpertDashboardEnabled: action.payload.isExpertDashboardEnabled });
        default:
            return state;
    }
};
var filterUnknownTypes = function (recievedTypes) {
    var knownExpertTypes = [ExpertType.SITE_BUILDER, ExpertType.PRO, ExpertType.POTENTIAL_EXPERT];
    return new Set(recievedTypes && recievedTypes.filter(function (t) { return knownExpertTypes.includes(t); }));
};
//# sourceMappingURL=expertsReducer.js.map