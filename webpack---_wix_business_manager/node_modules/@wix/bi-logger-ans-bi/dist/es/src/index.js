var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/* tslint:disable */
/* eslint:disable */
/**
* @typedef {string} Url
*/
/**
* @typedef {string} GUID
*/
/**
* @typedef {number} DateTime
*/
var dummy;
var defaultConfig = { endpoint: 'ans_bi' };
var init = function (webOrMobileLogger) { return function (userConfig) {
    if (userConfig === void 0) { userConfig = {}; }
    var defaults = userConfig.defaults, restOfConfig = __rest(userConfig, ["defaults"]);
    var config = __assign(__assign({}, defaultConfig), restOfConfig);
    var factoryInstance = typeof webOrMobileLogger.factory === 'function' ? webOrMobileLogger.factory(config) : webOrMobileLogger;
    var logger = getLogger(factoryInstance);
    return defaults ? logger.util.updateDefaults(defaults) : logger;
}; };
export var initCustomLogger = function (factoryInstance) { return getLogger(factoryInstance); };
var getLogger = function (biLoggerClientFactoryInstance) {
    return new Logger(biLoggerClientFactoryInstance);
};
var Logger = /** @class */ (function () {
    function Logger(biLoggerClientFactoryInstance) {
        var _this = this;
        this.biLoggerClientFactoryInstance = biLoggerClientFactoryInstance;
        this.util = {
            updateDefaults: function (defaults) {
                _this.biLoggerClientFactoryInstance.updateDefaults(defaults);
                return _this;
            },
            log: function (logParams, context) {
                return _this.bi.log(logParams, context);
            }
        };
        biLoggerClientFactoryInstance
            .updateDefaults({ src: 4 });
        this.bi = biLoggerClientFactoryInstance.logger({ endpoint: 'ans_bi' });
    }
    ;
    /**
    * @typedef {Object} clickOnContactUsLinkParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: click on contact us link. Evid: 26.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickOnContactUsLinkParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnContactUsLink = function (params) {
        return this.bi.log(__assign({ evid: 26 }, params));
    };
    /**
    * @typedef {Object} clickTheWasItHelpfulButtonsParams
    * @property {string} block_id - null
    * @property {string} block_name - null
    * @property {string} category - null
    * @property {string} editor_working_mode - editor mode {desktop, mobile}
    * @property {GUID} item_id - null
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} origin - the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} panel_name - the editor component the widget was opened from{header settings, add a button...}
    * @property {string} referral_name - null
    * @property {Url} referral_url - null
    * @property {string} source_name - null
    * @property {string} sub_category - null
    * @property {boolean} thumbs_up - null
    **/
    /**
     * Name: click the (was it helpful) buttons. Evid: 501.
    
    
     * block_id - Type: string.
     *
     * block_name - Type: string.
     *
     * category - Type: string.
     *
     * editor_working_mode - Type: string. Desc: editor mode {desktop, mobile}
     *
     * item_id - Type: guid.
     *
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * origin - Type: string. Desc: the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * panel_name - Type: string. Desc: the editor component the widget was opened from{header settings, add a button...}
     *
     * referral_name - Type: string.
     *
     * referral_url - Type: url.
     *
     * source_name - Type: string.
     *
     * sub_category - Type: string.
     *
     * thumbs_up - Type: bool.
     * @param {clickTheWasItHelpfulButtonsParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheWasItHelpfulButtons = function (params) {
        return this.bi.log(__assign({ evid: 501 }, params));
    };
    /**
    * @typedef {Object} contactUsDescribeIssueParams
    * @property {string} first_answer - null
    * @property {string} lang - null
    * @property {string} question - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: contact us -> describe issue. Evid: 527.
    
    
     * first_answer - Type: string.
     *
     * lang - Type: lng.
     *
     * question - Type: string.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {contactUsDescribeIssueParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.contactUsDescribeIssue = function (params) {
        return this.bi.log(__assign({ evid: 527 }, params));
    };
    /**
    * @typedef {Object} clickTheForumLinkParams
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: click the forum link. Evid: 514.
    
    
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {clickTheForumLinkParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheForumLink = function (params) {
        return this.bi.log(__assign({ evid: 514 }, params));
    };
    /**
    * @typedef {Object} wixContactRecaptchaWasLoadedInTheRequestACallPageParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} chat_status - is the chat available for conversations, closed, etc.
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - reCAPTCHA was Loaded in The Request a Call Page. Evid: 599.
     * Event description: this event is trigger when the reCAPTCHA is loaded and the logo appears on the bottom of the page.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chat_status - Type: string. Desc: is the chat available for conversations, closed, etc.
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactRecaptchaWasLoadedInTheRequestACallPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactRecaptchaWasLoadedInTheRequestACallPage = function (params) {
        return this.bi.log(__assign({ evid: 599 }, params));
    };
    /**
    * @typedef {Object} hpClickingOnSubCategoryParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: HP - clicking on sub category. Evid: 61.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {hpClickingOnSubCategoryParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.hpClickingOnSubCategory = function (params) {
        return this.bi.log(__assign({ evid: 61 }, params));
    };
    /**
    * @typedef {Object} callSchedulerScheduledCallbackFailureParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} local_time_zone - name of the user's time zone
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Scheduled Callback Failure. Evid: 621.
     * Event description: User failed to schedule a callback.
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * local_time_zone - Type: string. Desc: name of the user's time zone
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerScheduledCallbackFailureParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerScheduledCallbackFailure = function (params) {
        return this.bi.log(__assign({ evid: 621 }, params));
    };
    /**
    * @typedef {Object} wixContactSolutionViewParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Solution View. Evid: 573.
     * Event description: A solution is presented to the user in "step 3".
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactSolutionViewParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactSolutionView = function (params) {
        return this.bi.log(__assign({ evid: 573 }, params));
    };
    /**
    * @typedef {Object} smsVerificationAnsBiCallMeWithTheCodeParams
    
    **/
    /**
     * Name: SMS Verification (ans_bi)- Call Me With the Code. Evid: 619.
     * Event description: The user asks for a call for the code.
    
    
     * @param {smsVerificationAnsBiCallMeWithTheCodeParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.smsVerificationAnsBiCallMeWithTheCode = function (params) {
        return this.bi.log(__assign({ evid: 619 }, params));
    };
    /**
    * @typedef {Object} wixContactTicketSubmissionSuccessClientParams
    * @property {string} announcement_text - announcement that is shown to user
    * @property {string} call_center_status - null
    * @property {string} context - base on which platform the event is trigger { contact form, SMS page etc}
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - null
    * @property {string} lang - null
    * @property {string} main_option_id - null
    * @property {string} main_option_name - null
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - null
    * @property {Url} referral_url - null
    * @property {number} solution_time - null
    * @property {string} solution_title - null
    * @property {string} sub_option_id - null
    * @property {string} sub_option_name - null
    * @property {string} ticket_id - null
    * @property {string} ticket_url - null
    * @property {string} ticketing_status - null
    * @property {string} topic - null
    **/
    /**
     * Name: Wix Contact - Ticket Submission Success  (client). Evid: 582.
     * Event description: User was able to submit a ticket through "Wix Contact".
    
     * announcement_text - Type: string. Desc: announcement that is shown to user
     *
     * call_center_status - Type: string.
     *
     * context - Type: string. Desc: base on which platform the event is trigger { contact form, SMS page etc}
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric.
     *
     * lang - Type: string.
     *
     * main_option_id - Type: string.
     *
     * main_option_name - Type: string.
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string.
     *
     * referral_url - Type: url.
     *
     * solution_time - Type: numeric.
     *
     * solution_title - Type: string.
     *
     * sub_option_id - Type: string.
     *
     * sub_option_name - Type: string.
     *
     * ticket_id - Type: string.
     *
     * ticket_url - Type: string.
     *
     * ticketing_status - Type: string.
     *
     * topic - Type: string.
     * @param {wixContactTicketSubmissionSuccessClientParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactTicketSubmissionSuccessClient = function (params) {
        return this.bi.log(__assign({ evid: 582 }, params));
    };
    /**
    * @typedef {Object} playVideoParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} video - null
    **/
    /**
     * Name: play video. Evid: 12.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * video - Type: string.
     * @param {playVideoParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.playVideo = function (params) {
        return this.bi.log(__assign({ evid: 12 }, params));
    };
    /**
    * @typedef {Object} clickingOnTopicChangingProductButtonParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} topic_title - null
    **/
    /**
     * Name: clicking on topic- changing product button. Evid: 38.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * topic_title - Type: string.
     * @param {clickingOnTopicChangingProductButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnTopicChangingProductButton = function (params) {
        return this.bi.log(__assign({ evid: 38 }, params));
    };
    /**
    * @typedef {Object} clickIHaveAnotherIssueButtonParams
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: click (I have another issue) button. Evid: 533.
    
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {clickIHaveAnotherIssueButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickIHaveAnotherIssueButton = function (params) {
        return this.bi.log(__assign({ evid: 533 }, params));
    };
    /**
    * @typedef {Object} smsVerificationAnsBiCodeSubmittedParams
    
    **/
    /**
     * Name: SMS Verification (ans_bi)- Code Submitted. Evid: 615.
     * Event description: The user successfully submits the code sent to their phone.
    
    
     * @param {smsVerificationAnsBiCodeSubmittedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.smsVerificationAnsBiCodeSubmitted = function (params) {
        return this.bi.log(__assign({ evid: 615 }, params));
    };
    /**
    * @typedef {Object} callSchedulerAddToYourCalendarParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} local_time_zone - name of the user's time zone
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Add to your calendar. Evid: 612.
     * Event description: User clicks the button to add the scheduled callback to their calendar..
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * local_time_zone - Type: string. Desc: name of the user's time zone
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerAddToYourCalendarParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerAddToYourCalendar = function (params) {
        return this.bi.log(__assign({ evid: 612 }, params));
    };
    /**
    * @typedef {Object} pageViewParams
    * @property {string} category - null
    * @property {string} editor_working_mode - editor mode {desktop, mobile}
    * @property {string} faq_type - null
    * @property {string} item_id - null
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} origin - the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} panel_name - the editor component the widget was opened from {header settings, add a button...}
    * @property {string} referral_name - null
    * @property {Url} referral_url - null
    * @property {string} source_name - null
    * @property {string} submit_mode - null
    **/
    /**
     * Name: page view. Evid: 531.
    
    
     * category - Type: string.
     *
     * editor_working_mode - Type: string. Desc: editor mode {desktop, mobile}
     *
     * faq_type - Type: string.
     *
     * item_id - Type: string.
     *
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * origin - Type: string. Desc: the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * panel_name - Type: string. Desc: the editor component the widget was opened from {header settings, add a button...}
     *
     * referral_name - Type: string.
     *
     * referral_url - Type: url.
     *
     * source_name - Type: string.
     *
     * submit_mode - Type: string.
     * @param {pageViewParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.pageView = function (params) {
        return this.bi.log(__assign({ evid: 531 }, params));
    };
    /**
    * @typedef {Object} postNewTopicSelectingSearchResultParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: Post new topic - selecting search result. Evid: 68.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {postNewTopicSelectingSearchResultParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.postNewTopicSelectingSearchResult = function (params) {
        return this.bi.log(__assign({ evid: 68 }, params));
    };
    /**
    * @typedef {Object} choosingASearchResult54Params
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} title - null
    * @property {string} item - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: choosing a search result. Evid: 54.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * title - Type: string.
     *
     * item - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {choosingASearchResult54Params} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.choosingASearchResult54 = function (params) {
        return this.bi.log(__assign({ evid: 54 }, params));
    };
    /**
    * @typedef {Object} editCallParams
    * @property {string} action - change phone number\change schedule
    * @property {string} category - the subcategory the user selected
    * @property {number} eta - the estimated wait time presented to the user
    * @property {string} issue_id - unique identifier of phone ticket
    * @property {GUID} item_id - ticket id
    * @property {string} item_name - the title that user provided
    * @property {string} lang - null
    * @property {string} phone - phone number submitted by the user
    * @property {string} referral_name - null
    * @property {string} time_slot - time slot selected by the user
    * @property {string} type - question\bug\wishlist
    **/
    /**
     * Name: edit call. Evid: 545.
     * Event description: click the 'Change Phone Number' button or 'Change Schedule' button from the phone ticket page.
    
     * action - Type: string. Desc: change phone number\change schedule
     *
     * category - Type: string. Desc: the subcategory the user selected
     *
     * eta - Type: numeric. Desc: the estimated wait time presented to the user
     *
     * issue_id - Type: string. Desc: unique identifier of phone ticket
     *
     * item_id - Type: guid. Desc: ticket id
     *
     * item_name - Type: string. Desc: the title that user provided
     *
     * lang - Type: lng.
     *
     * phone - Type: string. Desc: phone number submitted by the user
     *
     * referral_name - Type: string.
     *
     * time_slot - Type: string. Desc: time slot selected by the user
     *
     * type - Type: string. Desc: question\bug\wishlist
     * @param {editCallParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.editCall = function (params) {
        return this.bi.log(__assign({ evid: 545 }, params));
    };
    /**
    * @typedef {Object} clickOnFeaturedArticleInHeaderHelpWidgetParams
    * @property {number} feature_article_position - index of the featured article clicked
    * @property {string} item_id - Article ID
    * @property {string} lang - Article language
    * @property {string} source_name - widget name
    **/
    /**
     * Name: Click on featured article in header help widget. Evid: 623.
     * Event description: Events when clicking an article from the Featured Article section in 'my site' help widget ..
    
     * feature_article_position - Type: numeric. Desc: index of the featured article clicked
     *
     * item_id - Type: string. Desc: Article ID
     *
     * lang - Type: string. Desc: Article language
     *
     * source_name - Type: string. Desc: widget name
     * @param {clickOnFeaturedArticleInHeaderHelpWidgetParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnFeaturedArticleInHeaderHelpWidget = function (params) {
        return this.bi.log(__assign({ evid: 623 }, params));
    };
    /**
    * @typedef {Object} quickAssistClickOnRequestCallbackParams
    * @property {string} block_id - the id of the selected block
    * @property {string} block_name - the name of the selected block
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} channel - channel the users came from
    * @property {string} content_id - the id of the selected content
    * @property {string} content_name - the name of the selected content
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} source_name - location of the button
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Quick Assist - Click on "Request Callback". Evid: 564.
     * Event description: Clicking the "Request Callback" button.
    
     * block_id - Type: string. Desc: the id of the selected block
     *
     * block_name - Type: string. Desc: the name of the selected block
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * content_id - Type: string. Desc: the id of the selected content
     *
     * content_name - Type: string. Desc: the name of the selected content
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * source_name - Type: string. Desc: location of the button
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {quickAssistClickOnRequestCallbackParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistClickOnRequestCallback = function (params) {
        return this.bi.log(__assign({ evid: 564 }, params));
    };
    /**
    * @typedef {Object} choosingASearchResult53Params
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} title - null
    * @property {string} item - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} type - null
    **/
    /**
     * Name: choosing a search result. Evid: 53.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * title - Type: string.
     *
     * item - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * type - Type: string.
     * @param {choosingASearchResult53Params} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.choosingASearchResult53 = function (params) {
        return this.bi.log(__assign({ evid: 53 }, params));
    };
    /**
    * @typedef {Object} quickAssistContentBlockClickParams
    * @property {string} block_id - the id of the selected block
    * @property {string} block_name - the name of the selected block
    * @property {string} channel - channel the users came from
    * @property {string} content_id - the id of the selected content
    * @property {string} content_name - the name of the selected content
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    **/
    /**
     * Name: Quick Assist - Content Block Click. Evid: 562.
     * Event description: Clicking on a content item inside a Block.
    
     * block_id - Type: string. Desc: the id of the selected block
     *
     * block_name - Type: string. Desc: the name of the selected block
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * content_id - Type: string. Desc: the id of the selected content
     *
     * content_name - Type: string. Desc: the name of the selected content
     *
     * lang - Type: string. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     * @param {quickAssistContentBlockClickParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistContentBlockClick = function (params) {
        return this.bi.log(__assign({ evid: 562 }, params));
    };
    /**
    * @typedef {Object} accountAccessTicketSubmissionSuccessParams
    * @property {string} lang - lang
    * @property {string} referral_name - referral_name
    * @property {Url} referral_url - referral_url
    * @property {GUID} ticket_id - ticket_id
    * @property {string} ticket_url - ticket_url
    **/
    /**
     * Name: Account Access - Ticket Submission Success. Evid: 651.
     * Event description: User was able to submit a ticket through "Account Recovery".
    
     * lang - Type: string. Desc: lang
     *
     * referral_name - Type: string. Desc: referral_name
     *
     * referral_url - Type: url. Desc: referral_url
     *
     * ticket_id - Type: guid. Desc: ticket_id
     *
     * ticket_url - Type: string. Desc: ticket_url
     * @param {accountAccessTicketSubmissionSuccessParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.accountAccessTicketSubmissionSuccess = function (params) {
        return this.bi.log(__assign({ evid: 651 }, params));
    };
    /**
    * @typedef {Object} accountAccessTicketSubmissionFailedParams
    * @property {string} lang - answers language
    * @property {string} reason - reason for ticket tubmission fail
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    **/
    /**
     * Name: Account Access - Ticket Submission Failed. Evid: 652.
     * Event description: User was not able to submit a ticket through "Wix Contact".
    
     * lang - Type: string. Desc: answers language
     *
     * reason - Type: string. Desc: reason for ticket tubmission fail
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     * @param {accountAccessTicketSubmissionFailedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.accountAccessTicketSubmissionFailed = function (params) {
        return this.bi.log(__assign({ evid: 652 }, params));
    };
    /**
    * @typedef {Object} clickScheduleCallParams
    * @property {string} category - the subcategory the user selected
    * @property {number} eta - the estimated wait time presented to the user
    * @property {string} issue_id - unique identifier of phone ticket
    * @property {GUID} item_id - ticket id
    * @property {string} item_name - the title that user provided
    * @property {string} lang - null
    * @property {string} phone - phone number submitted by the user
    * @property {string} referral_name - null
    * @property {string} source_name - the page they clicked the button on
    * @property {Url} source_url - the page they clicked the button on
    * @property {string} time_slot - time slot selected by the user
    * @property {string} type - question\bug\wishlist
    **/
    /**
     * Name: click 'schedule call'. Evid: 544.
     * Event description: click 'schedule call' on the 'schedule a call with wix support' page.
    
     * category - Type: string. Desc: the subcategory the user selected
     *
     * eta - Type: numeric. Desc: the estimated wait time presented to the user
     *
     * issue_id - Type: string. Desc: unique identifier of phone ticket
     *
     * item_id - Type: guid. Desc: ticket id
     *
     * item_name - Type: string. Desc: the title that user provided
     *
     * lang - Type: lng.
     *
     * phone - Type: string. Desc: phone number submitted by the user
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string. Desc: the page they clicked the button on
     *
     * source_url - Type: url. Desc: the page they clicked the button on
     *
     * time_slot - Type: string. Desc: time slot selected by the user
     *
     * type - Type: string. Desc: question\bug\wishlist
     * @param {clickScheduleCallParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickScheduleCall = function (params) {
        return this.bi.log(__assign({ evid: 544 }, params));
    };
    /**
    * @typedef {Object} askingAQuestionParams
    * @property {DateTime} action_date - null
    * @property {string} editor_working_mode - editor mode {desktop, mobile}
    * @property {string} first_answer - null
    * @property {boolean} has_related - null
    * @property {string} lang - null
    * @property {string} origin - the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} panel_name - the editor component the widget was opened from {header settings, add a button...}
    * @property {string} question - null
    * @property {string} referral_name - null
    * @property {string} related_item - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    **/
    /**
     * Name: asking a question. Evid: 520.
     * Event description: Like evid 2005 from src 77 however only for Wix tenant.
    
     * action_date - Type: datetime.
     *
     * editor_working_mode - Type: string. Desc: editor mode {desktop, mobile}
     *
     * first_answer - Type: string.
     *
     * has_related - Type: bool.
     *
     * lang - Type: lng.
     *
     * origin - Type: string. Desc: the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * panel_name - Type: string. Desc: the editor component the widget was opened from {header settings, add a button...}
     *
     * question - Type: string.
     *
     * referral_name - Type: string.
     *
     * related_item - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     * @param {askingAQuestionParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.askingAQuestion = function (params) {
        return this.bi.log(__assign({ evid: 520 }, params));
    };
    /**
    * @typedef {Object} smsVerificationAnsBiCodeSubmissionErrorParams
    
    **/
    /**
     * Name: SMS Verification (ans_bi)- Code Submission Error. Evid: 616.
     * Event description: The user submits an incorrect code.
    
    
     * @param {smsVerificationAnsBiCodeSubmissionErrorParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.smsVerificationAnsBiCodeSubmissionError = function (params) {
        return this.bi.log(__assign({ evid: 616 }, params));
    };
    /**
    * @typedef {Object} clickingOnCategoryOnHomePageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: clicking on category on home page. Evid: 10.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnCategoryOnHomePageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnCategoryOnHomePage = function (params) {
        return this.bi.log(__assign({ evid: 10 }, params));
    };
    /**
    * @typedef {Object} wasItHelpfulSubmitFeedbackFormParams
    * @property {string} feedback - the feedback the user submitted
    * @property {GUID} item_id - article id
    * @property {string} item_name - article name
    * @property {string} item_url - article url
    * @property {string} lang - answers language
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} source_name - widget name
    **/
    /**
     * Name: Was it Helpful - Submit Feedback Form. Evid: 569.
     * Event description: Click submit feedback form after marking an article as unhelpful (evid 501, thumbs_down false).
    
     * feedback - Type: string. Desc: the feedback the user submitted
     *
     * item_id - Type: guid. Desc: article id
     *
     * item_name - Type: string. Desc: article name
     *
     * item_url - Type: string. Desc: article url
     *
     * lang - Type: string. Desc: answers language
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * source_name - Type: string. Desc: widget name
     * @param {wasItHelpfulSubmitFeedbackFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wasItHelpfulSubmitFeedbackForm = function (params) {
        return this.bi.log(__assign({ evid: 569 }, params));
    };
    /**
    * @typedef {Object} appClickOnScreenshareFromACallTicketParams
    * @property {GUID} agent_id - agent_id
    * @property {GUID} callid - the call id
    * @property {GUID} customer_uuid - Caller uuid
    * @property {string} lang - answers languages
    * @property {string} ticket_id - the ticket id
    * @property {GUID} agent_uuid - the agent who clicked on the recording link
    **/
    /**
     * Name: App - Click on Screenshare from a call ticket. Evid: 703.
     * Event description: Agent clicks on the link inside the ticket's custom fields in order to record the user's screen realtime during a call.
    
     * agent_id - Type: guid. Desc: agent_id
     *
     * callid - Type: guid. Desc: the call id
     *
     * customer_uuid - Type: guid. Desc: Caller uuid
     *
     * lang - Type: string. Desc: answers languages
     *
     * ticket_id - Type: string. Desc: the ticket id
     *
     * agent_uuid - Type: guid. Desc: the agent who clicked on the recording link
     * @param {appClickOnScreenshareFromACallTicketParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.appClickOnScreenshareFromACallTicket = function (params) {
        return this.bi.log(__assign({ evid: 703 }, params));
    };
    /**
    * @typedef {Object} quickAssistContactUsCanceledParams
    * @property {string} block_id - the id of the selected block
    * @property {string} block_name - the name of the selected block
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} channel - channel the users came from
    * @property {string} content_id - the id of the selected content
    * @property {string} content_name - the name of the selected content
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} source_name - "contact us" screen, "callback" screen, "ticket" screen, etc.
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Quick Assist - "Contact Us" Canceled. Evid: 568.
     * Event description: User left the "Contact Us" flow  (click on the X button, "No Thanks" button, etc.).
    
     * block_id - Type: string. Desc: the id of the selected block
     *
     * block_name - Type: string. Desc: the name of the selected block
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * content_id - Type: string. Desc: the id of the selected content
     *
     * content_name - Type: string. Desc: the name of the selected content
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * source_name - Type: string. Desc: "contact us" screen, "callback" screen, "ticket" screen, etc.
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {quickAssistContactUsCanceledParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistContactUsCanceled = function (params) {
        return this.bi.log(__assign({ evid: 568 }, params));
    };
    /**
    * @typedef {Object} quickAssistCallbackFailedParams
    * @property {string} block_id - the id of the selected block
    * @property {string} block_name - the name of the selected block
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} channel - channel the users came from
    * @property {string} content_id - the id of the selected content
    * @property {string} content_name - the name of the selected content
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} reason - reason for callback fail
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Quick Assist - Callback Failed. Evid: 567.
     * Event description: User was not able to schedule a callback.
    
     * block_id - Type: string. Desc: the id of the selected block
     *
     * block_name - Type: string. Desc: the name of the selected block
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * content_id - Type: string. Desc: the id of the selected content
     *
     * content_name - Type: string. Desc: the name of the selected content
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * reason - Type: string. Desc: reason for callback fail
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {quickAssistCallbackFailedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistCallbackFailed = function (params) {
        return this.bi.log(__assign({ evid: 567 }, params));
    };
    /**
    * @typedef {Object} postNewTopicClickingOnPostButtonParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} title - null
    * @property {string} type - null
    * @property {string} url - null
    **/
    /**
     * Name: Post new topic - clicking on post button. Evid: 69.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * title - Type: string.
     *
     * type - Type: string.
     *
     * url - Type: string.
     * @param {postNewTopicClickingOnPostButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.postNewTopicClickingOnPostButton = function (params) {
        return this.bi.log(__assign({ evid: 69 }, params));
    };
    /**
    * @typedef {Object} followTopicParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: follow topic. Evid: 72.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {followTopicParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.followTopic = function (params) {
        return this.bi.log(__assign({ evid: 72 }, params));
    };
    /**
    * @typedef {Object} clickingOnSubmitForEmailUsFormParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} title - null
    **/
    /**
     * Name: clicking on submit for email us form. Evid: 36.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * title - Type: string.
     * @param {clickingOnSubmitForEmailUsFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnSubmitForEmailUsForm = function (params) {
        return this.bi.log(__assign({ evid: 36 }, params));
    };
    /**
    * @typedef {Object} clickingOnEmailUsLinkParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: clicking on email us link. Evid: 35.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnEmailUsLinkParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnEmailUsLink = function (params) {
        return this.bi.log(__assign({ evid: 35 }, params));
    };
    /**
    * @typedef {Object} forumSearchClickedOutsideBoxParams
    * @property {string} first_answer - first answer user receives
    * @property {string} lang - null
    * @property {string} question - question submitted by the user
    * @property {string} referral_name - null
    * @property {string} source_name - source page name
    * @property {string} source_url - source page url
    **/
    /**
     * Name: forum search -> clicked outside box. Evid: 549.
     * Event description: user clicked outside box after using the search in the forum page.
    
     * first_answer - Type: string. Desc: first answer user receives
     *
     * lang - Type: lng.
     *
     * question - Type: string. Desc: question submitted by the user
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string. Desc: source page name
     *
     * source_url - Type: string. Desc: source page url
     * @param {forumSearchClickedOutsideBoxParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.forumSearchClickedOutsideBox = function (params) {
        return this.bi.log(__assign({ evid: 549 }, params));
    };
    /**
    * @typedef {Object} clickTheVideoLessonsButtonParams
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: click the (video lessons) button. Evid: 513.
    
    
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {clickTheVideoLessonsButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheVideoLessonsButton = function (params) {
        return this.bi.log(__assign({ evid: 513 }, params));
    };
    /**
    * @typedef {Object} clickOnPostQuestionOpenFormParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: click on post question (open form). Evid: 7.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickOnPostQuestionOpenFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnPostQuestionOpenForm = function (params) {
        return this.bi.log(__assign({ evid: 7 }, params));
    };
    /**
    * @typedef {Object} clickingOnNeedMoreHelpInEditorHelpCenterParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} path - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: Clicking on need more help in editor help center. Evid: 59.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * path - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnNeedMoreHelpInEditorHelpCenterParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnNeedMoreHelpInEditorHelpCenter = function (params) {
        return this.bi.log(__assign({ evid: 59 }, params));
    };
    /**
    * @typedef {Object} clickingOnPostButtonParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} title - null
    * @property {string} type - null
    * @property {string} url - null
    **/
    /**
     * Name: clicking on post button. Evid: 33.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * title - Type: string.
     *
     * type - Type: string.
     *
     * url - Type: string.
     * @param {clickingOnPostButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnPostButton = function (params) {
        return this.bi.log(__assign({ evid: 33 }, params));
    };
    /**
    * @typedef {Object} contactUsSelectIssueParams
    * @property {string} category - null
    * @property {string} first_answer - null
    * @property {string} item_name - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: contact us -> select issue. Evid: 526.
    
    
     * category - Type: string.
     *
     * first_answer - Type: string.
     *
     * item_name - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {contactUsSelectIssueParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.contactUsSelectIssue = function (params) {
        return this.bi.log(__assign({ evid: 526 }, params));
    };
    /**
    * @typedef {Object} ticketOrUserReplyCreatedParams
    
    **/
    /**
     * Name: Ticket or User-Reply Created. Evid: 701.
     * Event description: A UGC (ticket or user's reply) was created in Wix's tennant. This event is only for Real Time and is not stored (only collected)..
    
    
     * @param {ticketOrUserReplyCreatedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.ticketOrUserReplyCreated = function (params) {
        return this.bi.log(__assign({ evid: 701 }, params));
    };
    /**
    * @typedef {Object} wixContactOpenChatFailedClientParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution content
    * @property {string} announcement_text - announcement that is shown to user
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {GUID} chatid - answers chat guid
    * @property {string} context - base on which platform the event is trigger { Contact form,Direct}
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Open Chat Failed (Client). Evid: 598.
     * Event description: User was not able to open a chat conversation.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution content
     *
     * announcement_text - Type: string. Desc: announcement that is shown to user
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chatid - Type: guid. Desc: answers chat guid
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form,Direct}
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactOpenChatFailedClientParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactOpenChatFailedClient = function (params) {
        return this.bi.log(__assign({ evid: 598 }, params));
    };
    /**
    * @typedef {Object} recaptchaTryFailedParams
    * @property {string} lang - support language
    * @property {string} referral_name - null
    * @property {GUID} session_id - a unique guid for submit ticket flow
    * @property {string} source_name - source page name (kb,forum, etc.)
    * @property {string} source_url - source page url
    * @property {string} type - type of captcha (audio, text, photos)
    **/
    /**
     * Name: recaptcha try failed. Evid: 553.
     * Event description: user failed to enter the correct captcha.
    
     * lang - Type: string. Desc: support language
     *
     * referral_name - Type: string.
     *
     * session_id - Type: guid. Desc: a unique guid for submit ticket flow
     *
     * source_name - Type: string. Desc: source page name (kb,forum, etc.)
     *
     * source_url - Type: string. Desc: source page url
     *
     * type - Type: string. Desc: type of captcha (audio, text, photos)
     * @param {recaptchaTryFailedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.recaptchaTryFailed = function (params) {
        return this.bi.log(__assign({ evid: 553 }, params));
    };
    /**
    * @typedef {Object} clickingOnGoInSerachBoxInCategoryPageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} title - null
    * @property {string} item - null
    * @property {string} path - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} type - null
    **/
    /**
     * Name: Clicking on GO in serach box in category page. Evid: 58.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * title - Type: string.
     *
     * item - Type: string.
     *
     * path - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * type - Type: string.
     * @param {clickingOnGoInSerachBoxInCategoryPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnGoInSerachBoxInCategoryPage = function (params) {
        return this.bi.log(__assign({ evid: 58 }, params));
    };
    /**
    * @typedef {Object} contactUsClickOnAnswerParams
    * @property {string} answer - null
    * @property {number} index - null
    * @property {string} lang - null
    * @property {string} question - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: contact us -> click on answer. Evid: 528.
    
    
     * answer - Type: string.
     *
     * index - Type: numeric.
     *
     * lang - Type: lng.
     *
     * question - Type: string.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {contactUsClickOnAnswerParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.contactUsClickOnAnswer = function (params) {
        return this.bi.log(__assign({ evid: 528 }, params));
    };
    /**
    * @typedef {Object} quickAssistCallbackSuccessParams
    * @property {string} block_id - the id of the selected block
    * @property {string} block_name - the name of the selected block
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} channel - channel the users came from
    * @property {number} clid - the call id that was created in WCC
    * @property {string} content_id - the id of the selected content
    * @property {string} content_name - the name of the selected content
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Quick Assist - Callback Success. Evid: 566.
     * Event description: User was able to schedule a callback.
    
     * block_id - Type: string. Desc: the id of the selected block
     *
     * block_name - Type: string. Desc: the name of the selected block
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * clid - Type: numeric. Desc: the call id that was created in WCC
     *
     * content_id - Type: string. Desc: the id of the selected content
     *
     * content_name - Type: string. Desc: the name of the selected content
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {quickAssistCallbackSuccessParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistCallbackSuccess = function (params) {
        return this.bi.log(__assign({ evid: 566 }, params));
    };
    /**
    * @typedef {Object} clickATabParams
    * @property {string} item_name - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: click a tab. Evid: 506.
    
    
     * item_name - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {clickATabParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickATab = function (params) {
        return this.bi.log(__assign({ evid: 506 }, params));
    };
    /**
    * @typedef {Object} smsVerificationAnsBiExitOutOfCodeSubmissionFormParams
    
    **/
    /**
     * Name: SMS Verification (ans_bi)- Exit Out of Code Submission Form. Evid: 620.
     * Event description: The user exits out of the form for code submission.
    
    
     * @param {smsVerificationAnsBiExitOutOfCodeSubmissionFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.smsVerificationAnsBiExitOutOfCodeSubmissionForm = function (params) {
        return this.bi.log(__assign({ evid: 620 }, params));
    };
    /**
    * @typedef {Object} wixContactAnnouncementClickedParams
    * @property {string} announcement_text - the announcement that is shows to users
    * @property {string} lang - answers language
    **/
    /**
     * Name: Wix Contact - Announcement Clicked. Evid: 587.
     * Event description: Announcement was clicked.
    
     * announcement_text - Type: string. Desc: the announcement that is shows to users
     *
     * lang - Type: string. Desc: answers language
     * @param {wixContactAnnouncementClickedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactAnnouncementClicked = function (params) {
        return this.bi.log(__assign({ evid: 587 }, params));
    };
    /**
    * @typedef {Object} callSchedulerClickRescheduleParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Click "Reschedule". Evid: 608.
     * Event description: User clicks the "Reschedule" button on the My Scheduled Callbacks page..
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerClickRescheduleParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerClickReschedule = function (params) {
        return this.bi.log(__assign({ evid: 608 }, params));
    };
    /**
    * @typedef {Object} quickSearchFirstAnswerDisplayedParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: Quick Search - first answer displayed. Evid: 64.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {quickSearchFirstAnswerDisplayedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickSearchFirstAnswerDisplayed = function (params) {
        return this.bi.log(__assign({ evid: 64 }, params));
    };
    /**
    * @typedef {Object} wixContactUserEnterToRequestCallbackPageParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} chat_status - is the chat available for conversations, closed, etc.
    * @property {string} context - base on which platform the event is trigger { Contact form,Direct}
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} intent_name - who trigger the page view (automatic,user)
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - User enter to  "Request Callback" page. Evid: 602.
     * Event description: "Request Callback" page is appear.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chat_status - Type: string. Desc: is the chat available for conversations, closed, etc.
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form,Direct}
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * intent_name - Type: string. Desc: who trigger the page view (automatic,user)
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactUserEnterToRequestCallbackPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactUserEnterToRequestCallbackPage = function (params) {
        return this.bi.log(__assign({ evid: 602 }, params));
    };
    /**
    * @typedef {Object} gotNoAnswerParams
    * @property {string} editor_working_mode - editor mode {desktop, mobile}
    * @property {string} lang - null
    * @property {string} origin - the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} panel_name - the editor component the widget was opened from {header settings, add a button...}
    * @property {string} question - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    **/
    /**
     * Name: got no answer. Evid: 537.
    
    
     * editor_working_mode - Type: string. Desc: editor mode {desktop, mobile}
     *
     * lang - Type: lng.
     *
     * origin - Type: string. Desc: the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * panel_name - Type: string. Desc: the editor component the widget was opened from {header settings, add a button...}
     *
     * question - Type: string.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     * @param {gotNoAnswerParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.gotNoAnswer = function (params) {
        return this.bi.log(__assign({ evid: 537 }, params));
    };
    /**
    * @typedef {Object} appAgentReplyParams
    * @property {string} lang - answers languages
    * @property {string} referral_name - null
    **/
    /**
     * Name: App - Agent Reply. Evid: 552.
     * Event description: Agent replies to a user via Answers App.
    
     * lang - Type: string. Desc: answers languages
     *
     * referral_name - Type: string.
     * @param {appAgentReplyParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.appAgentReply = function (params) {
        return this.bi.log(__assign({ evid: 552 }, params));
    };
    /**
    * @typedef {Object} askingQuestionParams
    * @property {string} answer - null
    * @property {string} bug_notice - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: Asking Question. Evid: 1.
     * Event description: test.
    
     * answer - Type: string.
     *
     * bug_notice - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {askingQuestionParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.askingQuestion = function (params) {
        return this.bi.log(__assign({ evid: 1 }, params));
    };
    /**
    * @typedef {Object} wixWidgetChatWasSuccessfullyCreatedParams
    * @property {string} current_platform - current_platform - where that chat is opened from currently { Editor, Biz manager, Domain page .... }
    * @property {string} lang - Answer's lang
    * @property {string} open_method - open method (api,click)
    * @property {string} parent_name - where the widget is opened from (source page name)
    * @property {string} parent_url -
    * @property {string} referral_name -
    * @property {Url} referral_url - where the widget is opened from
    * @property {string} source_name - source name
    * @property {GUID} ticket_id - ticket id
    **/
    /**
     * Name: Wix Widget  - Chat was Successfully Created. Evid: 664.
     * Event description: the event is trigger when a user requests a chat.
    
     * current_platform - Type: string. Desc: current_platform - where that chat is opened from currently { Editor, Biz manager, Domain page .... }
     *
     * lang - Type: string. Desc: Answer's lang
     *
     * open_method - Type: string. Desc: open method (api,click)
     *
     * parent_name - Type: string. Desc: where the widget is opened from (source page name)
     *
     * parent_url - Type: string.
     *
     * referral_name - Type: string.
     *
     * referral_url - Type: url. Desc: where the widget is opened from
     *
     * source_name - Type: string. Desc: source name
     *
     * ticket_id - Type: guid. Desc: ticket id
     * @param {wixWidgetChatWasSuccessfullyCreatedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixWidgetChatWasSuccessfullyCreated = function (params) {
        return this.bi.log(__assign({ evid: 664 }, params));
    };
    /**
    * @typedef {Object} callSchedulerScheduledCallbackSuccessParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} local_time_zone - name of the user's time zone
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Scheduled Callback Success. Evid: 605.
     * Event description: User was able to schedule a callback.
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * local_time_zone - Type: string. Desc: name of the user's time zone
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerScheduledCallbackSuccessParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerScheduledCallbackSuccess = function (params) {
        return this.bi.log(__assign({ evid: 605 }, params));
    };
    /**
    * @typedef {Object} quickAssistSubmitCallbackFormParams
    * @property {string} block_id - the id of the selected block
    * @property {string} block_name - the name of the selected block
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} channel - channel the users came from
    * @property {string} content_id - the id of the selected content
    * @property {string} content_name - the name of the selected content
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Quick Assist - Submit Callback form. Evid: 565.
     * Event description: Clicking the "Request Callback" button at the bottom of the callback form.
    
     * block_id - Type: string. Desc: the id of the selected block
     *
     * block_name - Type: string. Desc: the name of the selected block
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * content_id - Type: string. Desc: the id of the selected content
     *
     * content_name - Type: string. Desc: the name of the selected content
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {quickAssistSubmitCallbackFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistSubmitCallbackForm = function (params) {
        return this.bi.log(__assign({ evid: 565 }, params));
    };
    /**
    * @typedef {Object} viewFeaturedArticlesInHeaderHelpWidgetParams
    * @property {string} featured_articles_item_ids - Article IDs  for the featured article listed in the widget (1st position, 2nd position, 3rd position)
    * @property {string} featured_articles_lang - Article language
    * @property {string} source_name - widget name
    **/
    /**
     * Name: View featured articles in header help widget. Evid: 624.
     * Event description: View event when opening the 'my site' help widget ..
    
     * featured_articles_item_ids - Type: string. Desc: Article IDs  for the featured article listed in the widget (1st position, 2nd position, 3rd position)
     *
     * featured_articles_lang - Type: string. Desc: Article language
     *
     * source_name - Type: string. Desc: widget name
     * @param {viewFeaturedArticlesInHeaderHelpWidgetParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.viewFeaturedArticlesInHeaderHelpWidget = function (params) {
        return this.bi.log(__assign({ evid: 624 }, params));
    };
    /**
    * @typedef {Object} clickALinkInsideArticleParams
    * @property {string} item_name - id of the viewed item
    * @property {string} item_url - url of the viewed item
    * @property {string} link_url - the link the user clicked on
    * @property {string} referral_name - null
    **/
    /**
     * Name: Click a link inside article. Evid: 557.
     * Event description: Event created for Dina in order to track how many users click a specific link in an article they are about to distribute to their users.
    
     * item_name - Type: string. Desc: id of the viewed item
     *
     * item_url - Type: string. Desc: url of the viewed item
     *
     * link_url - Type: string. Desc: the link the user clicked on
     *
     * referral_name - Type: string.
     * @param {clickALinkInsideArticleParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickALinkInsideArticle = function (params) {
        return this.bi.log(__assign({ evid: 557 }, params));
    };
    /**
    * @typedef {Object} forumSearchGotNoAnswerParams
    * @property {string} lang - null
    * @property {string} question - question submitted by the user
    * @property {string} referral_name - null
    * @property {string} source_name - source page name
    * @property {string} source_url - source page url
    **/
    /**
     * Name: forum search -> got no answer. Evid: 550.
     * Event description: got no answer when using the forum search.
    
     * lang - Type: lng.
     *
     * question - Type: string. Desc: question submitted by the user
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string. Desc: source page name
     *
     * source_url - Type: string. Desc: source page url
     * @param {forumSearchGotNoAnswerParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.forumSearchGotNoAnswer = function (params) {
        return this.bi.log(__assign({ evid: 550 }, params));
    };
    /**
    * @typedef {Object} clickCancelCallButtonParams
    * @property {string} call_type - phone call options: scheduled a call \ call now
    * @property {string} category - the subcategory the user selected
    * @property {number} eta - the estimated wait time presented to the user
    * @property {string} issue_id - unique identifier of phone ticket
    * @property {GUID} item_id - ticket id
    * @property {string} item_name - the title that user provided
    * @property {string} lang - null
    * @property {string} phone - phone number submitted by the user
    * @property {string} referral_name - null
    * @property {string} type - question\bug\wishlist
    **/
    /**
     * Name: click 'cancel call' button. Evid: 542.
     * Event description: clicking the 'cancel call' button.
    
     * call_type - Type: string. Desc: phone call options: scheduled a call \ call now
     *
     * category - Type: string. Desc: the subcategory the user selected
     *
     * eta - Type: numeric. Desc: the estimated wait time presented to the user
     *
     * issue_id - Type: string. Desc: unique identifier of phone ticket
     *
     * item_id - Type: guid. Desc: ticket id
     *
     * item_name - Type: string. Desc: the title that user provided
     *
     * lang - Type: lng.
     *
     * phone - Type: string. Desc: phone number submitted by the user
     *
     * referral_name - Type: string.
     *
     * type - Type: string. Desc: question\bug\wishlist
     * @param {clickCancelCallButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickCancelCallButton = function (params) {
        return this.bi.log(__assign({ evid: 542 }, params));
    };
    /**
    * @typedef {Object} hpClickingOnCategoryParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: HP - clicking on category. Evid: 60.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {hpClickingOnCategoryParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.hpClickingOnCategory = function (params) {
        return this.bi.log(__assign({ evid: 60 }, params));
    };
    /**
    * @typedef {Object} chooseSubCategoryParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} wixLanguage - user locale + country name, for example, en-US (from a cookie)
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: choose sub- category. Evid: 4.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * wixLanguage - Type: lng. Desc: user locale + country name, for example, en-US (from a cookie)
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {chooseSubCategoryParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.chooseSubCategory = function (params) {
        return this.bi.log(__assign({ evid: 4 }, params));
    };
    /**
    * @typedef {Object} wixContactOpenWixContactAttemptParams
    * @property {string} context - base on which platform the event is trigger { Contact form, Other}
    * @property {string} lang - Answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    **/
    /**
     * Name: Wix Contact - Open "Wix Contact" - Attempt. Evid: 592.
     * Event description: User opens "Wix Contact" from desktop. The Contact form has started to load..
    
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form, Other}
     *
     * lang - Type: string. Desc: Answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     * @param {wixContactOpenWixContactAttemptParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactOpenWixContactAttempt = function (params) {
        return this.bi.log(__assign({ evid: 592 }, params));
    };
    /**
    * @typedef {Object} oldContactFormTicketSubmissionFailedParams
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} reason - reason for ticket tubmission fail
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - the topic/assign group of the ticket
    **/
    /**
     * Name: Old Contact Form - Ticket Submission Failed. Evid: 591.
     * Event description: User was not able to submit a ticket through the old contact form.
    
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * reason - Type: string. Desc: reason for ticket tubmission fail
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: the topic/assign group of the ticket
     * @param {oldContactFormTicketSubmissionFailedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.oldContactFormTicketSubmissionFailed = function (params) {
        return this.bi.log(__assign({ evid: 591 }, params));
    };
    /**
    * @typedef {Object} listenToRecordedCallParams
    * @property {GUID} answers_uuid - user id in answers users
    * @property {string} lang - answers languages
    * @property {string} ticket_id - the ticket id
    * @property {GUID} uuid - the user who listened to the call
    **/
    /**
     * Name: App - Listen to Recorded Call. Evid: 702.
     * Event description: recorded call is being listened to by a user in Answers.
    
     * answers_uuid - Type: guid. Desc: user id in answers users
     *
     * lang - Type: string. Desc: answers languages
     *
     * ticket_id - Type: string. Desc: the ticket id
     *
     * uuid - Type: guid. Desc: the user who listened to the call
     * @param {listenToRecordedCallParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.listenToRecordedCall = function (params) {
        return this.bi.log(__assign({ evid: 702 }, params));
    };
    /**
    * @typedef {Object} clickingOnSidebarBannerChangeProductParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: clicking on sidebar banner- change product. Evid: 37.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {clickingOnSidebarBannerChangeProductParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnSidebarBannerChangeProduct = function (params) {
        return this.bi.log(__assign({ evid: 37 }, params));
    };
    /**
    * @typedef {Object} clickTheIHaveThisProblemBugButtonParams
    * @property {string} category - null
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} sub_category - null
    * @property {boolean} thumbs_up - null
    **/
    /**
     * Name: click the (i have this problem (bug)) button. Evid: 503.
    
    
     * category - Type: string.
     *
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * sub_category - Type: string.
     *
     * thumbs_up - Type: bool.
     * @param {clickTheIHaveThisProblemBugButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheIHaveThisProblemBugButton = function (params) {
        return this.bi.log(__assign({ evid: 503 }, params));
    };
    /**
    * @typedef {Object} clickTheReadMoreInAllResultsPageParams
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} order - null
    * @property {string} question - the question the user searched for before getting to this page
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    **/
    /**
     * Name: click the (read more in (all results) page). Evid: 523.
    
    
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * order - Type: string.
     *
     * question - Type: string. Desc: the question the user searched for before getting to this page
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     * @param {clickTheReadMoreInAllResultsPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheReadMoreInAllResultsPage = function (params) {
        return this.bi.log(__assign({ evid: 523 }, params));
    };
    /**
    * @typedef {Object} wixContactClickOnBannerParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {Url} banner_target_url - The button link url
    * @property {string} banner_title - banner's content title (in case changing)
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Click on Banner. Evid: 593.
     * Event description: Clicking the "Get Started" button on the banner.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * banner_target_url - Type: url. Desc: The button link url
     *
     * banner_title - Type: string. Desc: banner's content title (in case changing)
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactClickOnBannerParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactClickOnBanner = function (params) {
        return this.bi.log(__assign({ evid: 593 }, params));
    };
    /**
    * @typedef {Object} callSchedulerLoadScheduleACallbackPageParams
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler - Load “Schedule a Callback" page. Evid: 622.
     * Event description: Loading the “Schedule a Callback" page.
    
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerLoadScheduleACallbackPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerLoadScheduleACallbackPage = function (params) {
        return this.bi.log(__assign({ evid: 622 }, params));
    };
    /**
    * @typedef {Object} oldContactFormTicketSubmissionSuccessParams
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticket_id - the id of the created ticket
    * @property {string} ticket_url - the url of the created ticket
    * @property {string} topic - the topic/assign group of the ticket
    **/
    /**
     * Name: Old Contact Form - Ticket Submission Success. Evid: 590.
     * Event description: User was able to submit a ticket through the old contact form.
    
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticket_id - Type: string. Desc: the id of the created ticket
     *
     * ticket_url - Type: string. Desc: the url of the created ticket
     *
     * topic - Type: string. Desc: the topic/assign group of the ticket
     * @param {oldContactFormTicketSubmissionSuccessParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.oldContactFormTicketSubmissionSuccess = function (params) {
        return this.bi.log(__assign({ evid: 590 }, params));
    };
    /**
    * @typedef {Object} wixContactAnnouncementToggledOffParams
    * @property {string} announcement_text - the announcement that is shows to users
    * @property {string} lang - answers language
    **/
    /**
     * Name: Wix Contact - Announcement Toggled Off. Evid: 586.
     * Event description: Announcement on the current issue has been toggled off.
    
     * announcement_text - Type: string. Desc: the announcement that is shows to users
     *
     * lang - Type: string. Desc: answers language
     * @param {wixContactAnnouncementToggledOffParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactAnnouncementToggledOff = function (params) {
        return this.bi.log(__assign({ evid: 586 }, params));
    };
    /**
    * @typedef {Object} articleClickOnBannerParams
    * @property {string} banner_text - the text that appear on the banner
    * @property {Url} banner_url - the target URL of the banner
    * @property {GUID} item_id - the id of the article the banner was click in
    * @property {string} item_name - the name of the article the banner was click in
    * @property {string} lang - Answers language
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} source_name - the page they clicked the button on
    **/
    /**
     * Name: Article - Click On Banner. Evid: 594.
     * Event description: click on a banner inside an article.
    
     * banner_text - Type: string. Desc: the text that appear on the banner
     *
     * banner_url - Type: url. Desc: the target URL of the banner
     *
     * item_id - Type: guid. Desc: the id of the article the banner was click in
     *
     * item_name - Type: string. Desc: the name of the article the banner was click in
     *
     * lang - Type: lng. Desc: Answers language
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * source_name - Type: string. Desc: the page they clicked the button on
     * @param {articleClickOnBannerParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.articleClickOnBanner = function (params) {
        return this.bi.log(__assign({ evid: 594 }, params));
    };
    /**
    * @typedef {Object} forumUsePaginationParams
    * @property {string} lang - null
    * @property {string} referral_name - null
    **/
    /**
     * Name: forum -> use pagination. Evid: 551.
     * Event description: used the pagination in the forum page.
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     * @param {forumUsePaginationParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.forumUsePagination = function (params) {
        return this.bi.log(__assign({ evid: 551 }, params));
    };
    /**
    * @typedef {Object} wixContactClickOnSubmitTicketParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} chat_status - is the chat available for conversations, closed, etc.
    * @property {string} context - base on which platform the event is trigger { Contact form,Direct}
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Click on "Submit Ticket". Evid: 576.
     * Event description: Clicking the "Submit Ticket" button.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chat_status - Type: string. Desc: is the chat available for conversations, closed, etc.
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form,Direct}
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactClickOnSubmitTicketParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactClickOnSubmitTicket = function (params) {
        return this.bi.log(__assign({ evid: 576 }, params));
    };
    /**
    * @typedef {Object} clickOnATicketParams
    * @property {string} category - null
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: click on a ticket. Evid: 518.
    
    
     * category - Type: string.
     *
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickOnATicketParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnATicket = function (params) {
        return this.bi.log(__assign({ evid: 518 }, params));
    };
    /**
    * @typedef {Object} quickAssistClickOnSubmitTicketParams
    * @property {string} block_id - the id of the selected block
    * @property {string} block_name - the name of the selected block
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} channel - channel the users came from
    * @property {string} content_id - the id of the selected content
    * @property {string} content_name - the name of the selected content
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} source_name - location of the button ("Contact Us", "Callback failed", "already requested callback")
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Quick Assist - Click on "Submit Ticket". Evid: 563.
     * Event description: Clicking the "Submit TIcket" button.
    
     * block_id - Type: string. Desc: the id of the selected block
     *
     * block_name - Type: string. Desc: the name of the selected block
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * content_id - Type: string. Desc: the id of the selected content
     *
     * content_name - Type: string. Desc: the name of the selected content
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * source_name - Type: string. Desc: location of the button ("Contact Us", "Callback failed", "already requested callback")
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {quickAssistClickOnSubmitTicketParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistClickOnSubmitTicket = function (params) {
        return this.bi.log(__assign({ evid: 563 }, params));
    };
    /**
    * @typedef {Object} clickingOnGoInSerachBoxMainPageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: Clicking on GO in serach box main page. Evid: 52.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnGoInSerachBoxMainPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnGoInSerachBoxMainPage = function (params) {
        return this.bi.log(__assign({ evid: 52 }, params));
    };
    /**
    * @typedef {Object} clickTheFollowUnFollowButtonParams
    * @property {string} category - null
    * @property {GUID} item_id - the article's id
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} sub_category - null
    * @property {boolean} thumbs_up - null
    **/
    /**
     * Name: click the (follow/un-follow) button. Evid: 504.
    
    
     * category - Type: string.
     *
     * item_id - Type: guid. Desc: the article's id
     *
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * sub_category - Type: string.
     *
     * thumbs_up - Type: bool.
     * @param {clickTheFollowUnFollowButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheFollowUnFollowButton = function (params) {
        return this.bi.log(__assign({ evid: 504 }, params));
    };
    /**
    * @typedef {Object} selectACategoryParams
    * @property {string} category - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: select a category. Evid: 507.
    
    
     * category - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * sub_category - Type: string.
     * @param {selectACategoryParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.selectACategory = function (params) {
        return this.bi.log(__assign({ evid: 507 }, params));
    };
    /**
    * @typedef {Object} wixContactSubmitCallbackFormParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} chat_status - is the chat available for conversations, closed, etc.
    * @property {string} context - base on which platform the event is trigger { Contact form, Other}
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Submit Callback form. Evid: 579.
     * Event description: Clicking the "Request Callback" button at the bottom of the callback form.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chat_status - Type: string. Desc: is the chat available for conversations, closed, etc.
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form, Other}
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactSubmitCallbackFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactSubmitCallbackForm = function (params) {
        return this.bi.log(__assign({ evid: 579 }, params));
    };
    /**
    * @typedef {Object} clickingOnReadMoreInFaqParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} path - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: Clicking on read more in faq. Evid: 57.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * path - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnReadMoreInFaqParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnReadMoreInFaq = function (params) {
        return this.bi.log(__assign({ evid: 57 }, params));
    };
    /**
    * @typedef {Object} loginClickingEmailUs71Params
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: Login - clicking 'email us'. Evid: 71.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {loginClickingEmailUs71Params} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.loginClickingEmailUs71 = function (params) {
        return this.bi.log(__assign({ evid: 71 }, params));
    };
    /**
    * @typedef {Object} quickSearchQuestionEnteredParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: Quick Search - question entered. Evid: 63.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {quickSearchQuestionEnteredParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickSearchQuestionEntered = function (params) {
        return this.bi.log(__assign({ evid: 63 }, params));
    };
    /**
    * @typedef {Object} clickOnLearningCenterLinkParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} link - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {Url} url - null
    **/
    /**
     * Name: Click on learning center link. Evid: 6.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * link - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: url.
     * @param {clickOnLearningCenterLinkParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnLearningCenterLink = function (params) {
        return this.bi.log(__assign({ evid: 6 }, params));
    };
    /**
    * @typedef {Object} smsVerificationAnsBiMessageSentParams
    
    **/
    /**
     * Name: SMS Verification (ans_bi)- Message Sent. Evid: 613.
     * Event description: The verification message is sent to the phone number entered by the user..
    
    
     * @param {smsVerificationAnsBiMessageSentParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.smsVerificationAnsBiMessageSent = function (params) {
        return this.bi.log(__assign({ evid: 613 }, params));
    };
    /**
    * @typedef {Object} callSchedulerClickRescheduleOrCancelCallParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Click "Reschedule or cancel call". Evid: 606.
     * Event description: User clicks the "Reschedule or cancel call" button after scheduling a call.
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerClickRescheduleOrCancelCallParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerClickRescheduleOrCancelCall = function (params) {
        return this.bi.log(__assign({ evid: 606 }, params));
    };
    /**
    * @typedef {Object} replyATicketParams
    * @property {boolean} is_thread_creator - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: reply a ticket. Evid: 508.
    
    
     * is_thread_creator - Type: bool.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {replyATicketParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.replyATicket = function (params) {
        return this.bi.log(__assign({ evid: 508 }, params));
    };
    /**
    * @typedef {Object} clickOnMenuItemParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} item - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: click on menu item. Evid: 20.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * item - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {clickOnMenuItemParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnMenuItem = function (params) {
        return this.bi.log(__assign({ evid: 20 }, params));
    };
    /**
    * @typedef {Object} clickingOnSubCategoryOnHomePageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: clicking on sub- category on home page. Evid: 11.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnSubCategoryOnHomePageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnSubCategoryOnHomePage = function (params) {
        return this.bi.log(__assign({ evid: 11 }, params));
    };
    /**
    * @typedef {Object} callSchedulerOpenMyScheduledCallsPageParams
    * @property {string} button_name - The button the user clicked on to access this page. (Done/Reschedule or cancel call/X)
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Open My Scheduled Calls page. Evid: 609.
     * Event description: User opens the My Scheduled Calls page.
    
     * button_name - Type: string. Desc: The button the user clicked on to access this page. (Done/Reschedule or cancel call/X)
     *
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerOpenMyScheduledCallsPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerOpenMyScheduledCallsPage = function (params) {
        return this.bi.log(__assign({ evid: 609 }, params));
    };
    /**
    * @typedef {Object} wixContactClickOnTheActionButtonParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Click on the Action Button. Evid: 574.
     * Event description: User click on the action button next to the solution content.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactClickOnTheActionButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactClickOnTheActionButton = function (params) {
        return this.bi.log(__assign({ evid: 574 }, params));
    };
    /**
    * @typedef {Object} wixContactClickToContactButtonParams
    * @property {string} button_text - currently: "Click to Contact"
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} chat_status - is the chat available for conversations, closed, etc.
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - "Click to Contact" button. Evid: 595.
     * Event description: Clicking the "Click to Contact" button after the 3rd section of the contact page.
    
     * button_text - Type: string. Desc: currently: "Click to Contact"
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chat_status - Type: string. Desc: is the chat available for conversations, closed, etc.
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactClickToContactButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactClickToContactButton = function (params) {
        return this.bi.log(__assign({ evid: 595 }, params));
    };
    /**
    * @typedef {Object} clickingOnAnswersBannerParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: clicking on Answers banner. Evid: 13.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnAnswersBannerParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnAnswersBanner = function (params) {
        return this.bi.log(__assign({ evid: 13 }, params));
    };
    /**
    * @typedef {Object} wixContactTicketSubmissionFailedClientParams
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} reason - reason for ticket tubmission fail
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    * @property {string} topic - the topic of the ticket (selected from the "Issue Subject" dropdown)
    **/
    /**
     * Name: Wix Contact - Ticket Submission Failed  (client). Evid: 584.
     * Event description: User was not able to submit a ticket through "Wix Contact".
    
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * reason - Type: string. Desc: reason for ticket tubmission fail
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     *
     * topic - Type: string. Desc: the topic of the ticket (selected from the "Issue Subject" dropdown)
     * @param {wixContactTicketSubmissionFailedClientParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactTicketSubmissionFailedClient = function (params) {
        return this.bi.log(__assign({ evid: 584 }, params));
    };
    /**
    * @typedef {Object} clickOnAnswerParams
    * @property {DateTime} action_date - null
    * @property {string} answer - null
    * @property {string} editor_working_mode - editor mode {desktop, mobile}
    * @property {boolean} has_related - null
    * @property {boolean} is_related - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} order - null
    * @property {string} origin - the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} panel_name - the editor component the widget was opened from {header settings, add a button...}
    * @property {string} question - null
    * @property {string} referral_name - null
    * @property {string} related_item - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    **/
    /**
     * Name: click on answer. Evid: 521.
    
    
     * action_date - Type: datetime.
     *
     * answer - Type: string.
     *
     * editor_working_mode - Type: string. Desc: editor mode {desktop, mobile}
     *
     * has_related - Type: bool.
     *
     * is_related - Type: bool.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * order - Type: string.
     *
     * origin - Type: string. Desc: the editor component the widget was opened from {gfpp, panel, tool bar, top bar, add menu}
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * panel_name - Type: string. Desc: the editor component the widget was opened from {header settings, add a button...}
     *
     * question - Type: string.
     *
     * referral_name - Type: string.
     *
     * related_item - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     * @param {clickOnAnswerParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnAnswer = function (params) {
        return this.bi.log(__assign({ evid: 521 }, params));
    };
    /**
    * @typedef {Object} clickOnContinueButtonParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: click on continue button. Evid: 5.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickOnContinueButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnContinueButton = function (params) {
        return this.bi.log(__assign({ evid: 5 }, params));
    };
    /**
    * @typedef {Object} quickSearchClickingMoreResultsParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: Quick Search - clicking 'more results'. Evid: 66.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {quickSearchClickingMoreResultsParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickSearchClickingMoreResults = function (params) {
        return this.bi.log(__assign({ evid: 66 }, params));
    };
    /**
    * @typedef {Object} screenshareLinkWasEnabledForACallLabelEventParams
    * @property {GUID} agent_id - agent_id
    * @property {GUID} callid - the call id
    * @property {GUID} customer_uuid - Caller uuid
    * @property {string} label_name - {A - no link was added ,B - the link was added}
    * @property {string} lang - answers languages
    * @property {string} ticket_id - the ticket id
    **/
    /**
     * Name: Label event - Screenshare link was enabled or disabled for a call. Evid: 704.
     * Event description: Screenshare link option is enabled or disabled for a specific call --> meaning - this call is assigned to an AB test group A or B.
    
     * agent_id - Type: guid. Desc: agent_id
     *
     * callid - Type: guid. Desc: the call id
     *
     * customer_uuid - Type: guid. Desc: Caller uuid
     *
     * label_name - Type: string. Desc: {A - no link was added ,B - the link was added}
     *
     * lang - Type: string. Desc: answers languages
     *
     * ticket_id - Type: string. Desc: the ticket id
     * @param {screenshareLinkWasEnabledForACallLabelEventParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.screenshareLinkWasEnabledForACallLabelEvent = function (params) {
        return this.bi.log(__assign({ evid: 704 }, params));
    };
    /**
    * @typedef {Object} forumSearchAskingAQuestionParams
    * @property {string} first_answer - first answer user receives
    * @property {string} lang - null
    * @property {string} question - question submitted by the user
    * @property {string} referral_name - null
    * @property {string} source_name - source page name
    * @property {string} source_url - source page url
    **/
    /**
     * Name: forum search -> asking a question. Evid: 546.
     * Event description: ask a question in the forum search.
    
     * first_answer - Type: string. Desc: first answer user receives
     *
     * lang - Type: lng.
     *
     * question - Type: string. Desc: question submitted by the user
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string. Desc: source page name
     *
     * source_url - Type: string. Desc: source page url
     * @param {forumSearchAskingAQuestionParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.forumSearchAskingAQuestion = function (params) {
        return this.bi.log(__assign({ evid: 546 }, params));
    };
    /**
    * @typedef {Object} clickTheSeeAllResultsLinkParams
    * @property {string} lang - null
    * @property {string} question - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    **/
    /**
     * Name: click the (see all results) link. Evid: 522.
    
    
     * lang - Type: lng.
     *
     * question - Type: string.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     * @param {clickTheSeeAllResultsLinkParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheSeeAllResultsLink = function (params) {
        return this.bi.log(__assign({ evid: 522 }, params));
    };
    /**
    * @typedef {Object} clickingOnTutorialInThirdPageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} item - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} title - null
    **/
    /**
     * Name: clicking on tutorial in third page. Evid: 55.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * item - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * title - Type: string.
     * @param {clickingOnTutorialInThirdPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnTutorialInThirdPage = function (params) {
        return this.bi.log(__assign({ evid: 55 }, params));
    };
    /**
    * @typedef {Object} deleteMeParams
    
    **/
    /**
     * Name: delete me. Evid: 9.
     * Event description: pp.
    
    
     * @param {deleteMeParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.deleteMe = function (params) {
        return this.bi.log(__assign({ evid: 9 }, params));
    };
    /**
    * @typedef {Object} wixWidgetOpenAWidgetClientParams
    * @property {string} current_platform - current_platform - where that chat is opened from currently { Editor, Biz manager, Domain page .... }
    * @property {string} lang - answer lang
    * @property {string} module_name - first used module (home, chat, contact form, etc)
    * @property {string} open_method - open method (api (automatically),click (user click),agent)
    * @property {string} parent_name -
    * @property {string} parent_url -
    * @property {string} referral_name -
    * @property {Url} referral_url - where the widget is opened from (source page url)
    * @property {string} source_name - source name
    **/
    /**
     * Name: Wix Widget  - Open a Widget (Client). Evid: 662.
     * Event description: The event is trigger when a widget is opened.
    
     * current_platform - Type: string. Desc: current_platform - where that chat is opened from currently { Editor, Biz manager, Domain page .... }
     *
     * lang - Type: string. Desc: answer lang
     *
     * module_name - Type: string. Desc: first used module (home, chat, contact form, etc)
     *
     * open_method - Type: string. Desc: open method (api (automatically),click (user click),agent)
     *
     * parent_name - Type: string.
     *
     * parent_url - Type: string.
     *
     * referral_name - Type: string.
     *
     * referral_url - Type: url. Desc: where the widget is opened from (source page url)
     *
     * source_name - Type: string. Desc: source name
     * @param {wixWidgetOpenAWidgetClientParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixWidgetOpenAWidgetClient = function (params) {
        return this.bi.log(__assign({ evid: 662 }, params));
    };
    /**
    * @typedef {Object} accountAccessSubmitTicketFormParams
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    **/
    /**
     * Name: Account Access - Submit Ticket Form. Evid: 650.
     * Event description: Clicking the "Submit a ticket" button at the bottom of the ticket form.
    
     * lang - Type: string. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     * @param {accountAccessSubmitTicketFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.accountAccessSubmitTicketForm = function (params) {
        return this.bi.log(__assign({ evid: 650 }, params));
    };
    /**
    * @typedef {Object} quickSearchAnswerSelectedByUserParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: Quick Search - answer selected by user. Evid: 65.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {quickSearchAnswerSelectedByUserParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickSearchAnswerSelectedByUser = function (params) {
        return this.bi.log(__assign({ evid: 65 }, params));
    };
    /**
    * @typedef {Object} quickAssistBlockClickParams
    * @property {string} block_id - the id of the selected block
    * @property {string} block_name - the name of the selected block
    * @property {string} channel - channel the users came from
    * @property {number} clid - call id of the user that reach the TS from sms link sent to him
    * @property {boolean} contact_toggle - 1- contact option available from every block . 0- contact option available only after clicking 'wasn't helpful' and from 'get help with a different problem'
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    **/
    /**
     * Name: Quick Assist - Block Click. Evid: 560.
     * Event description: clicking on a block in the troubleshooter menu.
    
     * block_id - Type: string. Desc: the id of the selected block
     *
     * block_name - Type: string. Desc: the name of the selected block
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * clid - Type: numeric. Desc: call id of the user that reach the TS from sms link sent to him
     *
     * contact_toggle - Type: bool. Desc: 1- contact option available from every block . 0- contact option available only after clicking 'wasn't helpful' and from 'get help with a different problem'
     *
     * lang - Type: lng. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     * @param {quickAssistBlockClickParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistBlockClick = function (params) {
        return this.bi.log(__assign({ evid: 560 }, params));
    };
    /**
    * @typedef {Object} searchAbtestParams
    * @property {string} ablabel - null
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: search abtest. Evid: 27.
    
    
     * ablabel - Type: string.
     *
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {searchAbtestParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.searchAbtest = function (params) {
        return this.bi.log(__assign({ evid: 27 }, params));
    };
    /**
    * @typedef {Object} wixContactOpenWixContactFromMobileParams
    * @property {string} lang - answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    **/
    /**
     * Name: Wix Contact - Open "Wix Contact" From Mobile. Evid: 583.
     * Event description: User opens "Wix Contact" from a mobile device.
    
     * lang - Type: string. Desc: answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     * @param {wixContactOpenWixContactFromMobileParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactOpenWixContactFromMobile = function (params) {
        return this.bi.log(__assign({ evid: 583 }, params));
    };
    /**
    * @typedef {Object} clickTheSumbitATicketOpenFormLinkParams
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: click the (sumbit a ticket (open form)) link. Evid: 516.
    
    
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {clickTheSumbitATicketOpenFormLinkParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheSumbitATicketOpenFormLink = function (params) {
        return this.bi.log(__assign({ evid: 516 }, params));
    };
    /**
    * @typedef {Object} wixContactSelectSubOptionParams
    * @property {string} lang - answers language
    * @property {string} level - the level of the sub option in the sub option flow
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {boolean} solution - does the sub option has a solution
    * @property {string} sub_option_id - the id of the selected sub option
    * @property {string} sub_option_name - the name of the selected sub option
    **/
    /**
     * Name: Wix Contact - Select Sub Option. Evid: 572.
     * Event description: User selects a sub option from the dropdown list in "Step 2".
    
     * lang - Type: string. Desc: answers language
     *
     * level - Type: string. Desc: the level of the sub option in the sub option flow
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution - Type: bool. Desc: does the sub option has a solution
     *
     * sub_option_id - Type: string. Desc: the id of the selected sub option
     *
     * sub_option_name - Type: string. Desc: the name of the selected sub option
     * @param {wixContactSelectSubOptionParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactSelectSubOption = function (params) {
        return this.bi.log(__assign({ evid: 572 }, params));
    };
    /**
    * @typedef {Object} clickTheFaqTutorialTabParams
    * @property {string} item_name - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    **/
    /**
     * Name: click the faq/tutorial tab. Evid: 538.
    
    
     * item_name - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     * @param {clickTheFaqTutorialTabParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheFaqTutorialTab = function (params) {
        return this.bi.log(__assign({ evid: 538 }, params));
    };
    /**
    * @typedef {Object} wixContactSubmitTicketFormParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} chat_status - is the chat available for conversations, closed, etc.
    * @property {string} context - base on which platform the event is trigger { Contact form,Direct}
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} platform - NULL
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    * @property {string} topic - the topic of the ticket (selected from the "Issue Subject" dropdown)
    **/
    /**
     * Name: Wix Contact - Submit Ticket form. Evid: 577.
     * Event description: Clicking the "Submit a ticket" button at the bottom of the ticket form.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chat_status - Type: string. Desc: is the chat available for conversations, closed, etc.
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form,Direct}
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * platform - Type: string. Desc: NULL
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     *
     * topic - Type: string. Desc: the topic of the ticket (selected from the "Issue Subject" dropdown)
     * @param {wixContactSubmitTicketFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactSubmitTicketForm = function (params) {
        return this.bi.log(__assign({ evid: 577 }, params));
    };
    /**
    * @typedef {Object} clientLoadSuccessParams
    * @property {string} client_name - the client that is sending the event. e.g - app/public/widget_[id]
    * @property {string} lang - answers version of lang
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {number} ts - time since load started, in ms
    **/
    /**
     * Name: Client load success. Evid: 559.
     * Event description: Sent when the client app was fully rendered (all ajax requests completed, etc)..
    
     * client_name - Type: string. Desc: the client that is sending the event. e.g - app/public/widget_[id]
     *
     * lang - Type: string. Desc: answers version of lang
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * ts - Type: numeric. Desc: time since load started, in ms
     * @param {clientLoadSuccessParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clientLoadSuccess = function (params) {
        return this.bi.log(__assign({ evid: 559 }, params));
    };
    /**
    * @typedef {Object} contactUsClickStillNeedHelpParams
    * @property {string} answer - null
    * @property {number} index - null
    * @property {string} lang - null
    * @property {string} question - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: contact us -> click still need help. Evid: 529.
    
    
     * answer - Type: string.
     *
     * index - Type: numeric.
     *
     * lang - Type: lng.
     *
     * question - Type: string.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {contactUsClickStillNeedHelpParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.contactUsClickStillNeedHelp = function (params) {
        return this.bi.log(__assign({ evid: 529 }, params));
    };
    /**
    * @typedef {Object} questionTitleFieldSearchParams
    * @property {number} count - null
    * @property {string} first_answer - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} title - null
    **/
    /**
     * Name: question title field search. Evid: 509.
    
    
     * count - Type: numeric.
     *
     * first_answer - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * title - Type: string.
     * @param {questionTitleFieldSearchParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.questionTitleFieldSearch = function (params) {
        return this.bi.log(__assign({ evid: 509 }, params));
    };
    /**
    * @typedef {Object} contactUsSelectCategoryParams
    * @property {string} category - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: contact us -> select category. Evid: 525.
    
    
     * category - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {contactUsSelectCategoryParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.contactUsSelectCategory = function (params) {
        return this.bi.log(__assign({ evid: 525 }, params));
    };
    /**
    * @typedef {Object} wixContactCallbackFailedClientParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} context - base on which platform the event is trigger { Contact form,Direct}
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} platform - Null
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} reason - reason for callback fail (the number of the error) , for getting the actual reason use the server_error field
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} server_error - the actual reason why user failed to request callback
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    * @property {boolean} view_recaptcha - true if user saw the recaptcha view and false if not
    **/
    /**
     * Name: Wix Contact - Callback Failed  (client). Evid: 581.
     * Event description: User was not able to schedule a callback.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form,Direct}
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * platform - Type: string. Desc: Null
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * reason - Type: string. Desc: reason for callback fail (the number of the error) , for getting the actual reason use the server_error field
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * server_error - Type: string. Desc: the actual reason why user failed to request callback
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     *
     * view_recaptcha - Type: bool. Desc: true if user saw the recaptcha view and false if not
     * @param {wixContactCallbackFailedClientParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactCallbackFailedClient = function (params) {
        return this.bi.log(__assign({ evid: 581 }, params));
    };
    /**
    * @typedef {Object} ticketFormIsToggledInFaqPageParams
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    **/
    /**
     * Name: ticket form is toggled in faq page. Evid: 524.
    
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     * @param {ticketFormIsToggledInFaqPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.ticketFormIsToggledInFaqPage = function (params) {
        return this.bi.log(__assign({ evid: 524 }, params));
    };
    /**
    * @typedef {Object} loginFailedParams
    * @property {string} lang - answers languages
    * @property {string} referral_name - null
    **/
    /**
     * Name: Login Failed. Evid: 556.
     * Event description: Login attempt to Answers failed.
    
     * lang - Type: string. Desc: answers languages
     *
     * referral_name - Type: string.
     * @param {loginFailedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.loginFailed = function (params) {
        return this.bi.log(__assign({ evid: 556 }, params));
    };
    /**
    * @typedef {Object} callSchedulerCancelCallbackRequestParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} local_time_zone - name of the user's time zone
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Cancel Callback Request. Evid: 610.
     * Event description: User cancels their callback request.
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * local_time_zone - Type: string. Desc: name of the user's time zone
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerCancelCallbackRequestParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerCancelCallbackRequest = function (params) {
        return this.bi.log(__assign({ evid: 610 }, params));
    };
    /**
    * @typedef {Object} clickOnCloseSpecialCriticalBugNoticeParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: click on close special critical bug notice. Evid: 8.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickOnCloseSpecialCriticalBugNoticeParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnCloseSpecialCriticalBugNotice = function (params) {
        return this.bi.log(__assign({ evid: 8 }, params));
    };
    /**
    * @typedef {Object} clickOnSearchInTheBottomParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: click on search in the bottom. Evid: 23.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickOnSearchInTheBottomParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnSearchInTheBottom = function (params) {
        return this.bi.log(__assign({ evid: 23 }, params));
    };
    /**
    * @typedef {Object} clickAContentParams
    * @property {string} category - null
    * @property {boolean} from_search - indicator if this is a click on any of the search results
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} order - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    * @property {string} sub_category - null
    * @property {string} type - null
    **/
    /**
     * Name: click a content. Evid: 517.
    
    
     * category - Type: string.
     *
     * from_search - Type: bool. Desc: indicator if this is a click on any of the search results
     *
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * order - Type: string.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     *
     * sub_category - Type: string.
     *
     * type - Type: string.
     * @param {clickAContentParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickAContent = function (params) {
        return this.bi.log(__assign({ evid: 517 }, params));
    };
    /**
    * @typedef {Object} needMoreHelpButtonClickHereParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: Need more help button (click here). Evid: 2.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {needMoreHelpButtonClickHereParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.needMoreHelpButtonClickHere = function (params) {
        return this.bi.log(__assign({ evid: 2 }, params));
    };
    /**
    * @typedef {Object} forumSearchClickTheSeeAllResultsLinkParams
    * @property {string} lang - null
    * @property {string} question - question submitted by the user
    * @property {string} referral_name - null
    * @property {string} source_name - source page name
    * @property {string} source_url - source page url
    **/
    /**
     * Name: forum search -> click the (see all results) link. Evid: 548.
     * Event description: click the 'see all results' link in the forum search.
    
     * lang - Type: lng.
     *
     * question - Type: string. Desc: question submitted by the user
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string. Desc: source page name
     *
     * source_url - Type: string. Desc: source page url
     * @param {forumSearchClickTheSeeAllResultsLinkParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.forumSearchClickTheSeeAllResultsLink = function (params) {
        return this.bi.log(__assign({ evid: 548 }, params));
    };
    /**
    * @typedef {Object} changeLanguageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} from_language - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} target_url - null
    * @property {string} to_language - null
    * @property {string} url - null
    **/
    /**
     * Name: change language. Evid: 25.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * from_language - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * target_url - Type: string.
     *
     * to_language - Type: string.
     *
     * url - Type: string.
     * @param {changeLanguageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.changeLanguage = function (params) {
        return this.bi.log(__assign({ evid: 25 }, params));
    };
    /**
    * @typedef {Object} clickingOnSubCategoryMainPageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: clicking on sub category main page. Evid: 30.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnSubCategoryMainPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnSubCategoryMainPage = function (params) {
        return this.bi.log(__assign({ evid: 30 }, params));
    };
    /**
    * @typedef {Object} quickAssistClickOnContactUsParams
    * @property {string} block_id - the id of the block from which the user clicked Contact Us
    * @property {string} block_name - the name of the block from which the user clicked Contact Us
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} channel - channel the users came from
    * @property {boolean} contact_toggle - 1- contact option available from every block . 0- contact option available only after clicking 'wasn't helpful' and from 'get help with a different problem'
    * @property {string} content_id - the id of the selected content
    * @property {string} content_name - the name of the selected content
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers languages
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Quick Assist - Click on "Contact Us". Evid: 561.
     * Event description: Clicking the "Contact Us" button.
    
     * block_id - Type: string. Desc: the id of the block from which the user clicked Contact Us
     *
     * block_name - Type: string. Desc: the name of the block from which the user clicked Contact Us
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * channel - Type: string. Desc: channel the users came from
     *
     * contact_toggle - Type: bool. Desc: 1- contact option available from every block . 0- contact option available only after clicking 'wasn't helpful' and from 'get help with a different problem'
     *
     * content_id - Type: string. Desc: the id of the selected content
     *
     * content_name - Type: string. Desc: the name of the selected content
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: lng. Desc: answers languages
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {quickAssistClickOnContactUsParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.quickAssistClickOnContactUs = function (params) {
        return this.bi.log(__assign({ evid: 561 }, params));
    };
    /**
    * @typedef {Object} callSchedulerClickCancelParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Click "Cancel". Evid: 607.
     * Event description: User clicks the "Cancel" button on the My Scheduled Callbacks page..
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerClickCancelParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerClickCancel = function (params) {
        return this.bi.log(__assign({ evid: 607 }, params));
    };
    /**
    * @typedef {Object} wixContactClickOnChatLiveParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} context - base on which platform the event is trigger { Contact form, Other}
    * @property {string} conversation_id - conversation_id from the chatbot
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Click on "Chat Live". Evid: 596.
     * Event description: Clicking the "Chat LIve" button.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form, Other}
     *
     * conversation_id - Type: string. Desc: conversation_id from the chatbot
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactClickOnChatLiveParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactClickOnChatLive = function (params) {
        return this.bi.log(__assign({ evid: 596 }, params));
    };
    /**
    * @typedef {Object} walkMeClickOnSubmitTicketParams
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral to the WalkMe tour
    * @property {Url} referral_url - referral to the WalkMe tour
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    **/
    /**
     * Name: WalkMe - Click on "Submit Ticket". Evid: 589.
     * Event description: Clicking the "Submit Ticket" button in the WalkMe pop up..
    
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral to the WalkMe tour
     *
     * referral_url - Type: url. Desc: referral to the WalkMe tour
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     * @param {walkMeClickOnSubmitTicketParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.walkMeClickOnSubmitTicket = function (params) {
        return this.bi.log(__assign({ evid: 589 }, params));
    };
    /**
    * @typedef {Object} contactUsClickMoreHelpOptionsParams
    * @property {string} item_name - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: contact us -> click more help options. Evid: 530.
    
    
     * item_name - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {contactUsClickMoreHelpOptionsParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.contactUsClickMoreHelpOptions = function (params) {
        return this.bi.log(__assign({ evid: 530 }, params));
    };
    /**
    * @typedef {Object} chooseACategoryAndSubcategoryParams
    * @property {string} category - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: choose a category and subcategory. Evid: 519.
    
    
     * category - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     *
     * sub_category - Type: string.
     * @param {chooseACategoryAndSubcategoryParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.chooseACategoryAndSubcategory = function (params) {
        return this.bi.log(__assign({ evid: 519 }, params));
    };
    /**
    * @typedef {Object} clickOnChangeProductButtonParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} item - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: click on change product button. Evid: 24.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * item - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickOnChangeProductButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnChangeProductButton = function (params) {
        return this.bi.log(__assign({ evid: 24 }, params));
    };
    /**
    * @typedef {Object} wixContactClickOnALinkInsideASolutionParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} link_name - the clickable text
    * @property {Url} link_url - the link's url
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Click on a Link Inside a Solution. Evid: 575.
     * Event description: User click on a link inside the solution content.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * link_name - Type: string. Desc: the clickable text
     *
     * link_url - Type: url. Desc: the link's url
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactClickOnALinkInsideASolutionParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactClickOnALinkInsideASolution = function (params) {
        return this.bi.log(__assign({ evid: 575 }, params));
    };
    /**
    * @typedef {Object} clickTheTopQuestionsOrAllTopQuestionsButtonParams
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: click the (top questions) or (all top questions) button. Evid: 500.
    
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {clickTheTopQuestionsOrAllTopQuestionsButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheTopQuestionsOrAllTopQuestionsButton = function (params) {
        return this.bi.log(__assign({ evid: 500 }, params));
    };
    /**
    * @typedef {Object} wixContactCallbackSuccessParams
    * @property {Url} action_url - null
    * @property {string} announcement_text - announcement that is shown to user
    * @property {string} call_center_status - null
    * @property {GUID} callid - answers call guid
    * @property {number} clid - wcc call guid
    * @property {string} context - base on which platform the event is trigger { Contact form, Other}
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - null
    * @property {string} lang - null
    * @property {string} main_option_id - null
    * @property {string} main_option_name - null
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - null
    * @property {Url} referral_url - null
    * @property {number} solution_time - null
    * @property {string} solution_title - null
    * @property {string} sub_option_id - null
    * @property {string} sub_option_name - null
    * @property {string} ticket_id - answers' ticket id of the created call
    * @property {string} ticketing_status - null
    * @property {boolean} view_recaptcha - true if user saw the recaptcha view and false if not
    **/
    /**
     * Name: Wix Contact - Callback Success. Evid: 580.
     * Event description: User was able to schedule a callback.
    
     * action_url - Type: url.
     *
     * announcement_text - Type: string. Desc: announcement that is shown to user
     *
     * call_center_status - Type: string.
     *
     * callid - Type: guid. Desc: answers call guid
     *
     * clid - Type: numeric. Desc: wcc call guid
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form, Other}
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric.
     *
     * lang - Type: string.
     *
     * main_option_id - Type: string.
     *
     * main_option_name - Type: string.
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string.
     *
     * referral_url - Type: url.
     *
     * solution_time - Type: numeric.
     *
     * solution_title - Type: string.
     *
     * sub_option_id - Type: string.
     *
     * sub_option_name - Type: string.
     *
     * ticket_id - Type: string. Desc: answers' ticket id of the created call
     *
     * ticketing_status - Type: string.
     *
     * view_recaptcha - Type: bool. Desc: true if user saw the recaptcha view and false if not
     * @param {wixContactCallbackSuccessParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactCallbackSuccess = function (params) {
        return this.bi.log(__assign({ evid: 580 }, params));
    };
    /**
    * @typedef {Object} clickingOnNewPostButtonFromAnswersOpenFormParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: clicking on new post button from answers (open form). Evid: 32.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {clickingOnNewPostButtonFromAnswersOpenFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnNewPostButtonFromAnswersOpenForm = function (params) {
        return this.bi.log(__assign({ evid: 32 }, params));
    };
    /**
    * @typedef {Object} wixContactOpenWixContactSuccessParams
    * @property {string} announcement_text - announcement shown to user
    * @property {string} context - base on which platform the event is trigger { Contact form, Direct}
    * @property {string} lang - Answers language
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} ts - time since load started, in ms
    **/
    /**
     * Name: Wix Contact - Open "Wix Contact" - Success. Evid: 570.
     * Event description: User opens "Wix Contact" from desktop. The Contact form finished loading..
    
     * announcement_text - Type: string. Desc: announcement shown to user
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form, Direct}
     *
     * lang - Type: string. Desc: Answers language
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * ts - Type: numeric. Desc: time since load started, in ms
     * @param {wixContactOpenWixContactSuccessParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactOpenWixContactSuccess = function (params) {
        return this.bi.log(__assign({ evid: 570 }, params));
    };
    /**
    * @typedef {Object} clickingOnChangeProductLinkInTheVideoParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} video - null
    **/
    /**
     * Name: clicking on change product link in the video. Evid: 14.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * video - Type: string.
     * @param {clickingOnChangeProductLinkInTheVideoParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnChangeProductLinkInTheVideo = function (params) {
        return this.bi.log(__assign({ evid: 14 }, params));
    };
    /**
    * @typedef {Object} loginClickingEmailUs70Params
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: Login - clicking 'email us'. Evid: 70.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {loginClickingEmailUs70Params} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.loginClickingEmailUs70 = function (params) {
        return this.bi.log(__assign({ evid: 70 }, params));
    };
    /**
    * @typedef {Object} wixContactOpenChatSuccessClientParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution content
    * @property {string} announcement_text - announcement that is shown to user
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {GUID} chatid - answers chat guid
    * @property {string} context - base on which platform the event is trigger { Contact form, Other}
    * @property {string} conversation_id - conversation_id from the chatbot
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticket_id - answers' ticket id of the created chat
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Open Chat Success (client). Evid: 597.
     * Event description: User was able to open a chat conversation.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution content
     *
     * announcement_text - Type: string. Desc: announcement that is shown to user
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chatid - Type: guid. Desc: answers chat guid
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form, Other}
     *
     * conversation_id - Type: string. Desc: conversation_id from the chatbot
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticket_id - Type: string. Desc: answers' ticket id of the created chat
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactOpenChatSuccessClientParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactOpenChatSuccessClient = function (params) {
        return this.bi.log(__assign({ evid: 597 }, params));
    };
    /**
    * @typedef {Object} wixContactARecaptchaChallengeWasShowedToTheUserParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} chat_status - is the chat available for conversations, closed, etc.
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact -a reCAPTCHA challenge Was Showed to the User. Evid: 600.
     * Event description: the event is trigger when reCAPTCHA view is showed to the user
    after he clicks on 'request a callback' button..
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chat_status - Type: string. Desc: is the chat available for conversations, closed, etc.
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactARecaptchaChallengeWasShowedToTheUserParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactARecaptchaChallengeWasShowedToTheUser = function (params) {
        return this.bi.log(__assign({ evid: 600 }, params));
    };
    /**
    * @typedef {Object} wixContactClickOnRequestCallbackParams
    * @property {Url} action_url - the url of the suggested action button, next to the solution contetnt
    * @property {string} call_center_status - is the call center available for calls, closed, etc.
    * @property {string} chat_status - is the chat available for conversations, closed, etc.
    * @property {string} context - base on which platform the event is trigger { Contact form, Other}
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {number} estimated_wait_time - in minutes, the estimated callback wait time presented to the user
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} provider - the back-end that serves the contact option - wcc\answers
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} solution_title - the title of the presented solution
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticketing_status - is the option to submit a ticket is available
    **/
    /**
     * Name: Wix Contact - Click on "Request Callback". Evid: 578.
     * Event description: Clicking the "Request Callback" button.
    
     * action_url - Type: url. Desc: the url of the suggested action button, next to the solution contetnt
     *
     * call_center_status - Type: string. Desc: is the call center available for calls, closed, etc.
     *
     * chat_status - Type: string. Desc: is the chat available for conversations, closed, etc.
     *
     * context - Type: string. Desc: base on which platform the event is trigger { Contact form, Other}
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * estimated_wait_time - Type: numeric. Desc: in minutes, the estimated callback wait time presented to the user
     *
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * provider - Type: string. Desc: the back-end that serves the contact option - wcc\answers
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticketing_status - Type: string. Desc: is the option to submit a ticket is available
     * @param {wixContactClickOnRequestCallbackParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactClickOnRequestCallback = function (params) {
        return this.bi.log(__assign({ evid: 578 }, params));
    };
    /**
    * @typedef {Object} editorHelpOpenedParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - the category/null-values=undefined subcategory string that the editor opened with
    **/
    /**
     * Name: editor help opened. Evid: 49.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string. Desc: the category/null-values=undefined subcategory string that the editor opened with
     * @param {editorHelpOpenedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.editorHelpOpened = function (params) {
        return this.bi.log(__assign({ evid: 49 }, params));
    };
    /**
    * @typedef {Object} supportLandingPageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {number} product_id - null
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: support landing page. Evid: 15.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * product_id - Type: numeric.
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {supportLandingPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.supportLandingPage = function (params) {
        return this.bi.log(__assign({ evid: 15 }, params));
    };
    /**
    * @typedef {Object} clickSignInButtonParams
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: click (sign in) button. Evid: 534.
    
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {clickSignInButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickSignInButton = function (params) {
        return this.bi.log(__assign({ evid: 534 }, params));
    };
    /**
    * @typedef {Object} scheduledCallHasBeenOpenedParams
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: scheduled call has been opened. Evid: 512.
    
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {scheduledCallHasBeenOpenedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.scheduledCallHasBeenOpened = function (params) {
        return this.bi.log(__assign({ evid: 512 }, params));
    };
    /**
    * @typedef {Object} whatIsMyName535Params
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: what is my name?. Evid: 535.
    
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {whatIsMyName535Params} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.whatIsMyName535 = function (params) {
        return this.bi.log(__assign({ evid: 535 }, params));
    };
    /**
    * @typedef {Object} callSchedulerSubmitScheduledCallbackRequestParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} local_time_zone - name of the user's time zone
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Submit Scheduled Callback Request. Evid: 604.
     * Event description: Clicking the "Schedule a Callback" button at the bottom of the Call Scheduler.
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * local_time_zone - Type: string. Desc: name of the user's time zone
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerSubmitScheduledCallbackRequestParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerSubmitScheduledCallbackRequest = function (params) {
        return this.bi.log(__assign({ evid: 604 }, params));
    };
    /**
    * @typedef {Object} wixContactAnnouncementToggledOnParams
    * @property {string} announcement_text - the announcement that is shows to users
    * @property {string} lang - answers language
    **/
    /**
     * Name: Wix Contact - Announcement Toggled On. Evid: 585.
     * Event description: Announcement on the current issue has been toggled on.
    
     * announcement_text - Type: string. Desc: the announcement that is shows to users
     *
     * lang - Type: string. Desc: answers language
     * @param {wixContactAnnouncementToggledOnParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactAnnouncementToggledOn = function (params) {
        return this.bi.log(__assign({ evid: 585 }, params));
    };
    /**
    * @typedef {Object} replyATicketInFaqPageParams
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: reply a ticket in faq page. Evid: 505.
    
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {replyATicketInFaqPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.replyATicketInFaqPage = function (params) {
        return this.bi.log(__assign({ evid: 505 }, params));
    };
    /**
    * @typedef {Object} loginSuccessParams
    * @property {string} lang - answers languages
    * @property {string} referral_name - null
    **/
    /**
     * Name: Login Success. Evid: 555.
     * Event description: Login attempt to Answers succeeded.
    
     * lang - Type: string. Desc: answers languages
     *
     * referral_name - Type: string.
     * @param {loginSuccessParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.loginSuccess = function (params) {
        return this.bi.log(__assign({ evid: 555 }, params));
    };
    /**
    * @typedef {Object} callSchedulerClickOnScheduleACallForLaterParams
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler - Click on “Schedule a call for later". Evid: 603.
     * Event description: Clicking the “Schedule a call for later" button.
    
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerClickOnScheduleACallForLaterParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerClickOnScheduleACallForLater = function (params) {
        return this.bi.log(__assign({ evid: 603 }, params));
    };
    /**
    * @typedef {Object} clickingOnSubCategoryOnSecondPageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: clicking on sub- category on second page. Evid: 51.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnSubCategoryOnSecondPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnSubCategoryOnSecondPage = function (params) {
        return this.bi.log(__assign({ evid: 51 }, params));
    };
    /**
    * @typedef {Object} wixContactClickOnMainOptionParams
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    **/
    /**
     * Name: Wix Contact - Click on Main Option. Evid: 571.
     * Event description: User clicks on a main option in "Step 1".
    
     * lang - Type: string. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     * @param {wixContactClickOnMainOptionParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixContactClickOnMainOption = function (params) {
        return this.bi.log(__assign({ evid: 571 }, params));
    };
    /**
    * @typedef {Object} clickingOnTopicInCategoryPage31Params
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} topic_title - null
    **/
    /**
     * Name: clicking on topic in category page. Evid: 31.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * topic_title - Type: string.
     * @param {clickingOnTopicInCategoryPage31Params} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnTopicInCategoryPage31 = function (params) {
        return this.bi.log(__assign({ evid: 31 }, params));
    };
    /**
    * @typedef {Object} clientLoadAttemptParams
    * @property {string} client_name - the client that is sending the event. e.g - app/public/widget_[id]
    * @property {string} lang - null
    * @property {string} referral_name - null
    **/
    /**
     * Name: Client load attempt. Evid: 558.
     * Event description: Sent when the page is served and loaded, but the actual app was not fully rendered yet..
    
     * client_name - Type: string. Desc: the client that is sending the event. e.g - app/public/widget_[id]
     *
     * lang - Type: string.
     *
     * referral_name - Type: string.
     * @param {clientLoadAttemptParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clientLoadAttempt = function (params) {
        return this.bi.log(__assign({ evid: 558 }, params));
    };
    /**
    * @typedef {Object} oldContactFormSubmitFormParams
    * @property {string} category - null
    * @property {string} forum - null
    * @property {boolean} is_private - null
    * @property {boolean} is_walkme - Was the ticket opened from a WalkMe tour
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - answers language
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} solution_title - the title of the presented solution
    * @property {string} source - null
    * @property {string} source_name - null
    * @property {string} sub_category - null
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} ticket_id - the ticket id of the submitted query
    * @property {string} topic - the topic/assign group of the ticket
    * @property {string} type - null
    **/
    /**
     * Name: Old Contact Form - Submit form. Evid: 511.
     * Event description: User submitted a ticket through the old contact form.
    
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * is_private - Type: bool.
     *
     * is_walkme - Type: bool. Desc: Was the ticket opened from a WalkMe tour
     *
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng. Desc: answers language
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_title - Type: string. Desc: the title of the presented solution
     *
     * source - Type: string.
     *
     * source_name - Type: string.
     *
     * sub_category - Type: string.
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * ticket_id - Type: string. Desc: the ticket id of the submitted query
     *
     * topic - Type: string. Desc: the topic/assign group of the ticket
     *
     * type - Type: string.
     * @param {oldContactFormSubmitFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.oldContactFormSubmitForm = function (params) {
        return this.bi.log(__assign({ evid: 511 }, params));
    };
    /**
    * @typedef {Object} chooseCategoryParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: choose category. Evid: 3.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {chooseCategoryParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.chooseCategory = function (params) {
        return this.bi.log(__assign({ evid: 3 }, params));
    };
    /**
    * @typedef {Object} smsVerificationAnsBiResendMyCodeParams
    
    **/
    /**
     * Name: SMS Verification (ans_bi)- Resend My Code. Evid: 618.
     * Event description: The user asks for another SMS messages to be sent.
    
    
     * @param {smsVerificationAnsBiResendMyCodeParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.smsVerificationAnsBiResendMyCode = function (params) {
        return this.bi.log(__assign({ evid: 618 }, params));
    };
    /**
    * @typedef {Object} whatIsMyName532Params
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: what is my name?. Evid: 532.
    
    
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {whatIsMyName532Params} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.whatIsMyName532 = function (params) {
        return this.bi.log(__assign({ evid: 532 }, params));
    };
    /**
    * @typedef {Object} wixWidgetWidgetLauncherLoadedClientParams
    * @property {string} parent_name - where the widget is opened from (source page name)
    * @property {string} parent_url - where the widget is opened from (source page url)
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {string} source_name - source name
    **/
    /**
     * Name: Wix Widget  - Widget Launcher Loaded (Client). Evid: 661.
     * Event description: The event is trigger when a launcher is loaded and show to the user.
    
     * parent_name - Type: string. Desc: where the widget is opened from (source page name)
     *
     * parent_url - Type: string. Desc: where the widget is opened from (source page url)
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * source_name - Type: string. Desc: source name
     * @param {wixWidgetWidgetLauncherLoadedClientParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixWidgetWidgetLauncherLoadedClient = function (params) {
        return this.bi.log(__assign({ evid: 661 }, params));
    };
    /**
    * @typedef {Object} smsVerificationAnsBiTooManyMessagesParams
    
    **/
    /**
     * Name: SMS Verification (ans_bi)- Too Many Messages. Evid: 617.
     * Event description: The user has passed the limit for number of SMS messages sent.
    
    
     * @param {smsVerificationAnsBiTooManyMessagesParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.smsVerificationAnsBiTooManyMessages = function (params) {
        return this.bi.log(__assign({ evid: 617 }, params));
    };
    /**
    * @typedef {Object} wixWidgetCloseAWidgetClientParams
    * @property {string} close_method - close method {click,api}
    * @property {string} current_platform - current_platform - where that chat is opened from currently { Editor, Biz manager, Domain page .... }
    * @property {string} lang - Answer's lang
    * @property {string} module_name - last used module (home, chat, contact form, etc)
    * @property {string} open_method - open method (api,click)
    * @property {string} parent_name -
    * @property {string} parent_url -
    * @property {string} referral_name -
    * @property {Url} referral_url - where the widget is opened from
    * @property {string} source_name - source name
    **/
    /**
     * Name: Wix Widget  - Close a Widget (Client). Evid: 663.
     * Event description: The event is trigger when a  user closes the widget.
    
     * close_method - Type: string. Desc: close method {click,api}
     *
     * current_platform - Type: string. Desc: current_platform - where that chat is opened from currently { Editor, Biz manager, Domain page .... }
     *
     * lang - Type: string. Desc: Answer's lang
     *
     * module_name - Type: string. Desc: last used module (home, chat, contact form, etc)
     *
     * open_method - Type: string. Desc: open method (api,click)
     *
     * parent_name - Type: string.
     *
     * parent_url - Type: string.
     *
     * referral_name - Type: string.
     *
     * referral_url - Type: url. Desc: where the widget is opened from
     *
     * source_name - Type: string. Desc: source name
     * @param {wixWidgetCloseAWidgetClientParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.wixWidgetCloseAWidgetClient = function (params) {
        return this.bi.log(__assign({ evid: 663 }, params));
    };
    /**
    * @typedef {Object} clickingOnTopicInCategoryPage62Params
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} title - null
    * @property {string} url - null
    **/
    /**
     * Name: clicking on topic in category page. Evid: 62.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * title - Type: string.
     *
     * url - Type: string.
     * @param {clickingOnTopicInCategoryPage62Params} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnTopicInCategoryPage62 = function (params) {
        return this.bi.log(__assign({ evid: 62 }, params));
    };
    /**
    * @typedef {Object} clickViewYourPhoneTicketButtonParams
    * @property {string} call_type - phone call options: scheduled a call \ call now
    * @property {string} category - the subcategory the user selected
    * @property {number} eta - the estimated wait time presented to the user
    * @property {string} issue_id - unique identifier of phone ticket
    * @property {GUID} item_id - ticket id
    * @property {string} item_name - the title that user provided
    * @property {string} lang - null
    * @property {string} phone - phone number submitted by the user
    * @property {string} referral_name - null
    * @property {string} type - question\bug\wishlist
    **/
    /**
     * Name: click 'view your phone ticket' button. Evid: 541.
     * Event description: click 'view your phone ticket' button in the screen following the phone number verification.
    
     * call_type - Type: string. Desc: phone call options: scheduled a call \ call now
     *
     * category - Type: string. Desc: the subcategory the user selected
     *
     * eta - Type: numeric. Desc: the estimated wait time presented to the user
     *
     * issue_id - Type: string. Desc: unique identifier of phone ticket
     *
     * item_id - Type: guid. Desc: ticket id
     *
     * item_name - Type: string. Desc: the title that user provided
     *
     * lang - Type: lng.
     *
     * phone - Type: string. Desc: phone number submitted by the user
     *
     * referral_name - Type: string.
     *
     * type - Type: string. Desc: question\bug\wishlist
     * @param {clickViewYourPhoneTicketButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickViewYourPhoneTicketButton = function (params) {
        return this.bi.log(__assign({ evid: 541 }, params));
    };
    /**
    * @typedef {Object} talkToWixSupportOnThePhoneContinueParams
    * @property {string} call_type - phone call options: scheduled a call \ call now
    * @property {string} category - the subcategory the user selected
    * @property {number} eta - the estimated wait time presented to the user
    * @property {string} item_name - the title that user provided
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} type - question\bug\wishlist
    **/
    /**
     * Name: talk to wix support on the phone ->continue. Evid: 539.
     * Event description: clicking the Continue button at the bottom of the 'talk to wix support on the phone' page.
    
     * call_type - Type: string. Desc: phone call options: scheduled a call \ call now
     *
     * category - Type: string. Desc: the subcategory the user selected
     *
     * eta - Type: numeric. Desc: the estimated wait time presented to the user
     *
     * item_name - Type: string. Desc: the title that user provided
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * type - Type: string. Desc: question\bug\wishlist
     * @param {talkToWixSupportOnThePhoneContinueParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.talkToWixSupportOnThePhoneContinue = function (params) {
        return this.bi.log(__assign({ evid: 539 }, params));
    };
    /**
    * @typedef {Object} articleClickActionButtonParams
    * @property {string} action_text - the text that appear on the button
    * @property {Url} action_url - the URL of the action button
    * @property {string} conversation_id - conversation id from the chatbot (null if context != chatbot)
    * @property {GUID} item_id - the id of the article the button was click in
    * @property {string} item_name - the name of the article the button was click in
    * @property {string} lang - Answers language
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} referral_name - referral
    * @property {Url} referral_url - referral
    * @property {number} solution_time - in minutes, the estimated time presented to the user to solve the issue by themselves
    * @property {string} source_name - the page they clicked the button on
    **/
    /**
     * Name: Article - Click Action Button. Evid: 588.
     * Event description: click an action button inside an article.
    
     * action_text - Type: string. Desc: the text that appear on the button
     *
     * action_url - Type: url. Desc: the URL of the action button
     *
     * conversation_id - Type: string. Desc: conversation id from the chatbot (null if context != chatbot)
     *
     * item_id - Type: guid. Desc: the id of the article the button was click in
     *
     * item_name - Type: string. Desc: the name of the article the button was click in
     *
     * lang - Type: lng. Desc: Answers language
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * referral_name - Type: string. Desc: referral
     *
     * referral_url - Type: url. Desc: referral
     *
     * solution_time - Type: numeric. Desc: in minutes, the estimated time presented to the user to solve the issue by themselves
     *
     * source_name - Type: string. Desc: the page they clicked the button on
     * @param {articleClickActionButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.articleClickActionButton = function (params) {
        return this.bi.log(__assign({ evid: 588 }, params));
    };
    /**
    * @typedef {Object} scheduleACallChangeCountryParams
    * @property {string} call_type - phone call options: scheduled a call \ call now
    * @property {string} category - the subcategory the user selected
    * @property {number} eta - the estimated wait time presented to the user
    * @property {string} issue_id - unique identifier of phone ticket
    * @property {GUID} item_id - ticket id
    * @property {string} item_name - the title that user provided
    * @property {string} lang - null
    * @property {string} org_country - the country code presented to the user
    * @property {string} phone - phone number submitted by the user
    * @property {string} referral_name - null
    * @property {string} target_country - the country the user selected from the drop down menu
    * @property {string} type - question\bug\wishlist
    **/
    /**
     * Name: schedule a call -> change country. Evid: 543.
     * Event description: change country in the 'schedule a call with Wix Support' page.
    
     * call_type - Type: string. Desc: phone call options: scheduled a call \ call now
     *
     * category - Type: string. Desc: the subcategory the user selected
     *
     * eta - Type: numeric. Desc: the estimated wait time presented to the user
     *
     * issue_id - Type: string. Desc: unique identifier of phone ticket
     *
     * item_id - Type: guid. Desc: ticket id
     *
     * item_name - Type: string. Desc: the title that user provided
     *
     * lang - Type: lng.
     *
     * org_country - Type: string. Desc: the country code presented to the user
     *
     * phone - Type: string. Desc: phone number submitted by the user
     *
     * referral_name - Type: string.
     *
     * target_country - Type: string. Desc: the country the user selected from the drop down menu
     *
     * type - Type: string. Desc: question\bug\wishlist
     * @param {scheduleACallChangeCountryParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.scheduleACallChangeCountry = function (params) {
        return this.bi.log(__assign({ evid: 543 }, params));
    };
    /**
    * @typedef {Object} postNewTopicClickingOnButtonOpenFormParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {GUID} forumid - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: Post new topic - clicking on button (open form). Evid: 67.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forumid - Type: guid.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {postNewTopicClickingOnButtonOpenFormParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.postNewTopicClickingOnButtonOpenForm = function (params) {
        return this.bi.log(__assign({ evid: 67 }, params));
    };
    /**
    * @typedef {Object} callSchedulerKeepCallbackScheduledParams
    * @property {DateTime} callback_datetime - the callback date and time chosen by the user
    * @property {string} local_time_zone - name of the user's time zone
    * @property {string} main_option_id - the id of the selected main option
    * @property {string} main_option_name - the name of the selected main option
    * @property {string} referral_name - referral
    * @property {string} sub_option_id - the id of the final sub option
    * @property {string} sub_option_name - the name of the final sub option
    * @property {string} topic - topic of the request (e-mail only)
    * @property {string} type - demo or callback
    **/
    /**
     * Name: Call Scheduler- Keep Callback Scheduled. Evid: 611.
     * Event description: User decides not to cancel their callback request by pressing "No, Keep It Scheduled" or by exiting out of the cancel window..
    
     * callback_datetime - Type: datetime. Desc: the callback date and time chosen by the user
     *
     * local_time_zone - Type: string. Desc: name of the user's time zone
     *
     * main_option_id - Type: string. Desc: the id of the selected main option
     *
     * main_option_name - Type: string. Desc: the name of the selected main option
     *
     * referral_name - Type: string. Desc: referral
     *
     * sub_option_id - Type: string. Desc: the id of the final sub option
     *
     * sub_option_name - Type: string. Desc: the name of the final sub option
     *
     * topic - Type: string. Desc: topic of the request (e-mail only)
     *
     * type - Type: string. Desc: demo or callback
     * @param {callSchedulerKeepCallbackScheduledParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.callSchedulerKeepCallbackScheduled = function (params) {
        return this.bi.log(__assign({ evid: 611 }, params));
    };
    /**
    * @typedef {Object} linkTicketToKbItemAdminActionParams
    * @property {string} item_id - linked kb item
    * @property {string} lang - answers languages
    * @property {string} ticket_id - the ticket id the agent linked to a kb item
    * @property {GUID} uuid - null
    **/
    /**
     * Name: link ticket to kb item (admin action). Evid: 700.
     * Event description: admin linking a ticket to a kb item when providing assistance to a user.
    
     * item_id - Type: string. Desc: linked kb item
     *
     * lang - Type: string. Desc: answers languages
     *
     * ticket_id - Type: string. Desc: the ticket id the agent linked to a kb item
     *
     * uuid - Type: guid.
     * @param {linkTicketToKbItemAdminActionParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.linkTicketToKbItemAdminAction = function (params) {
        return this.bi.log(__assign({ evid: 700 }, params));
    };
    /**
    * @typedef {Object} clickingOnCategoryOnMainPageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: clicking on category on main page. Evid: 50.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickingOnCategoryOnMainPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnCategoryOnMainPage = function (params) {
        return this.bi.log(__assign({ evid: 50 }, params));
    };
    /**
    * @typedef {Object} clickTheContactUsLinkParams
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    **/
    /**
     * Name: click the (contact us) link. Evid: 515.
    
    
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     * @param {clickTheContactUsLinkParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheContactUsLink = function (params) {
        return this.bi.log(__assign({ evid: 515 }, params));
    };
    /**
    * @typedef {Object} forumSearchClickOnAnswerParams
    * @property {string} answer - answer the user clicked on
    * @property {number} order - index of the selected answer
    * @property {string} lang - null
    * @property {string} question - question submitted by the user
    * @property {string} referral_name - null
    * @property {string} source_name - source page name
    * @property {string} source_url - source page url
    **/
    /**
     * Name: forum search -> click on answer. Evid: 547.
     * Event description: click one of the answers in the forum search.
    
     * answer - Type: string. Desc: answer the user clicked on
     *
     * order - Type: numeric. Desc: index of the selected answer
     *
     * lang - Type: lng.
     *
     * question - Type: string. Desc: question submitted by the user
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string. Desc: source page name
     *
     * source_url - Type: string. Desc: source page url
     * @param {forumSearchClickOnAnswerParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.forumSearchClickOnAnswer = function (params) {
        return this.bi.log(__assign({ evid: 547 }, params));
    };
    /**
    * @typedef {Object} clickTheSuggestedAnswerButtonParams
    * @property {string} answer - null
    * @property {string} first_answer - null
    * @property {string} lang - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} title - null
    **/
    /**
     * Name: click the (suggested answer) button. Evid: 510.
    
    
     * answer - Type: string.
     *
     * first_answer - Type: string.
     *
     * lang - Type: lng.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * title - Type: string.
     * @param {clickTheSuggestedAnswerButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickTheSuggestedAnswerButton = function (params) {
        return this.bi.log(__assign({ evid: 510 }, params));
    };
    /**
    * @typedef {Object} signInDialogOpenedParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: sign in dialog opened. Evid: 34.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {signInDialogOpenedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.signInDialogOpened = function (params) {
        return this.bi.log(__assign({ evid: 34 }, params));
    };
    /**
    * @typedef {Object} verifyNumberButtonParams
    * @property {string} call_type - phone call options: scheduled a call \ call now
    * @property {string} category - the subcategory the user selected
    * @property {number} eta - estimated wait time
    * @property {string} item_name - the title that user provided
    * @property {string} lang - null
    * @property {string} phone - phone number submitted by the user
    * @property {string} referral_name - null
    * @property {string} source_name - the page they clicked this button on
    * @property {Url} source_url - the page they clicked this button on
    * @property {string} type - question\bug\wishlist
    **/
    /**
     * Name: verify number button. Evid: 540.
     * Event description: click the verify number button.
    
     * call_type - Type: string. Desc: phone call options: scheduled a call \ call now
     *
     * category - Type: string. Desc: the subcategory the user selected
     *
     * eta - Type: numeric. Desc: estimated wait time
     *
     * item_name - Type: string. Desc: the title that user provided
     *
     * lang - Type: lng.
     *
     * phone - Type: string. Desc: phone number submitted by the user
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string. Desc: the page they clicked this button on
     *
     * source_url - Type: url. Desc: the page they clicked this button on
     *
     * type - Type: string. Desc: question\bug\wishlist
     * @param {verifyNumberButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.verifyNumberButton = function (params) {
        return this.bi.log(__assign({ evid: 540 }, params));
    };
    /**
    * @typedef {Object} loginAttemptParams
    * @property {string} lang - answers languages
    * @property {string} referral_name - null
    **/
    /**
     * Name: Login Attempt. Evid: 554.
     * Event description: User attempts to login to Answer.
    
     * lang - Type: string. Desc: answers languages
     *
     * referral_name - Type: string.
     * @param {loginAttemptParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.loginAttempt = function (params) {
        return this.bi.log(__assign({ evid: 554 }, params));
    };
    /**
    * @typedef {Object} clickedOutsideBoxParams
    * @property {string} first_answer - null
    * @property {string} lang - null
    * @property {string} question - null
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} source_url - null
    **/
    /**
     * Name: clicked outside box. Evid: 536.
    
    
     * first_answer - Type: string.
     *
     * lang - Type: lng.
     *
     * question - Type: string.
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * source_url - Type: string.
     * @param {clickedOutsideBoxParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickedOutsideBox = function (params) {
        return this.bi.log(__assign({ evid: 536 }, params));
    };
    /**
    * @typedef {Object} smsVerificationAnsBiCodeSubmissionFormOpenedParams
    
    **/
    /**
     * Name: SMS Verification (ans_bi)- Code Submission Form Opened. Evid: 614.
     * Event description: The verification message is received by the phone number entered by the user..
    
    
     * @param {smsVerificationAnsBiCodeSubmissionFormOpenedParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.smsVerificationAnsBiCodeSubmissionFormOpened = function (params) {
        return this.bi.log(__assign({ evid: 614 }, params));
    };
    /**
    * @typedef {Object} clickOnBackToTopButtonParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    **/
    /**
     * Name: click on back to top button. Evid: 21.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     * @param {clickOnBackToTopButtonParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickOnBackToTopButton = function (params) {
        return this.bi.log(__assign({ evid: 21 }, params));
    };
    /**
    * @typedef {Object} voteUnVoteForWishListParams
    * @property {string} category - null
    * @property {GUID} item_id - include the article_id
    * @property {string} item_name - null
    * @property {string} item_url - null
    * @property {string} lang - null
    * @property {string} selectedCompType - the editor component the widget was opened from
    * @property {string} referral_name - null
    * @property {string} source_name - null
    * @property {string} sub_category - null
    * @property {boolean} thumbs_up - null
    **/
    /**
     * Name: vote/un-vote for wish list. Evid: 502.
    
    
     * category - Type: string.
     *
     * item_id - Type: guid. Desc: include the article_id
     *
     * item_name - Type: string.
     *
     * item_url - Type: string.
     *
     * lang - Type: lng.
     *
     * selectedCompType - Type: string. Desc: the editor component the widget was opened from
     *
     * referral_name - Type: string.
     *
     * source_name - Type: string.
     *
     * sub_category - Type: string.
     *
     * thumbs_up - Type: bool.
     * @param {voteUnVoteForWishListParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.voteUnVoteForWishList = function (params) {
        return this.bi.log(__assign({ evid: 502 }, params));
    };
    /**
    * @typedef {Object} clickingOnFaqInThirdPageParams
    * @property {string} answer - null
    * @property {string} category - null
    * @property {string} forum - null
    * @property {string} product - Identifier of the wix product (flash/html)
    * @property {string} question - null
    * @property {string} sub_category - null
    * @property {string} url - null
    **/
    /**
     * Name: Clicking on FAQ in third page. Evid: 56.
    
    
     * answer - Type: string.
     *
     * category - Type: string.
     *
     * forum - Type: string.
     *
     * product - Type: string. Desc: Identifier of the wix product (flash/html)
     *
     * question - Type: string.
     *
     * sub_category - Type: string.
     *
     * url - Type: string.
     * @param {clickingOnFaqInThirdPageParams} params The parameters for this event.
     * @return {Promise}
    **/
    Logger.prototype.clickingOnFaqInThirdPage = function (params) {
        return this.bi.log(__assign({ evid: 56 }, params));
    };
    return Logger;
}());
export { Logger };
export default init;
export function getLoggerConf() {
    return {
        src: 4,
        endpoint: 'ans_bi'
    };
}
//# sourceMappingURL=index.js.map