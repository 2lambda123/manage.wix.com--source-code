"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var commons_1 = require("./commons");
/***
 MediaManagerAPI interface for open (https://github.com/wix-private/santa-core/tree/master/media-manager-api#methods)
 {
  onSuccess: Function,
  onCancel: Function,
  onRemove: Function,
  multiSelect: Boolean
  path: String,
  translation: {
    title: String,
    submitButton: String
  },
  recommended: [
    {
      sectionTitle: String,
      sectionItems: [
        Object
      ]
    }
  ]
}
 */
var ModuleRegistryMethods = {
    open: 'mediaManager.open',
    updateToken: 'mediaManager.updateSiteMediaToken',
    categories: 'mediaManager.categories'
};
exports.MEDIA_MANAGER_FACADE_MAPPINGS = {
    photos: 'IMAGE',
    clipart: 'IMAGE',
    backgrounds: 'BG_IMAGE',
    audio: 'MUSIC',
    music: 'MUSIC',
    documents: 'DOCUMENT',
    swf: 'FLASH',
    video: 'VIDEO',
    secure_music: 'WIX_MUSIC'
};
function openWowMediaDialog(mediaType, multiSelection, onSuccess, onCancel, returnRawData) {
    ModuleRegistry.invoke(ModuleRegistryMethods.open, mediaType, {
        onSuccess: function (result) {
            if (onSuccess) {
                var items = returnRawData ? commons_1.restoreRelativeUri(result.items) : commons_1.transformRawData(result.items);
                try {
                    onSuccess(multiSelection ? items : items[0]);
                }
                catch (e) {
                    //Linty linter linted this
                }
            }
        },
        onCancel: onCancel,
        multiSelect: multiSelection
    });
}
exports.openWowMediaDialog = openWowMediaDialog;
function updateWowToken(mediaToken) {
    ModuleRegistry.invoke(ModuleRegistryMethods.updateToken, mediaToken);
}
exports.updateWowToken = updateWowToken;
