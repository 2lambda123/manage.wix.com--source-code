import { __extends } from "tslib";
import * as React from 'react';
import * as css from './Widget.scss';
import SupportLink from '../SupportLink/SupportLink';
import { I18nextProvider } from 'react-i18next';
import i18n from '../../i18n';
import { Animator } from 'wix-animations';
import WidgetLoader from '../WidgetLoader/WidgetLoader';
import { IframeLoadingSequence } from '../../services/IframeLoadingSequence';
import { reportFullStoryEvent } from '../../services/fullstory';
import { PLACEMENT_BUSINESS_MANAGER_DASHBOARD } from '../../index';
import { WIDGET_ID_BUSINESS_MANAGER_DASHBOARD, WIDGET_ID_HEADER, WIDGET_ID_HEADER_EDITOR_X, } from '../../consts';
import DashboardIntro from '../DashboardIntro/DashboardIntro';
import Experiments from '@wix/wix-experiments';
import { getUserId } from '../../services/used-id';
import { logCallbackRequestExposure } from '../../services/bi-logger';
import { getConsentPolicy } from '../../services/consent-policy';
var Widget = /** @class */ (function (_super) {
    __extends(Widget, _super);
    function Widget(props) {
        var _this = _super.call(this, props) || this;
        _this.receiveMessage = function (event) {
            var data = event.data;
            var type = data.type;
            var debug = _this.props.debug;
            // validates that the reporting iframe is the current iframe - this supports multiple widgets
            if (!_this.isPostMessageValid(event)) {
                return;
            }
            if (debug && type) {
                console.info('dashboard answers widget - post message received:', type);
            }
            if (type === 'dashboard-answers-widget-all-css-is-loaded') {
                _this.loadingSequence.reportUniqueCssLoad();
            }
            if (type === 'dashboard-answers-widget-unique-script-was-loaded') {
                _this.loadingSequence.reportUniqueScriptLoad();
            }
            if (type === 'dashboard-answers-widget-listener') {
                var eventNumber = data.eventNumber;
                if (eventNumber === 30) {
                    _this.setState({ isShowIntroText: false });
                    _this.props.onSearch && _this.props.onSearch();
                }
                if (eventNumber === 32) {
                    _this.setState({ isShowIntroText: false });
                }
                if (eventNumber === 11) {
                    _this.setState({ isShowIntroText: true });
                    _this.props.onNavigateHome && _this.props.onNavigateHome();
                }
            }
        };
        _this.state = {
            isShow: false,
            isShowIntroText: true
        };
        var _a = _this.props, locale = _a.locale, _b = _a.placement, placement = _b === void 0 ? 'header' : _b, debug = _a.debug, onLoaded = _a.onLoaded, experiments = _a.experiments;
        _this.contactUsExperimentIsOn = new Experiments({ experiments: experiments }).enabled('specs.wos1.displayContactUsLinkInHelpWidget');
        _this.widgetId =
            placement === PLACEMENT_BUSINESS_MANAGER_DASHBOARD
                ? WIDGET_ID_BUSINESS_MANAGER_DASHBOARD
                : _this.getHeaderWidgetId();
        _this.i18n = i18n({ locale: locale });
        _this.loadingSequence = new IframeLoadingSequence(debug);
        _this.loadingSequence.whenUniqueScriptLoaded().then(function () {
            var dashboardWidgetStaticsVersion = _this.props.dashboardWidgetStaticsVersion;
            var messageType = 'dashboard-answers-widget-props';
            _this.iframeNode.contentWindow.postMessage({
                messageType: messageType,
                dashboardWidgetStaticsVersion: dashboardWidgetStaticsVersion,
                widgetPlacement: placement,
                debug: debug,
            }, 'https://wix.wixanswers.com');
        });
        _this.loadingSequence.whenAll().then(function () {
            if (debug) {
                console.info('dashboard answers widget - iframe is fully loaded!');
            }
            _this.setState({
                isShow: true,
            });
            onLoaded && onLoaded();
        });
        return _this;
    }
    Widget.prototype.getHeaderWidgetId = function () {
        return this.props.isEditorX ? WIDGET_ID_HEADER_EDITOR_X : WIDGET_ID_HEADER;
    };
    Widget.prototype.componentWillMount = function () {
        window.addEventListener('message', this.receiveMessage, false);
    };
    Widget.prototype.componentDidMount = function () {
        var _a = this.props, origin = _a.origin, supportRequestCallback = _a.supportRequestCallback, msid = _a.msid;
        if (supportRequestCallback) {
            logCallbackRequestExposure({ msid: msid });
        }
        reportFullStoryEvent('ANSWERS_WIDGET_IS_SHOWN', { origin: origin });
    };
    Widget.prototype.componentWillUnmount = function () {
        window.removeEventListener('message', this.receiveMessage, false);
    };
    Widget.prototype.isPostMessageValid = function (event) {
        return (!!this.iframeNode &&
            event.source === this.iframeNode.contentWindow &&
            event.origin === 'https://wix.wixanswers.com');
    };
    Widget.prototype.renderDashboardIntro = function () {
        var isShowIntroText = this.state.isShowIntroText;
        var _a = this.props, supportRequestCallback = _a.supportRequestCallback, msid = _a.msid;
        return (React.createElement(DashboardIntro, { supportRequestCallback: !!supportRequestCallback, contactUsExperimentIsOn: this.contactUsExperimentIsOn, show: isShowIntroText, msid: msid }));
    };
    Widget.prototype.render = function () {
        var _this = this;
        var _a = this.props, origin = _a.origin, msid = _a.msid, locale = _a.locale, placement = _a.placement;
        var isShow = this.state.isShow;
        var consentPolicy = getConsentPolicy();
        var consentPolicyParam = consentPolicy ? "&consentPolicy=" + consentPolicy : '';
        var src = "//wix.wixanswers.com/apps/widget/v1/wix/" + this.widgetId + "/view/" + locale + "?user_id=" + getUserId() + consentPolicyParam;
        return (React.createElement(I18nextProvider, { i18n: this.i18n },
            React.createElement("div", { "data-hook": "answers-widget", className: css.container + " " + (isShow ? css.iframeLoaded : '') + " " + (placement === PLACEMENT_BUSINESS_MANAGER_DASHBOARD
                    ? css.placementDashboard
                    : '') },
                React.createElement("div", { className: css.loader },
                    React.createElement(Animator, { scale: true, opacity: true, show: !isShow },
                        React.createElement(WidgetLoader, null))),
                React.createElement("div", { className: css.containerInner },
                    React.createElement("iframe", { ref: function (ref) { return (_this.iframeNode = ref); }, src: src, height: "100%", width: "100%", frameBorder: "0", onLoad: function () { return _this.loadingSequence.reportOnIframeLoad(); } }),
                    React.createElement("div", { className: css.supportLinkWrapper },
                        React.createElement(SupportLink, { origin: origin, msid: msid, locale: locale })),
                    placement === PLACEMENT_BUSINESS_MANAGER_DASHBOARD &&
                        this.renderDashboardIntro()))));
    };
    return Widget;
}(React.PureComponent));
export { Widget };
//# sourceMappingURL=Widget.js.map