"use strict";

exports.__esModule = true;
exports.FileAppenderLoadError = exports.LazyComponentLoadingError = exports.ListenerCallbackError = exports.UnregisteredComponentUsedError = exports.UnregisteredMethodInvokedError = exports.ReactModuleContainerError = void 0;

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ReactModuleContainerError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(ReactModuleContainerError, _Error);

  function ReactModuleContainerError(message) {
    var _this;

    _this = _Error.call(this, message) || this;
    _this.name = _this.constructor.name;

    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);
    } else {
      _this.stack = new Error(message).stack;
    }

    return _this;
  }

  return ReactModuleContainerError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

exports.ReactModuleContainerError = ReactModuleContainerError;

var UnregisteredMethodInvokedError = /*#__PURE__*/function (_ReactModuleContainer) {
  _inheritsLoose(UnregisteredMethodInvokedError, _ReactModuleContainer);

  function UnregisteredMethodInvokedError(methodName) {
    var _this2;

    _this2 = _ReactModuleContainer.call(this, "ModuleRegistry.invoke " + methodName + " used but not yet registered") || this;
    _this2.name = 'UnregisteredMethodInvokedError';
    return _this2;
  }

  return UnregisteredMethodInvokedError;
}(ReactModuleContainerError);

exports.UnregisteredMethodInvokedError = UnregisteredMethodInvokedError;

var UnregisteredComponentUsedError = /*#__PURE__*/function (_ReactModuleContainer2) {
  _inheritsLoose(UnregisteredComponentUsedError, _ReactModuleContainer2);

  function UnregisteredComponentUsedError(componentId) {
    var _this3;

    _this3 = _ReactModuleContainer2.call(this, "ModuleRegistry.component " + componentId + " used but not yet registered") || this;
    _this3.name = 'UnregisteredComponentUsedError';
    return _this3;
  }

  return UnregisteredComponentUsedError;
}(ReactModuleContainerError);

exports.UnregisteredComponentUsedError = UnregisteredComponentUsedError;

var ListenerCallbackError = /*#__PURE__*/function (_ReactModuleContainer3) {
  _inheritsLoose(ListenerCallbackError, _ReactModuleContainer3);

  function ListenerCallbackError(methodName, error) {
    var _this4;

    _this4 = _ReactModuleContainer3.call(this, "Error in listener callback of module registry method: " + methodName) || this;
    _this4.name = 'ListenerCallbackError';
    _this4.stack = _this4.stack + error.stack;
    _this4.originalError = error;
    return _this4;
  }

  return ListenerCallbackError;
}(ReactModuleContainerError);

exports.ListenerCallbackError = ListenerCallbackError;

var LazyComponentLoadingError = /*#__PURE__*/function (_ReactModuleContainer4) {
  _inheritsLoose(LazyComponentLoadingError, _ReactModuleContainer4);

  function LazyComponentLoadingError(component, error) {
    var _this5;

    _this5 = _ReactModuleContainer4.call(this, "Error loading moduleRegistry lazy component " + component) || this;
    _this5.name = 'LazyComponentLoadingError';
    _this5.stack = _this5.stack + error.stack;
    _this5.originalError = error;
    return _this5;
  }

  return LazyComponentLoadingError;
}(ReactModuleContainerError);

exports.LazyComponentLoadingError = LazyComponentLoadingError;

var FileAppenderLoadError = /*#__PURE__*/function (_ReactModuleContainer5) {
  _inheritsLoose(FileAppenderLoadError, _ReactModuleContainer5);

  function FileAppenderLoadError(fileUrl) {
    var _this6;

    _this6 = _ReactModuleContainer5.call(this, "FilesAppender failed to load file " + fileUrl) || this;
    _this6.name = 'FileAppenderLoadError';
    return _this6;
  }

  return FileAppenderLoadError;
}(ReactModuleContainerError);

exports.FileAppenderLoadError = FileAppenderLoadError;