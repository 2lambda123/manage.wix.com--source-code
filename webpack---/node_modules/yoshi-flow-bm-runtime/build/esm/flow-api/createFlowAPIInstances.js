import { assertEnabledApi } from '../util/assert-enabled-api';
export function createFlowAPIInstances({ bmModule, module, flowAPIDeps, useEssentials, }) {
    var _a, _b, _c;
    const { initI18n, asyncMessagesLoader, createBILogger, Experiments, } = flowAPIDeps;
    const { moduleParams: { accountLanguage: locale = 'en' }, } = bmModule;
    const { config: { translations }, } = module;
    const i18n = initI18n === null || initI18n === void 0 ? void 0 : initI18n({
        locale,
        asyncMessagesLoader,
        useSuspense: (_a = translations === null || translations === void 0 ? void 0 : translations.suspense) !== null && _a !== void 0 ? _a : true,
        disableAutoInit: true,
    });
    const biLogger = createBILogger === null || createBILogger === void 0 ? void 0 : createBILogger({
        biLoggerFactory: useEssentials
            ? bmModule._essentials.biLoggerFactory
            : undefined,
    });
    const experiments = ((_c = (_b = module.config.experiments) === null || _b === void 0 ? void 0 : _b.scopes.length) !== null && _c !== void 0 ? _c : 0) > 0 && useEssentials
        ? bmModule._essentials.createExperiments({ scopes: [] })
        : Experiments
            ? new Experiments()
            : undefined;
    return {
        get i18n() {
            assertEnabledApi(i18n, 'i18n');
            return i18n;
        },
        get biLogger() {
            assertEnabledApi(biLogger, 'biLogger');
            return biLogger;
        },
        get experiments() {
            assertEnabledApi(experiments, 'experiments');
            return experiments;
        },
    };
}
//# sourceMappingURL=createFlowAPIInstances.js.map