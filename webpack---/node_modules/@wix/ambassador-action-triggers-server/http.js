/* eslint-disable */
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionTriggersServer = void 0;
var http_1 = require("@wix/ambassador/runtime/http");
var ActionTriggersServer = function (baseUrl, httpClientConfig) {
    var httpClient = new http_1.AmbassadorHTTPClient(baseUrl, httpClientConfig);
    return {
        ActionTriggersIntegratorService: function () {
            return function (headers) {
                var service = {
                    cancelEvent: function (cancelEventRequest) {
                        return httpClient.invoke('DELETE', '/api/v1/events/{sourceUniqueId}/{eventUniqueId}', cancelEventRequest, headers);
                    },
                    createRule: function (createRuleRequest) { return httpClient.invoke('POST', '/api/v1/rules', createRuleRequest, headers); },
                    deleteRule: function (deleteRuleRequest) { return httpClient.invoke('DELETE', '/api/v1/rules/{id}', deleteRuleRequest, headers); },
                    fetchServiceRuleTemplates: function (fetchServiceRuleTemplatesRequest) {
                        return httpClient.invoke('POST', '/api/v1/rules/service/fetch-templates', fetchServiceRuleTemplatesRequest, headers);
                    },
                    getRule: function (getRuleRequest) { return httpClient.invoke('GET', '/api/v1/rules/{id}', getRuleRequest, headers); },
                    getRuleInstance: function (getRuleInstanceRequest) {
                        return httpClient.invoke('GET', 'api/v1/rules/{ruleId}/instances/{ruleInstanceId}', getRuleInstanceRequest, headers);
                    },
                    getRules: function (any) { return httpClient.invoke('GET', '/api/v1/rules', any, headers); },
                    getRulesAnalytics: function (any) { return httpClient.invoke('GET', '/api/v1/rules/analytics', any, headers); },
                    getRulesQuota: function (any) { return httpClient.invoke('GET', '/api/v1/rules/quota', any, headers); },
                    reportEvent: function (reportEventRequest) { return httpClient.invoke('POST', '/api/v1/report-event', reportEventRequest, headers); },
                    searchRules: function (searchRulesRequest) { return httpClient.invoke('POST', '/api/v1/rules/search', searchRulesRequest, headers); },
                    updateRule: function (updateRuleRequest) { return httpClient.invoke('PUT', '/api/v1/rules/{rule.id}', updateRuleRequest, headers); },
                };
                service.cancelEvent.__http_method = 'DELETE';
                service.cancelEvent.__http_url = '/api/v1/events/{sourceUniqueId}/{eventUniqueId}';
                service.createRule.__http_method = 'POST';
                service.createRule.__http_url = '/api/v1/rules';
                service.deleteRule.__http_method = 'DELETE';
                service.deleteRule.__http_url = '/api/v1/rules/{id}';
                service.fetchServiceRuleTemplates.__http_method = 'POST';
                service.fetchServiceRuleTemplates.__http_url = '/api/v1/rules/service/fetch-templates';
                service.getRule.__http_method = 'GET';
                service.getRule.__http_url = '/api/v1/rules/{id}';
                service.getRuleInstance.__http_method = 'GET';
                service.getRuleInstance.__http_url = 'api/v1/rules/{ruleId}/instances/{ruleInstanceId}';
                service.getRules.__http_method = 'GET';
                service.getRules.__http_url = '/api/v1/rules';
                service.getRulesAnalytics.__http_method = 'GET';
                service.getRulesAnalytics.__http_url = '/api/v1/rules/analytics';
                service.getRulesQuota.__http_method = 'GET';
                service.getRulesQuota.__http_url = '/api/v1/rules/quota';
                service.reportEvent.__http_method = 'POST';
                service.reportEvent.__http_url = '/api/v1/report-event';
                service.searchRules.__http_method = 'POST';
                service.searchRules.__http_url = '/api/v1/rules/search';
                service.updateRule.__http_method = 'PUT';
                service.updateRule.__http_url = '/api/v1/rules/{rule.id}';
                return service;
            };
        },
        AutomationsBackofficeService: function () {
            return function (headers) {
                var service = {
                    migrateForms: function (migrateFormsRequest) {
                        return httpClient.invoke('POST', '/api/v1/rules/migrate/{rule_id}', migrateFormsRequest, headers);
                    },
                };
                service.migrateForms.__http_method = 'POST';
                service.migrateForms.__http_url = '/api/v1/rules/migrate/{rule_id}';
                return service;
            };
        },
        AutomationTemplateCategoriesService: function () {
            return function (headers) {
                var service = {
                    createAutomationTemplateCategory: function (createAutomationTemplateCategoryRequest) {
                        return httpClient.invoke('POST', '/v1/automation-template-categories', createAutomationTemplateCategoryRequest, headers);
                    },
                    deleteAutomationTemplateCategory: function (deleteAutomationTemplateCategoryRequest) {
                        return httpClient.invoke('DELETE', '/v1/automation-template-categories/{id}', deleteAutomationTemplateCategoryRequest, headers);
                    },
                    queryAutomationTemplateCategory: function (queryAutomationTemplateCategoriesRequest) {
                        return httpClient.invoke('POST', '/v1/automation-template-categories/query', queryAutomationTemplateCategoriesRequest, headers);
                    },
                    updateAutomationTemplateCategory: function (updateAutomationTemplateCategoryRequest) {
                        return httpClient.invoke('PATCH', '/v1/automation-template-categories/{automation_template_category.id}', updateAutomationTemplateCategoryRequest, headers);
                    },
                };
                service.createAutomationTemplateCategory.__http_method = 'POST';
                service.createAutomationTemplateCategory.__http_url = '/v1/automation-template-categories';
                service.deleteAutomationTemplateCategory.__http_method = 'DELETE';
                service.deleteAutomationTemplateCategory.__http_url = '/v1/automation-template-categories/{id}';
                service.queryAutomationTemplateCategory.__http_method = 'POST';
                service.queryAutomationTemplateCategory.__http_url = '/v1/automation-template-categories/query';
                service.updateAutomationTemplateCategory.__http_method = 'PATCH';
                service.updateAutomationTemplateCategory.__http_url = '/v1/automation-template-categories/{automation_template_category.id}';
                return service;
            };
        },
        AutomationTemplateGroupsService: function () {
            return function (headers) {
                var service = {
                    addInstanceIdsToAutomationTemplateGroup: function (addInstanceIdsToAutomationTemplateGroupRequest) {
                        return httpClient.invoke('PATCH', '/v1/automation-template-groups/{id}/instance-ids', addInstanceIdsToAutomationTemplateGroupRequest, headers);
                    },
                    createAutomationTemplateGroup: function (createAutomationTemplateGroupRequest) {
                        return httpClient.invoke('POST', '/v1/automation-template-groups', createAutomationTemplateGroupRequest, headers);
                    },
                    deleteAutomationTemplateGroup: function (deleteAutomationTemplateGroupRequest) {
                        return httpClient.invoke('DELETE', '/v1/automation-template-groups/{id}', deleteAutomationTemplateGroupRequest, headers);
                    },
                    getAutomationTemplateGroup: function (getAutomationTemplateGroupRequest) {
                        return httpClient.invoke('GET', '/v1/automation-template-groups/{id}', getAutomationTemplateGroupRequest, headers);
                    },
                    listAutomationTemplateGroup: function (listAutomationTemplateGroupsRequest) {
                        return httpClient.invoke('GET', '/v1/automation-template-groups', listAutomationTemplateGroupsRequest, headers);
                    },
                    removeInstanceIdsFromAutomationTemplateGroup: function (removeInstanceIdsFromAutomationTemplateGroupRequest) {
                        return httpClient.invoke('DELETE', '/v1/automation-template-groups/{id}/instance-ids', removeInstanceIdsFromAutomationTemplateGroupRequest, headers);
                    },
                    updateAutomationTemplateGroup: function (updateAutomationTemplateGroupRequest) {
                        return httpClient.invoke('PATCH', '/v1/automation-template-groups/{automation_template_group.id}', updateAutomationTemplateGroupRequest, headers);
                    },
                };
                service.addInstanceIdsToAutomationTemplateGroup.__http_method = 'PATCH';
                service.addInstanceIdsToAutomationTemplateGroup.__http_url = '/v1/automation-template-groups/{id}/instance-ids';
                service.createAutomationTemplateGroup.__http_method = 'POST';
                service.createAutomationTemplateGroup.__http_url = '/v1/automation-template-groups';
                service.deleteAutomationTemplateGroup.__http_method = 'DELETE';
                service.deleteAutomationTemplateGroup.__http_url = '/v1/automation-template-groups/{id}';
                service.getAutomationTemplateGroup.__http_method = 'GET';
                service.getAutomationTemplateGroup.__http_url = '/v1/automation-template-groups/{id}';
                service.listAutomationTemplateGroup.__http_method = 'GET';
                service.listAutomationTemplateGroup.__http_url = '/v1/automation-template-groups';
                service.removeInstanceIdsFromAutomationTemplateGroup.__http_method = 'DELETE';
                service.removeInstanceIdsFromAutomationTemplateGroup.__http_url = '/v1/automation-template-groups/{id}/instance-ids';
                service.updateAutomationTemplateGroup.__http_method = 'PATCH';
                service.updateAutomationTemplateGroup.__http_url = '/v1/automation-template-groups/{automation_template_group.id}';
                return service;
            };
        },
        AutomationTemplatesService: function () {
            return function (headers) {
                var service = {
                    archiveAutomationTemplate: function (archiveAutomationTemplateRequest) {
                        return httpClient.invoke('PATCH', '/v1/automation-templates/{id}/archive', archiveAutomationTemplateRequest, headers);
                    },
                    automationTemplateNewVersion: function (automationTemplateNewVersionRequest) {
                        return httpClient.invoke('POST', '/v1/automation-templates/{id}/new-version', automationTemplateNewVersionRequest, headers);
                    },
                    createAutomationTemplate: function (createAutomationTemplateRequest) {
                        return httpClient.invoke('POST', '/v1/automation-templates', createAutomationTemplateRequest, headers);
                    },
                    enableAutomationTemplateTranslation: function (enableAutomationTemplateTranslationRequest) {
                        return httpClient.invoke('POST', '/v1/automation-templates/{id}/enable-translation', enableAutomationTemplateTranslationRequest, headers);
                    },
                    getAutomationTemplate: function (getAutomationTemplateRequest) {
                        return httpClient.invoke('GET', '/v1/automation-templates/{id}', getAutomationTemplateRequest, headers);
                    },
                    moveAutomationTemplateToLive: function (moveAutomationTemplateToLiveRequest) {
                        return httpClient.invoke('POST', '/v1/automation-templates/{id}/live', moveAutomationTemplateToLiveRequest, headers);
                    },
                    moveAutomationTemplateToPublic: function (moveAutomationTemplateToPublicRequest) {
                        return httpClient.invoke('POST', '/v1/automation-templates/{id}/public', moveAutomationTemplateToPublicRequest, headers);
                    },
                    queryAutomationTemplates: function (queryAutomationTemplatesRequest) {
                        return httpClient.invoke('POST', '/v1/automation-templates/query', queryAutomationTemplatesRequest, headers);
                    },
                    setTenantState: function (setTenantStateRequest) {
                        return httpClient.invoke('POST', '/v1/automation-templates-tenant-state', setTenantStateRequest, headers);
                    },
                    updateAutomationTemplate: function (updateAutomationTemplateRequest) {
                        return httpClient.invoke('PATCH', '/v1/automation-templates/{automation_template.id}', updateAutomationTemplateRequest, headers);
                    },
                };
                service.archiveAutomationTemplate.__http_method = 'PATCH';
                service.archiveAutomationTemplate.__http_url = '/v1/automation-templates/{id}/archive';
                service.automationTemplateNewVersion.__http_method = 'POST';
                service.automationTemplateNewVersion.__http_url = '/v1/automation-templates/{id}/new-version';
                service.createAutomationTemplate.__http_method = 'POST';
                service.createAutomationTemplate.__http_url = '/v1/automation-templates';
                service.enableAutomationTemplateTranslation.__http_method = 'POST';
                service.enableAutomationTemplateTranslation.__http_url = '/v1/automation-templates/{id}/enable-translation';
                service.getAutomationTemplate.__http_method = 'GET';
                service.getAutomationTemplate.__http_url = '/v1/automation-templates/{id}';
                service.moveAutomationTemplateToLive.__http_method = 'POST';
                service.moveAutomationTemplateToLive.__http_url = '/v1/automation-templates/{id}/live';
                service.moveAutomationTemplateToPublic.__http_method = 'POST';
                service.moveAutomationTemplateToPublic.__http_url = '/v1/automation-templates/{id}/public';
                service.queryAutomationTemplates.__http_method = 'POST';
                service.queryAutomationTemplates.__http_url = '/v1/automation-templates/query';
                service.setTenantState.__http_method = 'POST';
                service.setTenantState.__http_url = '/v1/automation-templates-tenant-state';
                service.updateAutomationTemplate.__http_method = 'PATCH';
                service.updateAutomationTemplate.__http_url = '/v1/automation-templates/{automation_template.id}';
                return service;
            };
        },
        TriggersConfigurationService: function () {
            return function (headers) {
                var service = {
                    createTriggerConfiguration: function (createTriggerConfigurationRequest) {
                        return httpClient.invoke('POST', '/v1/triggers-configuration', createTriggerConfigurationRequest, headers);
                    },
                    deleteTriggerConfiguration: function (deleteTriggerConfigurationRequest) {
                        return httpClient.invoke('DELETE', '/v1/triggers-configuration/{id}', deleteTriggerConfigurationRequest, headers);
                    },
                    enableTriggerConfigurationTranslation: function (enableTriggerConfigurationTranslationRequest) {
                        return httpClient.invoke('POST', '/v1/triggers-configuration/{id}/enable-translation', enableTriggerConfigurationTranslationRequest, headers);
                    },
                    getTriggerConfiguration: function (getTriggerConfigurationRequest) {
                        return httpClient.invoke('GET', '/v1/triggers-configuration/{id}', getTriggerConfigurationRequest, headers);
                    },
                    getTriggerSchema: function (getTriggerSchemaRequest) {
                        return httpClient.invoke('POST', '/v1/triggers-configuration/{id}/schema', getTriggerSchemaRequest, headers);
                    },
                    queryTriggersConfiguration: function (queryTriggersConfigurationRequest) {
                        return httpClient.invoke('POST', '/v1/triggers-configuration/query', queryTriggersConfigurationRequest, headers);
                    },
                    resolveTriggersConfiguration: function (resolveTriggersConfigurationRequest) {
                        return httpClient.invoke('GET', '/v1/triggers-configuration/resolve', resolveTriggersConfigurationRequest, headers);
                    },
                    updateTriggerConfiguration: function (updateTriggerConfigurationRequest) {
                        return httpClient.invoke('PATCH', '/v1/triggers-configuration/{trigger_configuration.id}', updateTriggerConfigurationRequest, headers);
                    },
                };
                service.createTriggerConfiguration.__http_method = 'POST';
                service.createTriggerConfiguration.__http_url = '/v1/triggers-configuration';
                service.deleteTriggerConfiguration.__http_method = 'DELETE';
                service.deleteTriggerConfiguration.__http_url = '/v1/triggers-configuration/{id}';
                service.enableTriggerConfigurationTranslation.__http_method = 'POST';
                service.enableTriggerConfigurationTranslation.__http_url = '/v1/triggers-configuration/{id}/enable-translation';
                service.getTriggerConfiguration.__http_method = 'GET';
                service.getTriggerConfiguration.__http_url = '/v1/triggers-configuration/{id}';
                service.getTriggerSchema.__http_method = 'POST';
                service.getTriggerSchema.__http_url = '/v1/triggers-configuration/{id}/schema';
                service.queryTriggersConfiguration.__http_method = 'POST';
                service.queryTriggersConfiguration.__http_url = '/v1/triggers-configuration/query';
                service.resolveTriggersConfiguration.__http_method = 'GET';
                service.resolveTriggersConfiguration.__http_url = '/v1/triggers-configuration/resolve';
                service.updateTriggerConfiguration.__http_method = 'PATCH';
                service.updateTriggerConfiguration.__http_url = '/v1/triggers-configuration/{trigger_configuration.id}';
                return service;
            };
        },
    };
};
exports.ActionTriggersServer = ActionTriggersServer;
exports.ActionTriggersServer.__transport = 'http';
__exportStar(require("./types"), exports);
//# sourceMappingURL=http.js.map