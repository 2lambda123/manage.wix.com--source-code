"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var isNonEmptyString = function (value) { return typeof value === 'string' && value !== ''; };
var buildForSiteOwnerQuery = function (forSiteOwner) {
    if (isNonEmptyString(forSiteOwner.loggedInUserId) &&
        isNonEmptyString(forSiteOwner.siteOwnerId)) {
        return '&' +
            ("requestContext.forSiteOwner.loggedInUserId=" + forSiteOwner.loggedInUserId + "&") +
            ("requestContext.forSiteOwner.siteOwnerId=" + forSiteOwner.siteOwnerId);
    }
    return '';
};
var buildForSiteVisitorsQuery = function (forSiteVisitors) {
    if (isNonEmptyString(forSiteVisitors.visitorId) &&
        isNonEmptyString(forSiteVisitors.siteOwnerId)) {
        return '&' +
            ("requestContext.forSiteVisitors.visitorId=" + forSiteVisitors.visitorId + "&") +
            ("requestContext.forSiteVisitors.siteOwnerId=" + forSiteVisitors.siteOwnerId);
    }
    return '';
};
function getRequestContextQuery(requestContext) {
    if (requestContext === void 0) { requestContext = {}; }
    var forSiteOwner = requestContext.forSiteOwner, forSiteVisitors = requestContext.forSiteVisitors;
    if (forSiteOwner && forSiteVisitors) {
        throw new Error('Only one of "forSiteOwner" or "forSiteVisitors" is accepted.');
    }
    if (forSiteOwner) {
        return buildForSiteOwnerQuery(forSiteOwner);
    }
    if (forSiteVisitors) {
        return buildForSiteVisitorsQuery(forSiteVisitors);
    }
    return '';
}
exports.getRequestContextQuery = getRequestContextQuery;
//# sourceMappingURL=request-context.js.map