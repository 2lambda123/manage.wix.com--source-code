'use strict';

exports.__esModule = true;

var _time = require('../../time/time');

var _time2 = _interopRequireDefault(_time);

var _dataItem = require('../common/data-item');

var _dataItem2 = _interopRequireDefault(_dataItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DurationDataItem = function (_DataItem) {
  _inherits(DurationDataItem, _DataItem);

  function DurationDataItem(appName, overrideFieldName) {
    var _DataItem$call;

    _classCallCheck(this, DurationDataItem);

    var duration = Math.floor(_time2.default.appLoadTime(appName));
    var durationParamName = overrideFieldName ? overrideFieldName : 'duration';

    var _this = _possibleConstructorReturn(this, _DataItem.call(this, (_DataItem$call = {}, _DataItem$call[durationParamName] = duration, _DataItem$call)));

    _this.appName = appName;
    return _this;
  }

  DurationDataItem.prototype.setFirstRequestDuration = function setFirstRequestDuration() {
    this.data.frd = Math.floor(_time2.default.firstRequestDuration(this.appName));
    return this;
  };

  return DurationDataItem;
}(_dataItem2.default);

exports.default = DurationDataItem;