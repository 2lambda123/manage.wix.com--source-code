'use strict';

exports.__esModule = true;

var _appLoadingPhaseItem = require('./app-loading-phase-item');

var _appLoadingPhaseItem2 = _interopRequireDefault(_appLoadingPhaseItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var prefix = function prefix(name, index) {
  return ('0' + index).slice(-2) + '_' + name;
};

var PrefixedAppLoadingPhaseItem = function (_AppLoadingPhaseItem) {
  _inherits(PrefixedAppLoadingPhaseItem, _AppLoadingPhaseItem);

  function PrefixedAppLoadingPhaseItem(_ref) {
    var name = _ref.name,
        index = _ref.index,
        phaseStartTime = _ref.phaseStartTime;

    _classCallCheck(this, PrefixedAppLoadingPhaseItem);

    var _this = _possibleConstructorReturn(this, _AppLoadingPhaseItem.call(this, { name: name, index: index, phaseStartTime: phaseStartTime }));

    _this.data.name = prefix(name, index);
    return _this;
  }

  return PrefixedAppLoadingPhaseItem;
}(_appLoadingPhaseItem2.default);

exports.default = PrefixedAppLoadingPhaseItem;