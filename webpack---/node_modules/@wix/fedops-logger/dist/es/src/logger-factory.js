'use strict';

exports.__esModule = true;
exports.create = create;
exports.setFactory = setFactory;

var _env = require('./env');

var _conf = require('./conf');

var _publishers = require('./publishers/publishers');

var _reporter = require('./reporter/reporter');

var _reporter2 = _interopRequireDefault(_reporter);

var _baseLogger = require('./base-logger');

var _baseLogger2 = _interopRequireDefault(_baseLogger);

var _widgetLogger = require('./widget-logger');

var _widgetLogger2 = _interopRequireDefault(_widgetLogger);

var _appData = require('./app-data/app-data');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReporterFactory = _reporter2.default;

/*
 * @param baseUrl
 * @param appId
 * @param isWidgetLogger
 * @param disableAutoLoadFinish
 * @param interactionTimeout
 * @param timeoutHook
 * @param startHook
 * @param endHook
 * @param publisher
 */
function create(appName) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!appName) {
    return null;
  }

  (0, _appData.initializeFedopsApps)();

  var appVersion = (0, _env.env)().__CI_APP_VERSION__ || _conf.DEFAULT_APP_VERSION;
  var reporter = createReporterInstance(params);

  if (params.isWidgetLogger) {
    return new _widgetLogger2.default(appName, appVersion, reporter, params);
  }

  return new _baseLogger2.default(appName, appVersion, reporter, params);
}

function setFactory(factory) {
  ReporterFactory = factory;
}

function createReporterInstance(params) {
  var publisher = (0, _publishers.getPublisherByType)(params.publisher);

  try {
    return new ReporterFactory(params.baseUrl, _conf.PERFORMANCE_BASE_URL, publisher);
  } catch (err) {
    return ReporterFactory(params.baseUrl, _conf.PERFORMANCE_BASE_URL, publisher); // eslint-disable-line
  }
}