'use strict';

exports.__esModule = true;
exports.publisherTypes = undefined;
exports.getPublisherByType = getPublisherByType;
exports.imagePublisher = imagePublisher;
exports.beaconPublisher = beaconPublisher;
exports.fetchPublisher = fetchPublisher;
exports.xhrPublisher = xhrPublisher;

var _pixel = require('../pixel/pixel');

var _pixel2 = _interopRequireDefault(_pixel);

var _tools = require('../tools/tools');

var _tools2 = _interopRequireDefault(_tools);

var _navigator = require('./navigator');

var _env = require('./env');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var publisherTypes = exports.publisherTypes = {
  image: 'image',
  beacon: 'beacon',
  fetch: 'fetch',
  xhr: 'xhr'
};

function getPublisherByType(type) {
  var publisher = void 0;

  switch (type) {
    case publisherTypes.beacon:
      {
        publisher = beaconPublisher;
        break;
      }
    case publisherTypes.fetch:
      {
        publisher = fetchPublisher;
        break;
      }
    case publisherTypes.image:
      {
        publisher = imagePublisher;
        break;
      }
    case publisherTypes.xhr:
      {
        publisher = xhrPublisher;
        break;
      }
    default:
      {
        if ((0, _env.isWebWorker)()) {
          if ((0, _env.hasFetch)()) {
            publisher = fetchPublisher;
          } else {
            publisher = xhrPublisher;
          }
        } else if ((0, _env.hasSendBeacon)()) {
          publisher = beaconPublisher;
        } else {
          publisher = imagePublisher;
        }
      }
  }

  return publisher;
}

var getUrl = function getUrl(baseUrl, data) {
  return baseUrl + '?' + _tools2.default.mapToQuery(data);
};

function imagePublisher(baseUrl, data) {
  return _pixel2.default.fetch(getUrl(baseUrl, data));
}

function beaconPublisher(baseUrl, data) {
  (0, _navigator.sendBeacon)(getUrl(baseUrl, data));
}

function fetchPublisher(baseUrl, data) {
  fetch(getUrl(baseUrl, data), {
    credentials: 'include'
  });
}

function xhrPublisher(baseUrl, data) {
  var xhttp = new XMLHttpRequest();
  xhttp.open('GET', getUrl(baseUrl, data));
  xhttp.withCredentials = true;
  xhttp.send();
}