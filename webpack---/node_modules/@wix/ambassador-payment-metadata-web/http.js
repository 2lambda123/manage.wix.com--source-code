/* eslint-disable */
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentMetadataWeb = void 0;
var http_1 = require("@wix/ambassador/runtime/http");
var PaymentMetadataWeb = function (baseUrl, httpClientConfig) {
    var httpClient = new http_1.AmbassadorHTTPClient(baseUrl, httpClientConfig);
    return {
        ContextService: function () {
            return function (headers) {
                var service = {
                    getPaymentProviderContext: function (getPaymentProviderContextRequest) {
                        return httpClient.invoke('GET', '/api/metadata/v1/providers/{id}/context', getPaymentProviderContextRequest, headers);
                    },
                };
                service.getPaymentProviderContext.__http_method = 'GET';
                service.getPaymentProviderContext.__http_url = '/api/metadata/v1/providers/{id}/context';
                return service;
            };
        },
        PaymentMethodConfigurationService: function () {
            return function (headers) {
                var service = {
                    getAllPaymentMethodConfiguration: function (getPaymentMethodsRequest) {
                        return httpClient.invoke('GET', '/api/metadata/v1/methods', getPaymentMethodsRequest, headers);
                    },
                    removeUnusedMethodConfigurations: function (removeUnusedPaymentMethodsRequest) {
                        return httpClient.invoke('DELETE', '/api/metadata/v1/methods', removeUnusedPaymentMethodsRequest, headers);
                    },
                };
                service.getAllPaymentMethodConfiguration.__http_method = 'GET';
                service.getAllPaymentMethodConfiguration.__http_url = '/api/metadata/v1/methods';
                service.removeUnusedMethodConfigurations.__http_method = 'DELETE';
                service.removeUnusedMethodConfigurations.__http_url = '/api/metadata/v1/methods';
                return service;
            };
        },
        PlatformMetadataService: function () {
            return function (headers) {
                var service = {
                    getProvidersDataByCountry: function (getProvidersDataByCountryRequest) {
                        return httpClient.invoke('GET', '/api/plugins/data', getProvidersDataByCountryRequest, headers);
                    },
                };
                service.getProvidersDataByCountry.__http_method = 'GET';
                service.getProvidersDataByCountry.__http_url = '/api/plugins/data';
                return service;
            };
        },
    };
};
exports.PaymentMetadataWeb = PaymentMetadataWeb;
exports.PaymentMetadataWeb.__transport = 'http';
__exportStar(require("./types"), exports);
//# sourceMappingURL=http.js.map