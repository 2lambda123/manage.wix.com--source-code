/* eslint-disable */
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentServicesWeb = void 0;
var http_1 = require("@wix/ambassador/runtime/http");
var PaymentServicesWeb = function (baseUrl, httpClientConfig) {
    var httpClient = new http_1.AmbassadorHTTPClient(baseUrl, httpClientConfig);
    return {
        AccountService: function () {
            return function (headers) {
                var service = {
                    get: function (getAccountRequest) { return httpClient.invoke('GET', '/api/payments/v2/accounts/{accountId}', getAccountRequest, headers); },
                };
                service.get.__http_method = 'GET';
                service.get.__http_url = '/api/payments/v2/accounts/{accountId}';
                return service;
            };
        },
        ApplePayPaymentMethodService: function () {
            return function (headers) {
                var service = {
                    validateMerchant: function (validateMerchantRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/accounts/{account_id}/apple-pay-validate-merchant', validateMerchantRequest, headers);
                    },
                };
                service.validateMerchant.__http_method = 'POST';
                service.validateMerchant.__http_url = '/api/payments/v2/accounts/{account_id}/apple-pay-validate-merchant';
                return service;
            };
        },
        BackofficeTransactionService: function () {
            return function (headers) {
                var service = {
                    list: function (listBackofficeTransactionsRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/backoffice/transactions', listBackofficeTransactionsRequest, headers);
                    },
                };
                service.list.__http_method = 'GET';
                service.list.__http_url = '/api/merchant/v2/backoffice/transactions';
                return service;
            };
        },
        CreditCardService: function () {
            return function (headers) {
                var service = {
                    create: function (createCreditCardRequest) {
                        return httpClient.invoke('POST', '/api/v2/credit-cards', createCreditCardRequest, headers);
                    },
                    delete: function (deleteCreditCardRequest) {
                        return httpClient.invoke('DELETE', '/api/v2/credit-cards/{credit_card_id}', deleteCreditCardRequest, headers);
                    },
                    get: function (getCreditCardRequest) {
                        return httpClient.invoke('GET', '/api/v2/credit-cards/{credit_card_id}', getCreditCardRequest, headers);
                    },
                    list: function (listCreditCardRequest) { return httpClient.invoke('GET', '/api/v2/credit-cards', listCreditCardRequest, headers); },
                    markAsPrimary: function (markAsPrimaryCreditCardRequest) {
                        return httpClient.invoke('POST', '/api/v2/credit-cards/{credit_card_id}/primary', markAsPrimaryCreditCardRequest, headers);
                    },
                    update: function (updateCreditCardRequest) {
                        return httpClient.invoke('PATCH', '/api/v2/credit-cards/{credit_card_id}', updateCreditCardRequest, headers);
                    },
                };
                service.create.__http_method = 'POST';
                service.create.__http_url = '/api/v2/credit-cards';
                service.delete.__http_method = 'DELETE';
                service.delete.__http_url = '/api/v2/credit-cards/{credit_card_id}';
                service.get.__http_method = 'GET';
                service.get.__http_url = '/api/v2/credit-cards/{credit_card_id}';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/api/v2/credit-cards';
                service.markAsPrimary.__http_method = 'POST';
                service.markAsPrimary.__http_url = '/api/v2/credit-cards/{credit_card_id}/primary';
                service.update.__http_method = 'PATCH';
                service.update.__http_url = '/api/v2/credit-cards/{credit_card_id}';
                return service;
            };
        },
        MandatoryFieldService: function () {
            return function (headers) {
                var service = {
                    list: function (listMandatoryFieldsRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/mandatory-fields', listMandatoryFieldsRequest, headers);
                    },
                };
                service.list.__http_method = 'GET';
                service.list.__http_url = '/api/payments/v2/mandatory-fields';
                return service;
            };
        },
        MetadataService: function () {
            return function (headers) {
                var service = {
                    listPaymentMethodsByCountry: function (listPaymentMethodsByCountryRequest) {
                        return httpClient.invoke('GET', '/api/metadata/v1/countries/{country}/methods', listPaymentMethodsByCountryRequest, headers);
                    },
                };
                service.listPaymentMethodsByCountry.__http_method = 'GET';
                service.listPaymentMethodsByCountry.__http_url = '/api/metadata/v1/countries/{country}/methods';
                return service;
            };
        },
        OrderService: function () {
            return function (headers) {
                var service = {
                    anonymizeOrders: function (anonymizeOrdersRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/orders/anonymize', anonymizeOrdersRequest, headers);
                    },
                    cancelSubscription: function (cancelSubscriptionRequest) {
                        return httpClient.invoke('DELETE', '/api/payments/v2/orders/{order_id}/subscription', cancelSubscriptionRequest, headers);
                    },
                    clearPaymentCredentials: function (clearPaymentCredentialsRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/orders/{order_id}/clear-payment-credentials', clearPaymentCredentialsRequest, headers);
                    },
                    create: function (createOrderRequest) { return httpClient.invoke('POST', '/api/payments/v2/orders', createOrderRequest, headers); },
                    get: function (getOrderRequest) { return httpClient.invoke('GET', '/api/payments/v2/orders/{order_id}', getOrderRequest, headers); },
                    getSubscriptionInfo: function (getSubscriptionInfoRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/orders/{order_id}/subscription/info', getSubscriptionInfoRequest, headers);
                    },
                    reactivateSubscription: function (reactivateSubscriptionRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/orders/{order_id}/subscription/reactivate', reactivateSubscriptionRequest, headers);
                    },
                    suspendSubscription: function (suspendSubscriptionRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/orders/{order_id}/subscription/suspend', suspendSubscriptionRequest, headers);
                    },
                    updateBuyerInfo: function (updateBuyerInfoRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/orders/{order_id}/buyer-info', updateBuyerInfoRequest, headers);
                    },
                    updateSubscription: function (updateSubscriptionRequest) {
                        return httpClient.invoke('PATCH', '/api/payments/v2/orders/{order_id}/subscription', updateSubscriptionRequest, headers);
                    },
                };
                service.anonymizeOrders.__http_method = 'POST';
                service.anonymizeOrders.__http_url = '/api/payments/v2/orders/anonymize';
                service.cancelSubscription.__http_method = 'DELETE';
                service.cancelSubscription.__http_url = '/api/payments/v2/orders/{order_id}/subscription';
                service.clearPaymentCredentials.__http_method = 'POST';
                service.clearPaymentCredentials.__http_url = '/api/payments/v2/orders/{order_id}/clear-payment-credentials';
                service.create.__http_method = 'POST';
                service.create.__http_url = '/api/payments/v2/orders';
                service.get.__http_method = 'GET';
                service.get.__http_url = '/api/payments/v2/orders/{order_id}';
                service.getSubscriptionInfo.__http_method = 'GET';
                service.getSubscriptionInfo.__http_url = '/api/payments/v2/orders/{order_id}/subscription/info';
                service.reactivateSubscription.__http_method = 'POST';
                service.reactivateSubscription.__http_url = '/api/payments/v2/orders/{order_id}/subscription/reactivate';
                service.suspendSubscription.__http_method = 'POST';
                service.suspendSubscription.__http_url = '/api/payments/v2/orders/{order_id}/subscription/suspend';
                service.updateBuyerInfo.__http_method = 'POST';
                service.updateBuyerInfo.__http_url = '/api/payments/v2/orders/{order_id}/buyer-info';
                service.updateSubscription.__http_method = 'PATCH';
                service.updateSubscription.__http_url = '/api/payments/v2/orders/{order_id}/subscription';
                return service;
            };
        },
        PaymentDetailsService: function () {
            return function (headers) {
                var service = {
                    create: function (createPaymentDetailsRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/payment-details', createPaymentDetailsRequest, headers);
                    },
                };
                service.create.__http_method = 'POST';
                service.create.__http_url = '/api/payments/v2/payment-details';
                return service;
            };
        },
        PaymentMethodService: function () {
            return function (headers) {
                var service = {
                    get: function (getPaymentMethodRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/accounts/{account_id}/payment-methods/{payment_method}', getPaymentMethodRequest, headers);
                    },
                    getBuyNowPayLaterMethod: function (getBuyNowPayLaterMethodRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/accounts/{account_id}/bnpl/payment-methods/{payment_method}', getBuyNowPayLaterMethodRequest, headers);
                    },
                    list: function (payV2ListPaymentMethodsRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/accounts/{account_id}/payment-methods', payV2ListPaymentMethodsRequest, headers);
                    },
                    listBuyNowPayLaterMethods: function (listBuyNowPayLaterMethodsRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/accounts/{account_id}/bnpl/payment-methods', listBuyNowPayLaterMethodsRequest, headers);
                    },
                    listExpressPaymentMethods: function (listExpressPaymentMethodsRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/accounts/{account_id}/express-payment-methods', listExpressPaymentMethodsRequest, headers);
                    },
                };
                service.get.__http_method = 'GET';
                service.get.__http_url = '/api/payments/v2/accounts/{account_id}/payment-methods/{payment_method}';
                service.getBuyNowPayLaterMethod.__http_method = 'GET';
                service.getBuyNowPayLaterMethod.__http_url = '/api/payments/v2/accounts/{account_id}/bnpl/payment-methods/{payment_method}';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/api/payments/v2/accounts/{account_id}/payment-methods';
                service.listBuyNowPayLaterMethods.__http_method = 'GET';
                service.listBuyNowPayLaterMethods.__http_url = '/api/payments/v2/accounts/{account_id}/bnpl/payment-methods';
                service.listExpressPaymentMethods.__http_method = 'GET';
                service.listExpressPaymentMethods.__http_url = '/api/payments/v2/accounts/{account_id}/express-payment-methods';
                return service;
            };
        },
        PaymentMethodsService: function () {
            return function (headers) {
                var service = {
                    connect: function (connectPaymentMethodsRequest) {
                        return httpClient.invoke('POST', '/api/merchant/v2/payment-methods/connect', connectPaymentMethodsRequest, headers);
                    },
                    list: function (merchantV2ListPaymentMethodsRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/payment-methods', merchantV2ListPaymentMethodsRequest, headers);
                    },
                    suggestions: function (suggestionsRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/payment-methods/suggestions', suggestionsRequest, headers);
                    },
                };
                service.connect.__http_method = 'POST';
                service.connect.__http_url = '/api/merchant/v2/payment-methods/connect';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/api/merchant/v2/payment-methods';
                service.suggestions.__http_method = 'GET';
                service.suggestions.__http_url = '/api/merchant/v2/payment-methods/suggestions';
                return service;
            };
        },
        PaymentService: function () {
            return function (headers) {
                var service = {
                    charge: function (chargeRequest) { return httpClient.invoke('POST', '/api/payments/v2/accounts/{account_id}/charges', chargeRequest, headers); },
                    chargeForOrder: function (chargeForOrderRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/orders/{order_id}/charges', chargeForOrderRequest, headers);
                    },
                    execute: function (executeChargeRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/charges/{charge_id}/execution', executeChargeRequest, headers);
                    },
                    get: function (getChargeRequest) { return httpClient.invoke('GET', '/api/payments/v2/charges/{charge_id}', getChargeRequest, headers); },
                    list: function (listChargesRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/orders/{order_id}/charges', listChargesRequest, headers);
                    },
                    updateChargeInfo: function (updateChargeInfoRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/charges/{charge_id}', updateChargeInfoRequest, headers);
                    },
                };
                service.charge.__http_method = 'POST';
                service.charge.__http_url = '/api/payments/v2/accounts/{account_id}/charges';
                service.chargeForOrder.__http_method = 'POST';
                service.chargeForOrder.__http_url = '/api/payments/v2/orders/{order_id}/charges';
                service.execute.__http_method = 'POST';
                service.execute.__http_url = '/api/payments/v2/charges/{charge_id}/execution';
                service.get.__http_method = 'GET';
                service.get.__http_url = '/api/payments/v2/charges/{charge_id}';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/api/payments/v2/orders/{order_id}/charges';
                service.updateChargeInfo.__http_method = 'POST';
                service.updateChargeInfo.__http_url = '/api/payments/v2/charges/{charge_id}';
                return service;
            };
        },
        PayPalPaymentMethodService: function () {
            return function (headers) {
                var service = {
                    createCheckout: function (createCheckoutRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/accounts/{account_id}/paypal-checkout', createCheckoutRequest, headers);
                    },
                    getPaymentDetails: function (getPaymentDetailsRequest) {
                        return httpClient.invoke('GET', '/api/payments/v2/accounts/{account_id}/paypal-checkout/{order_id}/payment-details', getPaymentDetailsRequest, headers);
                    },
                    updateCheckout: function (updateCheckoutRequest) {
                        return httpClient.invoke('PUT', '/api/payments/v2/accounts/{account_id}/paypal-checkout/{order_id}', updateCheckoutRequest, headers);
                    },
                };
                service.createCheckout.__http_method = 'POST';
                service.createCheckout.__http_url = '/api/payments/v2/accounts/{account_id}/paypal-checkout';
                service.getPaymentDetails.__http_method = 'GET';
                service.getPaymentDetails.__http_url = '/api/payments/v2/accounts/{account_id}/paypal-checkout/{order_id}/payment-details';
                service.updateCheckout.__http_method = 'PUT';
                service.updateCheckout.__http_url = '/api/payments/v2/accounts/{account_id}/paypal-checkout/{order_id}';
                return service;
            };
        },
        PlatformTransactionInfoService: function () {
            return function (headers) {
                var service = {
                    get: function (getTransactionInfoRequest) {
                        return httpClient.invoke('PUT', '/api/plugin/internal/v1/transactions/{transactionId}/info', getTransactionInfoRequest, headers);
                    },
                };
                service.get.__http_method = 'PUT';
                service.get.__http_url = '/api/plugin/internal/v1/transactions/{transactionId}/info';
                return service;
            };
        },
        PlatformTransactionService: function () {
            return function (headers) {
                var service = {
                    update: function (updateTransactionRequest) {
                        return httpClient.invoke('PUT', '/api/plugin/v1/transactions/{transactionId}', updateTransactionRequest, headers);
                    },
                };
                service.update.__http_method = 'PUT';
                service.update.__http_url = '/api/plugin/v1/transactions/{transactionId}';
                return service;
            };
        },
        PosTransactionService: function () {
            return function (headers) {
                var service = {
                    create: function (createPosTransactionRequest) {
                        return httpClient.invoke('POST', '/api/payments/v2/charges/{charge_id}/pos', createPosTransactionRequest, headers);
                    },
                };
                service.create.__http_method = 'POST';
                service.create.__http_url = '/api/payments/v2/charges/{charge_id}/pos';
                return service;
            };
        },
        ProviderAccountsService: function () {
            return function (headers) {
                var service = {
                    claim: function (claimRequest) { return httpClient.invoke('POST', '/api/merchant/v2/provider-accounts/{provider_id}/claim', claimRequest, headers); },
                    connect: function (connectRequest) {
                        return httpClient.invoke('POST', '/api/merchant/v2/provider-accounts/{provider_id}/connect', connectRequest, headers);
                    },
                };
                service.claim.__http_method = 'POST';
                service.claim.__http_url = '/api/merchant/v2/provider-accounts/{provider_id}/claim';
                service.connect.__http_method = 'POST';
                service.connect.__http_url = '/api/merchant/v2/provider-accounts/{provider_id}/connect';
                return service;
            };
        },
        ProviderPlatformEventsService: function () {
            return function (headers) {
                var service = {
                    submitEvent: function (submitEventRequest) {
                        return httpClient.invoke('POST', '/payments/v1/provider-platform-events', submitEventRequest, headers);
                    },
                };
                service.submitEvent.__http_method = 'POST';
                service.submitEvent.__http_url = '/payments/v1/provider-platform-events';
                return service;
            };
        },
        RecurringPaymentService: function () {
            return function (headers) {
                var service = {
                    cancelRecurringPayment: function (cancelRecurringPaymentRequest) {
                        return httpClient.invoke('PUT', '/api/merchant/v2/orders/{order_id}/recurring-payment/cancellation', cancelRecurringPaymentRequest, headers);
                    },
                };
                service.cancelRecurringPayment.__http_method = 'PUT';
                service.cancelRecurringPayment.__http_url = '/api/merchant/v2/orders/{order_id}/recurring-payment/cancellation';
                return service;
            };
        },
        RefundService: function () {
            return function (headers) {
                var service = {
                    getRefunds: function (getRefundsRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/transactions/{transaction_id}/refunds', getRefundsRequest, headers);
                    },
                    refund: function (refundRequest) {
                        return httpClient.invoke('POST', '/api/merchant/v2/transactions/{transaction_id}/refund', refundRequest, headers);
                    },
                };
                service.getRefunds.__http_method = 'GET';
                service.getRefunds.__http_url = '/api/merchant/v2/transactions/{transaction_id}/refunds';
                service.refund.__http_method = 'POST';
                service.refund.__http_url = '/api/merchant/v2/transactions/{transaction_id}/refund';
                return service;
            };
        },
        TransactionService: function () {
            return function (headers) {
                var service = {
                    approve: function (approveTransactionRequest) {
                        return httpClient.invoke('POST', '/api/merchant/v2/transactions/{transaction_id}/approve', approveTransactionRequest, headers);
                    },
                    cancel: function (cancelTransactionRequest) {
                        return httpClient.invoke('POST', '/api/merchant/v2/transactions/{transaction_id}/cancel', cancelTransactionRequest, headers);
                    },
                    get: function (getTransactionRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/transactions/{transaction_id}', getTransactionRequest, headers);
                    },
                    getFilters: function (getTransactionFiltersRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/transactions/filters', getTransactionFiltersRequest, headers);
                    },
                    getPermissions: function (any) { return httpClient.invoke('GET', '/api/merchant/v2/transactions/permissions', any, headers); },
                    getTotals: function (getTransactionTotalsRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/transactions/totals', getTransactionTotalsRequest, headers);
                    },
                    hasTransactions: function (hasTransactionsRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/transactions/exist', hasTransactionsRequest, headers);
                    },
                    list: function (listTransactionsRequest) {
                        return httpClient.invoke('GET', '/api/merchant/v2/transactions', listTransactionsRequest, headers);
                    },
                };
                service.approve.__http_method = 'POST';
                service.approve.__http_url = '/api/merchant/v2/transactions/{transaction_id}/approve';
                service.cancel.__http_method = 'POST';
                service.cancel.__http_url = '/api/merchant/v2/transactions/{transaction_id}/cancel';
                service.get.__http_method = 'GET';
                service.get.__http_url = '/api/merchant/v2/transactions/{transaction_id}';
                service.getFilters.__http_method = 'GET';
                service.getFilters.__http_url = '/api/merchant/v2/transactions/filters';
                service.getPermissions.__http_method = 'GET';
                service.getPermissions.__http_url = '/api/merchant/v2/transactions/permissions';
                service.getTotals.__http_method = 'GET';
                service.getTotals.__http_url = '/api/merchant/v2/transactions/totals';
                service.hasTransactions.__http_method = 'GET';
                service.hasTransactions.__http_url = '/api/merchant/v2/transactions/exist';
                service.list.__http_method = 'GET';
                service.list.__http_url = '/api/merchant/v2/transactions';
                return service;
            };
        },
    };
};
exports.PaymentServicesWeb = PaymentServicesWeb;
exports.PaymentServicesWeb.__transport = 'http';
__exportStar(require("./types"), exports);
//# sourceMappingURL=http.js.map