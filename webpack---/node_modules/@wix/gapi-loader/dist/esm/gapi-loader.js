import { __awaiter, __generator } from "tslib";
var GAPI_IFRAME_LOADER_URL = 'https://manage.wix.com/_serverless/seo-serverless/statics/gapi-iframe-loader.html';
var IFRAME_ID_PREFIX = 'gapi-loader-';
var _isIFrame = function (input) {
    return input !== null && input.tagName === 'IFRAME';
};
var _addListener = function (id) {
    return new Promise(function (resolve, reject) {
        var timer = setTimeout(reject, 5000);
        var handler = function (e) {
            if (e.data === "gapi-loaded:" + id) {
                clearTimeout(timer);
                resolve();
                window.removeEventListener('message', handler);
            }
        };
        window.addEventListener('message', handler);
    });
};
var _createIframe = function (id) {
    var iframe = document.createElement('iframe');
    [
        ['src', GAPI_IFRAME_LOADER_URL + "?id=" + id],
        ['id', id],
        ['width', '0'],
        ['height', '0'],
        ['frameborder', '0'],
        ['style', 'display: none;'],
    ].forEach(function (_a) {
        var qualifiedName = _a[0], value = _a[1];
        return iframe.setAttribute(qualifiedName, value);
    });
    return iframe;
};
var _getContainer = function (selector) {
    if (selector === void 0) { selector = 'body'; }
    return document.querySelector(selector) || document.body;
};
var _createId = function () {
    var randomId = Date.now().toString(36) + Math.random().toString(36).substring(2);
    return "" + IFRAME_ID_PREFIX + randomId;
};
var _getGapiClient = function (id) {
    var _a;
    var iframe = document.getElementById(id);
    return _isIFrame(iframe) && ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.gapi);
};
var _findIframe = function (container) {
    return container.querySelector("iframe[id^=\"" + IFRAME_ID_PREFIX + "\"]");
};
var GApiLoader = /** @class */ (function () {
    function GApiLoader() {
        this._count = 0;
    }
    GApiLoader.prototype.increment = function (n) {
        if (n === void 0) { n = 1; }
        this._count += n;
    };
    GApiLoader.prototype.getCount = function () {
        return this._count;
    };
    GApiLoader.prototype.loadClient = function (selector) {
        return __awaiter(this, void 0, void 0, function () {
            var container, currIframe, id, pendingPromise;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        container = _getContainer(selector);
                        currIframe = _findIframe(container);
                        if (!currIframe) return [3 /*break*/, 1];
                        id = currIframe.id;
                        return [3 /*break*/, 3];
                    case 1:
                        id = _createId();
                        pendingPromise = _addListener(id);
                        container === null || container === void 0 ? void 0 : container.appendChild(_createIframe(id));
                        return [4 /*yield*/, pendingPromise];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [2 /*return*/, _getGapiClient(id)];
                }
            });
        });
    };
    return GApiLoader;
}());
export default GApiLoader;
//# sourceMappingURL=gapi-loader.js.map