/* eslint-disable */
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WixQuotesWeb = void 0;
var http_1 = require("@wix/ambassador/runtime/http");
var WixQuotesWeb = function (baseUrl, httpClientConfig) {
    var httpClient = new http_1.AmbassadorHTTPClient(baseUrl, httpClientConfig);
    return {
        InvoicesProductService: function () {
            return function (headers) {
                var service = {
                    createProduct: function (createProductRequest) { return httpClient.invoke('POST', '/v1/products', createProductRequest, headers); },
                    deleteProduct: function (deleteProductRequest) {
                        return httpClient.invoke('DELETE', '/v1/products/{id}', deleteProductRequest, headers);
                    },
                    getProduct: function (getProductRequest) { return httpClient.invoke('GET', '/v1/products/{id}', getProductRequest, headers); },
                    queryProduct: function (queryProductRequest) { return httpClient.invoke('POST', '/v1/products/query', queryProductRequest, headers); },
                    updateProduct: function (updateProductRequest) {
                        return httpClient.invoke('PATCH', '/v1/products/{product.id}', updateProductRequest, headers);
                    },
                };
                service.createProduct.__http_method = 'POST';
                service.createProduct.__http_url = '/v1/products';
                service.deleteProduct.__http_method = 'DELETE';
                service.deleteProduct.__http_url = '/v1/products/{id}';
                service.getProduct.__http_method = 'GET';
                service.getProduct.__http_url = '/v1/products/{id}';
                service.queryProduct.__http_method = 'POST';
                service.queryProduct.__http_url = '/v1/products/query';
                service.updateProduct.__http_method = 'PATCH';
                service.updateProduct.__http_url = '/v1/products/{product.id}';
                return service;
            };
        },
        InvoicesService: function () {
            return function (headers) {
                var service = {
                    addPayment: function (paymentsRequest) {
                        return httpClient.invoke('POST', '/api/v1/invoices/{id.id}/{id.version}/payments', paymentsRequest, headers);
                    },
                    ascendItIfNeeded: function (any) { return httpClient.invoke('POST', '/api/v1/invoices/ascendItIfNeeded', any, headers); },
                    create: function (invoicesCreateRequest) { return httpClient.invoke('POST', '/api/v1/invoices', invoicesCreateRequest, headers); },
                    createPreviewLink: function (invoicesPreviewLinkRequest) {
                        return httpClient.invoke('POST', '/api/v1/invoices/{id.id}/{id.version}/previewlink', invoicesPreviewLinkRequest, headers);
                    },
                    delete: function (invoicesDeleteRequest) {
                        return httpClient.invoke('DELETE', '/api/v1/invoices/{id.id}', invoicesDeleteRequest, headers);
                    },
                    downloadPDF: function (pDFRequest) { return httpClient.invoke('GET', '/api/v1/invoices/{id.id}/{id.version}/pdf', pDFRequest, headers); },
                    get: function (invoicesGetRequest) {
                        return httpClient.invoke('GET', '/api/v1/invoices/{id.id}/{id.version}', invoicesGetRequest, headers);
                    },
                    getInvoice: function (getInvoiceRequest) {
                        return httpClient.invoke('GET', '/api/v1/invoices/{id}/get', getInvoiceRequest, headers);
                    },
                    getNextNumber: function (invoicesGetNextNumberRequest) {
                        return httpClient.invoke('GET', '/api/v1/invoices/nextNumber', invoicesGetNextNumberRequest, headers);
                    },
                    getTenantSettings: function (invoicesGetTenantSettingsRequest) {
                        return httpClient.invoke('GET', '/api/v1/invoices/settings', invoicesGetTenantSettingsRequest, headers);
                    },
                    getTotals: function (invoicesGetTotalsRequest) {
                        return httpClient.invoke('GET', '/api/v1/invoices/totals', invoicesGetTotalsRequest, headers);
                    },
                    isUsableNumber: function (invoicesUsableNumberRequest) {
                        return httpClient.invoke('GET', '/api/v1/invoices/{id.id}/usableNumber', invoicesUsableNumberRequest, headers);
                    },
                    partialUpdate: function (partialUpdateRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/invoices/update/{id.id}/{id.version}', partialUpdateRequest, headers);
                    },
                    preview: function (invoicesPreviewRequest) {
                        return httpClient.invoke('POST', '/api/v1/invoices/preview', invoicesPreviewRequest, headers);
                    },
                    query: function (queryRequest) { return httpClient.invoke('POST', '/api/v1/invoices/query', queryRequest, headers); },
                    search: function (invoicesSearchRequest) {
                        return httpClient.invoke('POST', '/api/v1/invoices/search', invoicesSearchRequest, headers);
                    },
                    sendToCustomer: function (invoicesSendRequest) {
                        return httpClient.invoke('POST', '/api/v1/invoices/{id.id}/{id.version}/send', invoicesSendRequest, headers);
                    },
                    setTenantSettings: function (invoicesSetTenanSettingsRequest) {
                        return httpClient.invoke('PUT', '/api/v1/invoices/settings', invoicesSetTenanSettingsRequest, headers);
                    },
                    shouldAscendIt: function (shouldAscendItRequest) {
                        return httpClient.invoke('GET', '/api/v1/invoices/shouldAscendIt', shouldAscendItRequest, headers);
                    },
                    update: function (invoicesUpdateRequest) {
                        return httpClient.invoke('PUT', '/api/v1/invoices/{id.id}/{id.version}', invoicesUpdateRequest, headers);
                    },
                    verifyInvoice: function (verifyInvoiceRequest) {
                        return httpClient.invoke('POST', '/api/v1/invoices/verify', verifyInvoiceRequest, headers);
                    },
                    view: function (invoicesViewRequest) {
                        return httpClient.invoke('POST', '/api/v1/invoices/{id.id}/{id.version}/view', invoicesViewRequest, headers);
                    },
                    viewAndUpdateInvoice: function (viewAndUpdateInvoiceRequest) {
                        return httpClient.invoke('POST', '/api/v1/invoices/{id}/view-and-update/{token}', viewAndUpdateInvoiceRequest, headers);
                    },
                    void: function (voidRequest) { return httpClient.invoke('POST', '/api/v1/invoices/{id.id}/{id.version}/void', voidRequest, headers); },
                };
                service.addPayment.__http_method = 'POST';
                service.addPayment.__http_url = '/api/v1/invoices/{id.id}/{id.version}/payments';
                service.ascendItIfNeeded.__http_method = 'POST';
                service.ascendItIfNeeded.__http_url = '/api/v1/invoices/ascendItIfNeeded';
                service.create.__http_method = 'POST';
                service.create.__http_url = '/api/v1/invoices';
                service.createPreviewLink.__http_method = 'POST';
                service.createPreviewLink.__http_url = '/api/v1/invoices/{id.id}/{id.version}/previewlink';
                service.delete.__http_method = 'DELETE';
                service.delete.__http_url = '/api/v1/invoices/{id.id}';
                service.downloadPDF.__http_method = 'GET';
                service.downloadPDF.__http_url = '/api/v1/invoices/{id.id}/{id.version}/pdf';
                service.get.__http_method = 'GET';
                service.get.__http_url = '/api/v1/invoices/{id.id}/{id.version}';
                service.getInvoice.__http_method = 'GET';
                service.getInvoice.__http_url = '/api/v1/invoices/{id}/get';
                service.getNextNumber.__http_method = 'GET';
                service.getNextNumber.__http_url = '/api/v1/invoices/nextNumber';
                service.getTenantSettings.__http_method = 'GET';
                service.getTenantSettings.__http_url = '/api/v1/invoices/settings';
                service.getTotals.__http_method = 'GET';
                service.getTotals.__http_url = '/api/v1/invoices/totals';
                service.isUsableNumber.__http_method = 'GET';
                service.isUsableNumber.__http_url = '/api/v1/invoices/{id.id}/usableNumber';
                service.partialUpdate.__http_method = 'PATCH';
                service.partialUpdate.__http_url = '/api/v1/invoices/update/{id.id}/{id.version}';
                service.preview.__http_method = 'POST';
                service.preview.__http_url = '/api/v1/invoices/preview';
                service.query.__http_method = 'POST';
                service.query.__http_url = '/api/v1/invoices/query';
                service.search.__http_method = 'POST';
                service.search.__http_url = '/api/v1/invoices/search';
                service.sendToCustomer.__http_method = 'POST';
                service.sendToCustomer.__http_url = '/api/v1/invoices/{id.id}/{id.version}/send';
                service.setTenantSettings.__http_method = 'PUT';
                service.setTenantSettings.__http_url = '/api/v1/invoices/settings';
                service.shouldAscendIt.__http_method = 'GET';
                service.shouldAscendIt.__http_url = '/api/v1/invoices/shouldAscendIt';
                service.update.__http_method = 'PUT';
                service.update.__http_url = '/api/v1/invoices/{id.id}/{id.version}';
                service.verifyInvoice.__http_method = 'POST';
                service.verifyInvoice.__http_url = '/api/v1/invoices/verify';
                service.view.__http_method = 'POST';
                service.view.__http_url = '/api/v1/invoices/{id.id}/{id.version}/view';
                service.viewAndUpdateInvoice.__http_method = 'POST';
                service.viewAndUpdateInvoice.__http_url = '/api/v1/invoices/{id}/view-and-update/{token}';
                service.void.__http_method = 'POST';
                service.void.__http_url = '/api/v1/invoices/{id.id}/{id.version}/void';
                return service;
            };
        },
        InvoicesTaxService: function () {
            return function (headers) {
                var service = {
                    createTax: function (createTaxRequest) { return httpClient.invoke('POST', '/v1/taxes', createTaxRequest, headers); },
                    deleteTax: function (deleteTaxRequest) { return httpClient.invoke('DELETE', '/v1/taxes/{id}', deleteTaxRequest, headers); },
                    getTax: function (getTaxRequest) { return httpClient.invoke('GET', '/v1/taxes/{id}', getTaxRequest, headers); },
                    queryTax: function (queryTaxRequest) { return httpClient.invoke('POST', '/v1/taxes/query', queryTaxRequest, headers); },
                    updateTax: function (updateTaxRequest) { return httpClient.invoke('PATCH', '/v1/taxes/{tax.id}', updateTaxRequest, headers); },
                };
                service.createTax.__http_method = 'POST';
                service.createTax.__http_url = '/v1/taxes';
                service.deleteTax.__http_method = 'DELETE';
                service.deleteTax.__http_url = '/v1/taxes/{id}';
                service.getTax.__http_method = 'GET';
                service.getTax.__http_url = '/v1/taxes/{id}';
                service.queryTax.__http_method = 'POST';
                service.queryTax.__http_url = '/v1/taxes/query';
                service.updateTax.__http_method = 'PATCH';
                service.updateTax.__http_url = '/v1/taxes/{tax.id}';
                return service;
            };
        },
        PriceQuotesService: function () {
            return function (headers) {
                var service = {
                    accept: function (acceptRequest) { return httpClient.invoke('POST', '/api/v1/price-quotes/{id.id}/{id.version}/accept', acceptRequest, headers); },
                    create: function (idlCreateRequest) { return httpClient.invoke('POST', '/api/v1/price-quotes', idlCreateRequest, headers); },
                    createInvoice: function (createInvoiceRequest) {
                        return httpClient.invoke('POST', '/api/v1/price-quotes/{id.id}/{id.version}/create-invoice', createInvoiceRequest, headers);
                    },
                    createPreviewLink: function (idlPreviewLinkRequest) {
                        return httpClient.invoke('POST', '/api/v1/price-quotes/{id.id}/{id.version}/previewlink', idlPreviewLinkRequest, headers);
                    },
                    delete: function (idlDeleteRequest) { return httpClient.invoke('DELETE', '/api/v1/price-quotes/{id.id}', idlDeleteRequest, headers); },
                    get: function (idlGetRequest) { return httpClient.invoke('GET', '/api/v1/price-quotes/{id.id}/{id.version}', idlGetRequest, headers); },
                    getNextNumber: function (idlGetNextNumberRequest) {
                        return httpClient.invoke('GET', '/api/v1/price-quotes/nextNumber', idlGetNextNumberRequest, headers);
                    },
                    getTenantSettings: function (idlGetTenantSettingsRequest) {
                        return httpClient.invoke('GET', '/api/v1/price-quotes/settings', idlGetTenantSettingsRequest, headers);
                    },
                    getTotals: function (idlGetTotalsRequest) {
                        return httpClient.invoke('GET', '/api/v1/price-quotes/totals', idlGetTotalsRequest, headers);
                    },
                    isUsableNumber: function (idlUsableNumberRequest) {
                        return httpClient.invoke('GET', '/api/v1/price-quotes/{id.id}/usableNumber', idlUsableNumberRequest, headers);
                    },
                    preview: function (idlPreviewRequest) { return httpClient.invoke('POST', '/api/v1/price-quotes/preview', idlPreviewRequest, headers); },
                    search: function (idlSearchRequest) { return httpClient.invoke('POST', '/api/v1/price-quotes/search', idlSearchRequest, headers); },
                    sendToCustomer: function (idlSendRequest) {
                        return httpClient.invoke('POST', '/api/v1/price-quotes/{id.id}/{id.version}/send', idlSendRequest, headers);
                    },
                    setAscendBrandingOption: function (setAscendBrandingOptionRequest) {
                        return httpClient.invoke('POST', '/api/v1/price-quotes/settings/ascendBranding', setAscendBrandingOptionRequest, headers);
                    },
                    setTenantSettings: function (idlSetTenanSettingsRequest) {
                        return httpClient.invoke('PUT', '/api/v1/price-quotes/settings', idlSetTenanSettingsRequest, headers);
                    },
                    shouldAscendIt: function (shouldAscendItRequest) {
                        return httpClient.invoke('GET', '/api/v1/price-quotes/shouldAscendIt', shouldAscendItRequest, headers);
                    },
                    uouAccept: function (uoUAcceptRequest) {
                        return httpClient.invoke('POST', '/api/v1/price-quotes/{id.id}/{id.version}/uou-accept', uoUAcceptRequest, headers);
                    },
                    update: function (idlUpdateRequest) {
                        return httpClient.invoke('PUT', '/api/v1/price-quotes/{id.id}/{id.version}', idlUpdateRequest, headers);
                    },
                    view: function (idlViewRequest) { return httpClient.invoke('POST', '/api/v1/price-quotes/{id.id}/{id.version}/view', idlViewRequest, headers); },
                };
                service.accept.__http_method = 'POST';
                service.accept.__http_url = '/api/v1/price-quotes/{id.id}/{id.version}/accept';
                service.create.__http_method = 'POST';
                service.create.__http_url = '/api/v1/price-quotes';
                service.createInvoice.__http_method = 'POST';
                service.createInvoice.__http_url = '/api/v1/price-quotes/{id.id}/{id.version}/create-invoice';
                service.createPreviewLink.__http_method = 'POST';
                service.createPreviewLink.__http_url = '/api/v1/price-quotes/{id.id}/{id.version}/previewlink';
                service.delete.__http_method = 'DELETE';
                service.delete.__http_url = '/api/v1/price-quotes/{id.id}';
                service.get.__http_method = 'GET';
                service.get.__http_url = '/api/v1/price-quotes/{id.id}/{id.version}';
                service.getNextNumber.__http_method = 'GET';
                service.getNextNumber.__http_url = '/api/v1/price-quotes/nextNumber';
                service.getTenantSettings.__http_method = 'GET';
                service.getTenantSettings.__http_url = '/api/v1/price-quotes/settings';
                service.getTotals.__http_method = 'GET';
                service.getTotals.__http_url = '/api/v1/price-quotes/totals';
                service.isUsableNumber.__http_method = 'GET';
                service.isUsableNumber.__http_url = '/api/v1/price-quotes/{id.id}/usableNumber';
                service.preview.__http_method = 'POST';
                service.preview.__http_url = '/api/v1/price-quotes/preview';
                service.search.__http_method = 'POST';
                service.search.__http_url = '/api/v1/price-quotes/search';
                service.sendToCustomer.__http_method = 'POST';
                service.sendToCustomer.__http_url = '/api/v1/price-quotes/{id.id}/{id.version}/send';
                service.setAscendBrandingOption.__http_method = 'POST';
                service.setAscendBrandingOption.__http_url = '/api/v1/price-quotes/settings/ascendBranding';
                service.setTenantSettings.__http_method = 'PUT';
                service.setTenantSettings.__http_url = '/api/v1/price-quotes/settings';
                service.shouldAscendIt.__http_method = 'GET';
                service.shouldAscendIt.__http_url = '/api/v1/price-quotes/shouldAscendIt';
                service.uouAccept.__http_method = 'POST';
                service.uouAccept.__http_url = '/api/v1/price-quotes/{id.id}/{id.version}/uou-accept';
                service.update.__http_method = 'PUT';
                service.update.__http_url = '/api/v1/price-quotes/{id.id}/{id.version}';
                service.view.__http_method = 'POST';
                service.view.__http_url = '/api/v1/price-quotes/{id.id}/{id.version}/view';
                return service;
            };
        },
    };
};
exports.WixQuotesWeb = WixQuotesWeb;
exports.WixQuotesWeb.__transport = 'http';
__exportStar(require("./types"), exports);
//# sourceMappingURL=http.js.map