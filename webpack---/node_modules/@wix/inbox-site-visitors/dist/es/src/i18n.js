import i18next from 'i18next';
import { translate as i18nTranslate } from 'react-i18next';
var translationNamespace = 'inboxSiteVisitorTranslations';
export default function i18n(locale) {
    var _a, _b;
    return i18next.createInstance().init({
        keySeparator: false,
        lng: locale,
        fallbackLng: 'en',
        interpolation: {
            escapeValue: false,
        },
        resources: (_a = {},
            _a[locale] = (_b = {},
                _b[translationNamespace] = require("./assets/locale/messages_" + locale + ".json"),
                _b),
            _a),
    });
}
function getResourceByLocaleWithFallback(locale, fallbackLocale) {
    try {
        return require("./assets/locale/messages_" + locale + ".json");
    }
    catch (_a) {
        return require("./assets/locale/messages_" + fallbackLocale + ".json");
    }
}
export function addTranslations(i18nInstance) {
    var newInstance = i18nInstance.cloneInstance();
    var locale = newInstance.options.lng;
    var resource = getResourceByLocaleWithFallback(locale, 'en');
    newInstance.addResources(locale, translationNamespace, resource);
    return newInstance;
}
export var translate = function (options) {
    return i18nTranslate(translationNamespace, options);
};
//# sourceMappingURL=i18n.js.map