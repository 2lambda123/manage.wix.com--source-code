import { __awaiter, __extends, __generator } from "tslib";
import ServerApi from './server-api';
import MasterPageManager from '../services/master-page-manager';
var Repository = /** @class */ (function (_super) {
    __extends(Repository, _super);
    function Repository() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Repository.prototype.http$fetchChatrooms = function (_a) {
        var _b = _a.filter, filter = _b === void 0 ? {} : _b, _c = _a.nextPointer, nextPointer = _c === void 0 ? null : _c, pageSize = _a.pageSize;
        return __awaiter(this, void 0, void 0, function () {
            var _d, masterPage, cursor, idsToFetch, rooms;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0: return [4 /*yield*/, MasterPageManager.getPage({ filter: filter, pointer: nextPointer, pageSize: pageSize })];
                    case 1:
                        _d = _e.sent(), masterPage = _d.masterPage, cursor = _d.cursor;
                        idsToFetch = masterPage.map(function (masterPageEntry) { return masterPageEntry.id; });
                        if (!(idsToFetch.length > 0)) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.http$fetchChatroomsByIds({ chatroomIds: idsToFetch })];
                    case 2:
                        rooms = _e.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        rooms = [];
                        _e.label = 4;
                    case 4: return [2 /*return*/, {
                            chatrooms: {
                                items: rooms,
                                next: {
                                    before: cursor,
                                    since: null,
                                },
                            },
                            unreadChatroomCount: 0,
                            unreadChatroomIds: [],
                        }];
                }
            });
        });
    };
    // eslint-disable-next-line no-empty-pattern
    Repository.prototype.getLastSnapshot = function (_a) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_b) {
                return [2 /*return*/, []];
            });
        });
    };
    return Repository;
}(ServerApi));
export { Repository };
