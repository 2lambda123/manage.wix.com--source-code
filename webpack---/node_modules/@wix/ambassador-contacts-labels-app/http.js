/* eslint-disable */
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContactsLabelsApp = void 0;
var http_1 = require("@wix/ambassador/runtime/http");
var ContactsLabelsApp = function (baseUrl, httpClientConfig) {
    var httpClient = new http_1.AmbassadorHTTPClient(baseUrl, httpClientConfig);
    return {
        ContactLabelsServiceV4: function () {
            return function (headers) {
                var service = {
                    deleteLabel: function (deleteLabelRequest) { return httpClient.invoke('DELETE', '/v4/labels/{key}', deleteLabelRequest, headers); },
                    findOrCreateLabel: function (findOrCreateLabelRequest) {
                        return httpClient.invoke('POST', '/v4/labels', findOrCreateLabelRequest, headers);
                    },
                    getLabel: function (getLabelRequest) { return httpClient.invoke('GET', '/v4/labels/{key}', getLabelRequest, headers); },
                    listLabelNamespaces: function (listLabelNamespacesRequest) {
                        return httpClient.invoke('GET', '/v4/labels/namespaces', listLabelNamespacesRequest, headers);
                    },
                    listLabels: function (listLabelsRequest) { return httpClient.invoke('GET', '/v4/labels', listLabelsRequest, headers); },
                    queryLabels: function (queryLabelsRequest) { return httpClient.invoke('POST', '/v4/labels/query', queryLabelsRequest, headers); },
                    updateLabel: function (updateLabelRequest) { return httpClient.invoke('PATCH', '/v4/labels/{label.key}', updateLabelRequest, headers); },
                };
                service.deleteLabel.__http_method = 'DELETE';
                service.deleteLabel.__http_url = '/v4/labels/{key}';
                service.findOrCreateLabel.__http_method = 'POST';
                service.findOrCreateLabel.__http_url = '/v4/labels';
                service.getLabel.__http_method = 'GET';
                service.getLabel.__http_url = '/v4/labels/{key}';
                service.listLabelNamespaces.__http_method = 'GET';
                service.listLabelNamespaces.__http_url = '/v4/labels/namespaces';
                service.listLabels.__http_method = 'GET';
                service.listLabels.__http_url = '/v4/labels';
                service.queryLabels.__http_method = 'POST';
                service.queryLabels.__http_url = '/v4/labels/query';
                service.updateLabel.__http_method = 'PATCH';
                service.updateLabel.__http_url = '/v4/labels/{label.key}';
                return service;
            };
        },
    };
};
exports.ContactsLabelsApp = ContactsLabelsApp;
exports.ContactsLabelsApp.__transport = 'http';
__exportStar(require("./types"), exports);
//# sourceMappingURL=http.js.map