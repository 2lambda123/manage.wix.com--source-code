import { __extends } from "tslib";
import * as React from 'react';
import { MoveSiteToFolderDialogLazyComponent } from '@wix/site-actions-service';
var MoveToFolderSiteAction = /** @class */ (function (_super) {
    __extends(MoveToFolderSiteAction, _super);
    function MoveToFolderSiteAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MoveToFolderSiteAction.prototype.render = function () {
        var _a = this.props, locale = _a.locale, siteActionsStaticsUrl = _a.siteActionsStaticsUrl, debug = _a.debug, quickActionsData = _a.quickActionsData, closeAllDialogs = _a.closeAllDialogs, isOpen = _a.isOpen, processDialogResult = _a.processDialogResult, getCurrentInstanceByMsid = _a.getCurrentInstanceByMsid, experiments = _a.experiments, isTeamAccount = _a.isTeamAccount, topology = _a.topology;
        var foldersInfo = quickActionsData.foldersInfo, accountPermissions = quickActionsData.accountPermissions;
        if (!foldersInfo) {
            return null;
        }
        return (React.createElement(MoveSiteToFolderDialogLazyComponent, { selectionContext: foldersInfo.moveSitesContext, onOk: processDialogResult, getCurrentInstanceByMsid: getCurrentInstanceByMsid, initialActiveFolderId: foldersInfo.activeFolderId, initialFolders: foldersInfo.existingFolders, permissions: accountPermissions, isOpen: isOpen, locale: locale, experiments: experiments, onRequestClose: closeAllDialogs, view: foldersInfo.view, sub_view: foldersInfo.sub_view, siteActionsStaticsUrl: siteActionsStaticsUrl, onNewFolderCreated: foldersInfo.newFolderCreationHandler, debug: debug, isTeamAccount: isTeamAccount, siteActionsComponentsTranslationsStaticsUrl: topology.siteActionsComponentsTranslationsStaticsUrl }));
    };
    return MoveToFolderSiteAction;
}(React.PureComponent));
export { MoveToFolderSiteAction };
//# sourceMappingURL=MoveToFolderSiteAction.js.map