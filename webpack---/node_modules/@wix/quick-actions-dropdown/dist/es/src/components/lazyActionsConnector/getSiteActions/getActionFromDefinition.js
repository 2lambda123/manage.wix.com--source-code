import { __assign } from "tslib";
import { ActionType } from '../../../types/site-actions';
var extractActionCommonProps = function (params) {
    var definition = params.definition, origin = params.origin, openDialog = params.openDialog, quickActionsData = params.quickActionsData, onDialogActionComplete = params.onDialogActionComplete, t = params.t;
    if (definition.type === ActionType.separator || definition.type === ActionType.loader) {
        return {
            text: definition.type === ActionType.loader ? t(definition.textKey) : '',
            disabled: true,
            visible: definition.visible,
            dataHook: "quick-actions-action-" + definition.actionName,
            onClick: function () { return 0; }
        };
    }
    var actionName = definition.actionName, visible = definition.visible, isPermitted = definition.isPermitted, textKey = definition.textKey;
    var onClick = definition.type === ActionType.dialog ?
        openDialog(definition.dialog) :
        function () { return definition.onActionClick({
            origin: origin,
            quickActionsData: quickActionsData,
            onDialogActionComplete: onDialogActionComplete
        }); };
    return {
        text: t(textKey),
        disabled: isPermitted && !isPermitted(quickActionsData),
        visible: visible !== false,
        dataHook: "quick-actions-action-" + actionName,
        onClick: onClick
    };
};
export var getActionFromDefinition = function (params) { return function (definition) {
    return __assign(__assign({}, definition), extractActionCommonProps(__assign({ definition: definition }, params)));
}; };
//# sourceMappingURL=getActionFromDefinition.js.map