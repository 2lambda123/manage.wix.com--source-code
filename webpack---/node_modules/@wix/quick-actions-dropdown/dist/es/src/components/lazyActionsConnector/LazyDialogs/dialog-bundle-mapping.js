import { DialogBundleNames } from '@wix/site-actions-common';
import { PrefechBundleMappings } from './prefetch-bundles';
var getBundleTopology = function (bundle, topology) {
    var _a;
    return ((_a = {},
        _a[DialogBundleNames.Rename] = [topology.siteActionsStaticsUrl],
        _a[DialogBundleNames.AddContributor] = [topology.siteActionsStaticsUrl],
        _a[DialogBundleNames.MoveToTrash] = [topology.siteActionsStaticsUrl],
        _a[DialogBundleNames.Restore] = [topology.siteActionsStaticsUrl],
        _a[DialogBundleNames.RemoveFromTrash] = [topology.siteActionsStaticsUrl],
        _a[DialogBundleNames.Duplicate] = [topology.siteActionsStaticsUrl],
        _a[DialogBundleNames.MoveSiteToFolder] = [topology.siteActionsStaticsUrl],
        _a[DialogBundleNames.Feedback] = [topology.siteActionsGetFeedbackStaticsUrl],
        _a[DialogBundleNames.MigrateToEditorX] = [topology.siteActionsMigrateToEditorXStaticsUrl],
        _a)[bundle]);
};
var minified = function (debug) { return (debug ? '' : '.min'); };
function getBundleFullPath(bundle, topology, debug) {
    var staticUrl = getBundleTopology(bundle, topology);
    return "" + staticUrl + bundle + ".bundle" + minified(debug) + ".js";
}
function isPrefetchAlreadyRendered(prefetchBundleFullPath) {
    for (var i = 0; i < document.head.children.length; i++) {
        var childNode = document.head.children[i];
        if (childNode.tagName === 'LINK' &&
            childNode.getAttribute('rel') === 'prefetch' &&
            childNode.getAttribute('href') === prefetchBundleFullPath) {
            return true;
        }
    }
    return false;
}
function prefetchBundle(bundle, topology, debug) {
    var prefetchBundleFullPath = getBundleFullPath(bundle, topology, debug);
    if (isPrefetchAlreadyRendered(prefetchBundleFullPath)) {
        return;
    }
    // <link rel="prefetch" href="bundleUrl.js">
    var prefetchScriptTag = document.createElement('link');
    prefetchScriptTag.rel = 'prefetch';
    prefetchScriptTag.href = prefetchBundleFullPath;
    document.head.appendChild(prefetchScriptTag);
}
function prefetchDialogs(dialogBundle, topology, debug) {
    dialogBundle.forEach(function (bundle) { return prefetchBundle(bundle, topology, debug); });
}
export function prefetchDialogsInBundle(dialogsBundle, topology, debug) {
    if (dialogsBundle !== null && PrefechBundleMappings[dialogsBundle]) {
        prefetchDialogs(PrefechBundleMappings[dialogsBundle], topology, debug);
    }
}
//# sourceMappingURL=dialog-bundle-mapping.js.map