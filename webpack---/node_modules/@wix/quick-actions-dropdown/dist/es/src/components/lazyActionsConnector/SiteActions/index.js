import { __spreadArrays } from "tslib";
import { getFeedbackSiteAction } from './GetFeedback/getFeedbackSiteAction';
import { getEditSiteAction } from './EditSite/getEditSiteAction';
import { getPreviewSiteAction } from './Preview/getPreviewSiteAction';
import { getViewSiteAction } from './ViewSite/getViewSiteAction';
import { getRenameSiteAction } from './Rename/getRenameSiteAction';
import { getDuplicateSiteAction } from './Duplicate/getDuplicateSiteAction';
import { getTransferSiteActions } from './Transfer/getTransferSiteActions';
import { getGoToFolderSiteAction } from './GoToFolder/getGoToFolderSiteAction';
import { getMoveToFolderSiteAction } from './MoveToFolder/getMoveToFolderSiteAction';
import { getDeleteSiteAction } from './Delete/getDeleteSiteAction';
import { getSeparator } from './Separator/getSeparator';
import { getCreateNewSiteAction } from './CreateNewSite/getCreateNewSiteAction';
import { getRestoreSiteAction } from './Restore/getRestoreSiteAction';
import { getRemoveFromTrashSiteAction } from './RemoveFromTrash/getRemoveFromTrashSiteAction';
import { getInviteContributorSiteAction } from './InviteContributor/invite-contributor-site-action';
import { getMigrateToEditorXSiteAction } from './MigrateToEditorX/getMigrateSiteToEditorXSiteAction';
export var getSiteActionDefinitions = function (_a) {
    var quickActionsData = _a.quickActionsData, origin = _a.origin, experiments = _a.experiments, dealerData = _a.dealerData;
    var isInTrash = Boolean(quickActionsData.deletedDate);
    if (isInTrash) {
        return [
            getRestoreSiteAction(),
            getRemoveFromTrashSiteAction()
        ];
    }
    var migrateToEditorXSiteAction = getMigrateToEditorXSiteAction(quickActionsData, experiments, dealerData);
    var migrateToEditorXSeparator = getSeparator(migrateToEditorXSiteAction.visible);
    var createNewSiteAction = getCreateNewSiteAction(origin, experiments);
    var createNewSiteSeparator = getSeparator(createNewSiteAction.visible);
    var redesignExperiment = experiments['specs.wossm.ImproveUXofSiteActions'] === 'true';
    var removeCreateSiteExperiment = experiments['specs.wossm.removeCreateSiteFromQuickActionsDropdown'] === 'true';
    if (redesignExperiment) {
        var editSite = getEditSiteAction(quickActionsData, origin);
        var editSiteSeparator = getSeparator(editSite.visible);
        var separator = getSeparator(true);
        return __spreadArrays([
            editSite,
            editSiteSeparator,
            getRenameSiteAction(),
            getFeedbackSiteAction(experiments),
            getPreviewSiteAction(quickActionsData),
            getViewSiteAction(quickActionsData),
            migrateToEditorXSiteAction,
            separator
        ], getTransferSiteActions(quickActionsData), [
            getInviteContributorSiteAction(experiments, origin),
            separator,
            getGoToFolderSiteAction(quickActionsData),
            getDuplicateSiteAction(),
            getMoveToFolderSiteAction(quickActionsData),
            getDeleteSiteAction()
        ], (removeCreateSiteExperiment ? [] : [
            createNewSiteSeparator,
            createNewSiteAction
        ]));
    }
    else {
        return __spreadArrays([
            getEditSiteAction(quickActionsData, origin),
            getFeedbackSiteAction(experiments),
            getPreviewSiteAction(quickActionsData),
            getViewSiteAction(quickActionsData),
            getRenameSiteAction(),
            getDuplicateSiteAction(),
            migrateToEditorXSeparator,
            migrateToEditorXSiteAction,
            migrateToEditorXSeparator
        ], getTransferSiteActions(quickActionsData), [
            getInviteContributorSiteAction(experiments, origin),
            getGoToFolderSiteAction(quickActionsData),
            getMoveToFolderSiteAction(quickActionsData),
            getDeleteSiteAction()
        ], (removeCreateSiteExperiment ? [] : [
            createNewSiteSeparator,
            createNewSiteAction
        ]));
    }
};
//# sourceMappingURL=index.js.map