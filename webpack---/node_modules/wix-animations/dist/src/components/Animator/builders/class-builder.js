"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _Animator = _interopRequireDefault(require("../Animator.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var flattenArray = function flattenArray(arr) {
  return [].concat.apply([], arr);
};

var convertToArray = function convertToArray(value) {
  return Array.isArray(value) ? value : [value];
};

var debugMap = {
  enter: 'enter',
  entering: ['enter', 'enter-active'],
  exit: 'exit',
  exiting: ['exit', 'exit-active']
};

var getTranslateClasses = function getTranslateClasses(translate) {
  return translate.useSameTransition ? ['translate', 'translate-use-same-transition'] : 'translate';
};

var classMap = {
  child1: function child1() {
    return 'child-layer-1';
  },
  child2: function child2() {
    return 'child-layer-2';
  },
  child3: function child3() {
    return 'child-layer-3';
  },
  opacity: function opacity(_opacity) {
    return _opacity && 'opacity';
  },
  scale: function scale(_scale) {
    return _scale && 'scale';
  },
  height: function height(_height) {
    return _height && 'height';
  },
  width: function width(_width) {
    return _width && 'width';
  },
  timing: function timing(_timing) {
    return _timing && "timing-" + _timing;
  },
  sequence: function sequence(_sequence) {
    return _sequence && 'child-sequence';
  },
  translate: function translate(_translate) {
    return _translate && getTranslateClasses(_translate);
  },
  translateWrapper: function translateWrapper(translate) {
    return translate && 'translate-wrapper';
  },
  className: function className(_className) {
    return _className && _className;
  },
  debug: function debug(mode) {
    return mode && debugMap[mode];
  }
};

var ClassBuilder = /*#__PURE__*/function () {
  function ClassBuilder(data) {
    this.names = void 0;
    this.classNames = void 0;
    this.data = void 0;
    this.names = [];
    this.classNames = [];
    this.data = data || {};
  }

  var _proto = ClassBuilder.prototype;

  _proto.withName = function withName(nameOrNames) {
    var _this = this;

    nameOrNames && convertToArray(nameOrNames).forEach(function (name) {
      return _this.names.push(name);
    });
    return this;
  };

  _proto.getValue = function getValue(name, value) {
    return this.withName(classMap[name](value));
  };

  _proto.withClassName = function withClassName(className) {
    if (className) {
      this.classNames.push(className);
    }

    return this;
  };

  _proto.withChildLayer = function withChildLayer(number) {
    return this.getValue("child" + number, number);
  };

  _proto.withDebug = function withDebug(debug) {
    return this.getValue('debug', debug);
  };

  _proto.withOpacity = function withOpacity(opacity) {
    return this.getValue('opacity', opacity);
  };

  _proto.withScale = function withScale(scale) {
    return this.getValue('scale', scale);
  };

  _proto.withHeight = function withHeight(height) {
    return this.getValue('height', height);
  };

  _proto.withWidth = function withWidth(width) {
    return this.getValue('width', width);
  };

  _proto.withTiming = function withTiming(timing) {
    return this.getValue('timing', timing);
  };

  _proto.withSequence = function withSequence(sequence) {
    return this.getValue('sequence', sequence);
  };

  _proto.withTranslate = function withTranslate(translate) {
    return this.getValue('translate', translate);
  };

  _proto.withTranslateWrapper = function withTranslateWrapper(translate) {
    return this.getValue('translateWrapper', translate);
  };

  _proto.build = function build() {
    return flattenArray(this.names).map(function (name) {
      return _Animator["default"][name];
    }).concat(this.classNames).join(' ');
  };

  return ClassBuilder;
}();

var _default = ClassBuilder;
exports["default"] = _default;