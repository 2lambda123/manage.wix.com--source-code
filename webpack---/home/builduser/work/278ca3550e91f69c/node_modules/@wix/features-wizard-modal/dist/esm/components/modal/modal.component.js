import React, { useEffect, useMemo, useState } from 'react';
import { Modal } from 'wix-style-react';
import { ModuleRegistry } from 'react-module-container';
import { ModalDataHooks } from './modal.data-hooks';
import { ErrorBoundary } from './error';
import { Loading } from './loading';
import { useRerender } from '../../hooks/rerender.hook';
export var FeaturesWizardModal = function (_a) {
    var isOpen = _a.isOpen, onClose = _a.onClose, componentName = _a.componentName;
    var _b = useState(true), isLoading = _b[0], setIsLoading = _b[1];
    var _c = useRerender(), rerender = _c.rerender, rerenderKey = _c.rerenderKey;
    var LazyComponent = useMemo(function () { return ModuleRegistry.component(componentName); }, [
        componentName,
    ]);
    var onLoaded = function () {
        setIsLoading(false);
    };
    useEffect(function () {
        if (isOpen) {
            setIsLoading(true);
        }
    }, [isOpen]);
    return (React.createElement(Modal, { dataHook: ModalDataHooks.MODAL, isOpen: isOpen, onRequestClose: onClose },
        React.createElement(ErrorBoundary, { key: rerenderKey, closeModal: onClose, reload: rerender },
            isLoading && React.createElement(Loading, null),
            React.createElement("div", { style: { display: isLoading ? 'none' : 'block' }, "data-hook": ModalDataHooks.LAZY_COMPONENT_WRAPPER },
                React.createElement(LazyComponent, { onClose: onClose, onLoaded: onLoaded })))));
};
//# sourceMappingURL=modal.component.js.map