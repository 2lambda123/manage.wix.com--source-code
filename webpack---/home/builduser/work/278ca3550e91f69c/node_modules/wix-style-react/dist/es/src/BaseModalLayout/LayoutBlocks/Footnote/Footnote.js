import React from 'react';
import PropTypes from 'prop-types';
import { st, classes } from './Footnote.st.css';
import Divider from '../../../Divider';
import { useBaseModalLayoutContext } from '../../BaseModalLayoutContext';
export var Footnote = function Footnote(_ref) {
  var dataHook = _ref.dataHook,
      className = _ref.className,
      children = _ref.children;

  var _useBaseModalLayoutCo = useBaseModalLayoutContext(),
      footnoteClassName = _useBaseModalLayoutCo.footnoteClassName,
      _useBaseModalLayoutCo2 = _useBaseModalLayoutCo.footnote,
      footnote = _useBaseModalLayoutCo2 === void 0 ? children : _useBaseModalLayoutCo2;

  return footnote && /*#__PURE__*/React.createElement("div", {
    "data-hook": dataHook,
    className: st(classes.root, footnoteClassName, className)
  }, /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement("div", {
    className: classes.innerContent
  }, footnote)) || null;
};
Footnote.displayName = 'BaseModalLayout.Footnote';
Footnote.propTypes = {
  /** additional css classes */
  className: PropTypes.string,

  /** data hook for testing */
  dataHook: PropTypes.string,

  /** a footnote node, to be rendered at the very bottom of the modal */
  footnote: PropTypes.node
};