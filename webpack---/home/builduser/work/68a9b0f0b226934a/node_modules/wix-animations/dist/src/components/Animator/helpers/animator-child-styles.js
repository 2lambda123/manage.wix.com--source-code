"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _timeClass = require("../class/time-class");

var _styleBuilder = _interopRequireDefault(require("../builders/style-builder"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var AnimationChildStyles = /*#__PURE__*/function () {
  function AnimationChildStyles(props, dimensions) {
    this.styles = void 0;
    this.translate = void 0;
    this.delay = void 0;
    this.duration = void 0;
    this.transition = void 0;
    this.dimensions = void 0;
    this.props = void 0;
    this.animatorProps = void 0;
    this.props = props;
    this.animatorProps = this.props.animatorProps;
    var animatorProps = props.animatorProps,
        sequenceIndex = props.sequenceIndex;
    this.dimensions = {
      height: dimensions.height,
      width: dimensions.width
    };
    var time = new _timeClass.ChildTime(animatorProps, this.props.transition, sequenceIndex);
    this.delay = time.getDelay();
    this.duration = time.getDuration();
    this.styles = [this.getFirstLayer(), this.getSecondLayer(), this.getThirdLayer()];
  }

  var _proto = AnimationChildStyles.prototype;

  _proto.getFirstLayer = function getFirstLayer() {
    var _this = this;

    var startStyles = function startStyles() {
      return new _styleBuilder["default"]().withTransitionDelay(_this.delay).withAnimationDelay(_this.duration).build();
    };

    return {
      base: _objectSpread(_objectSpread({}, this.props.animatorProps.childStyle), this.props.animatorChildStyle),
      enter: startStyles,
      entering: function entering() {
        return {};
      },
      exit: startStyles,
      exiting: {}
    };
  };

  _proto.getSecondLayer = function getSecondLayer() {
    var _this2 = this;

    var _this$dimensions = this.dimensions,
        height = _this$dimensions.height,
        width = _this$dimensions.width;
    var _this$animatorProps = this.animatorProps,
        scale = _this$animatorProps.scale,
        isHeight = _this$animatorProps.height,
        isWidth = _this$animatorProps.width;

    var startStyles = function startStyles() {
      return new _styleBuilder["default"]().withTransitionDelay(_this2.delay).build();
    };

    var dimensionsStyles = function dimensionsStyles(_height, _width) {
      return new _styleBuilder["default"]().withWidth(isWidth, _width).withHeight(isHeight, _height);
    };

    var hideDimensions = function hideDimensions() {
      return dimensionsStyles(0, 0).build();
    };

    var showDimensions = function showDimensions() {
      return dimensionsStyles(height, width).build();
    };

    var hideScale = function hideScale() {
      return new _styleBuilder["default"]().withScale(scale).build();
    };

    var showScale = function showScale() {
      return new _styleBuilder["default"]().withScale(scale && 1).build();
    };

    return {
      base: {},
      enter: function enter() {
        return _objectSpread(_objectSpread(_objectSpread({}, startStyles()), hideScale()), hideDimensions());
      },
      entering: function entering() {
        return _objectSpread(_objectSpread({}, showScale()), showDimensions());
      },
      exit: function exit() {
        return _objectSpread(_objectSpread(_objectSpread({}, startStyles()), showScale()), showDimensions());
      },
      exiting: function exiting() {
        return _objectSpread(_objectSpread({}, hideScale()), hideDimensions());
      }
    };
  };

  _proto.getThirdLayer = function getThirdLayer() {
    var _this3 = this;

    var translate = this.animatorProps.translate;

    var startStyles = function startStyles() {
      return new _styleBuilder["default"]().withTransitionDelay(_this3.delay).build();
    };

    var translateOut = function translateOut() {
      return new _styleBuilder["default"]().withTranslate(translate, 'out').build();
    };

    var translateIn = function translateIn() {
      return new _styleBuilder["default"]().withTranslate(translate, 'in').build();
    };

    return {
      base: {},
      enter: function enter() {
        return _objectSpread(_objectSpread({}, startStyles()), translateIn());
      },
      entering: {},
      exit: function exit() {
        return startStyles();
      },
      exiting: function exiting() {
        return translateOut();
      }
    };
  };

  _proto.getStyle = function getStyle(name, callback) {
    return this.props.transition[name] && typeof callback === 'function' && callback();
  };

  _proto.mergeStyles = function mergeStyles(_ref) {
    var base = _ref.base,
        enter = _ref.enter,
        entering = _ref.entering,
        exit = _ref.exit,
        exiting = _ref.exiting;
    return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, base), this.getStyle('enter', enter)), this.getStyle('entering', entering)), this.getStyle('exit', exit)), this.getStyle('exiting', exiting));
  };

  _proto.get = function get() {
    var _this4 = this;

    return this.styles.map(function (style) {
      return _this4.mergeStyles(style);
    });
  };

  return AnimationChildStyles;
}();

var _default = AnimationChildStyles;
exports["default"] = _default;