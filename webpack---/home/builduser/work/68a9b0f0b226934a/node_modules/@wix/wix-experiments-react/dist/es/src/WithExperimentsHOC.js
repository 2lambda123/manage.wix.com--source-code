import { __assign, __extends } from "tslib";
import React from 'react';
import { ExperimentsContext } from './ExperimentsContext';
import { getDisplayName } from './utils';
export function withExperiments(WrappedComponent) {
    var _a;
    return _a = /** @class */ (function (_super) {
            __extends(class_1, _super);
            function class_1() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_1.prototype.render = function () {
                var _a = this.context, experimentsInstance = _a.experimentsInstance, ready = _a.ready;
                if (ready) {
                    var extraProps = { experiments: experimentsInstance };
                    return React.createElement(WrappedComponent, __assign(__assign({}, this.props), extraProps));
                }
                return null;
            };
            return class_1;
        }(React.Component)),
        _a.displayName = "withExperiments(" + getDisplayName(WrappedComponent) + ")",
        _a.contextType = ExperimentsContext,
        _a;
}
//# sourceMappingURL=WithExperimentsHOC.js.map