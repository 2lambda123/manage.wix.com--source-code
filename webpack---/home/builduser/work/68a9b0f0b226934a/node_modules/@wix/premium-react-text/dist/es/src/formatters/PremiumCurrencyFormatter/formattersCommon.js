export var CURRENCY_PLACEHOLDER = "\xA4"; // &#164

export var SYSTEM_DECIMAL_SEPERATOR = '.';
export var DEFAULT_GROUP_SEPERATOR = ',';
export var groupSeparationRegex = new RegExp('^(\\d+)(\\d{3})', '');
export function decodeHtml(html) {
  if (typeof window !== 'undefined') {
    var txt = window.document.createElement('textarea');
    txt.innerHTML = html;
    return txt.value;
  } else {
    // We can't test this code because of jsdom global
    // so we test replaceCharCode function seperatly
    return replaceCharCode(html);
  }
}
var charCodeRegex = /&#(\d+);/g;
export function replaceCharCode(str) {
  return str && str.replace(charCodeRegex, function (match, code) {
    return String.fromCharCode(code);
  });
}
export function addGroupSeperator(groupSep, truncatedNumber) {
  while (groupSep && truncatedNumber.match(groupSeparationRegex)) {
    truncatedNumber = truncatedNumber.replace(groupSeparationRegex, '$1' + groupSep + '$2');
  }

  return truncatedNumber;
}
export function truncateNumber(inputFloat, fractionSize) {
  var roundErrors = parseFloat(Math.abs(inputFloat).toFixed(9)).toString(); //  round long trails

  var trimmedString = parseFloat(roundErrors.substring(0, inputFloat.toString().split(SYSTEM_DECIMAL_SEPERATOR)[0].length + 1 + fractionSize));
  return trimmedString.toFixed(fractionSize);
}