import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
var _excluded = ["dataHook", "className", "children", "style", "onCloseButtonClick", "onHelpButtonClick"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import PropTypes from 'prop-types';
import { st, classes } from './BaseModalLayout.st.css';
import { dataHooks } from './constants';
import CloseButton from '../CloseButton';
import Help from 'wix-ui-icons-common/system/Help24';
import { ThemeProviderConsumerBackwardCompatible } from '../ThemeProvider/ThemeProviderConsumerBackwardCompatible';
import { BaseModalLayoutContext } from './BaseModalLayoutContext';
import { Header, Content, Footer, Footnote, Illustration } from './LayoutBlocks';
import Box from '../Box';
var classNames = {
  headerClassName: classes.header,
  contentClassName: classes.content,
  footerClassName: classes.footer,
  footnoteClassName: classes.footnote,
  illustrationClassName: classes.illustration
};
/** Private component to be used by all public modals. Represents the common internals of all modals */

var BaseModalLayout = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(BaseModalLayout, _React$PureComponent);

  var _super = _createSuper(BaseModalLayout);

  function BaseModalLayout() {
    _classCallCheck(this, BaseModalLayout);

    return _super.apply(this, arguments);
  }

  _createClass(BaseModalLayout, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          dataHook = _this$props.dataHook,
          className = _this$props.className,
          children = _this$props.children,
          style = _this$props.style,
          onCloseButtonClick = _this$props.onCloseButtonClick,
          onHelpButtonClick = _this$props.onHelpButtonClick,
          restProps = _objectWithoutProperties(_this$props, _excluded);

      var theme = restProps.theme;
      var controlButtonAmount = [onCloseButtonClick, onHelpButtonClick].filter(Boolean).length;
      return /*#__PURE__*/React.createElement("div", {
        "data-hook": dataHook,
        "data-theme": theme,
        style: style,
        className: st(classes.root, {
          theme: theme,
          controlButtonAmount: controlButtonAmount
        }, className)
      }, /*#__PURE__*/React.createElement(BaseModalLayoutContext.Provider, {
        value: _objectSpread(_objectSpread({}, restProps), classNames)
      }, children), controlButtonAmount > 0 && /*#__PURE__*/React.createElement(ThemeProviderConsumerBackwardCompatible, {
        defaultIcons: {
          BaseModalLayout: {
            HelpIcon: Help
          }
        }
      }, function (_ref) {
        var HelpIcon = _ref.icons.BaseModalLayout.HelpIcon;
        return /*#__PURE__*/React.createElement(Box, {
          direction: "horizontal",
          className: classes.controlButtons
        }, onHelpButtonClick && /*#__PURE__*/React.createElement(CloseButton, {
          dataHook: dataHooks.helpButton,
          className: classes.helpButton,
          onClick: onHelpButtonClick,
          size: "large",
          skin: "dark"
        }, /*#__PURE__*/React.createElement(HelpIcon, {
          className: classes.helpIcon
        })), onCloseButtonClick && /*#__PURE__*/React.createElement(CloseButton, {
          dataHook: dataHooks.closeButton,
          className: classes.closeButton,
          onClick: onCloseButtonClick,
          size: "large",
          skin: "dark"
        }));
      }));
    }
  }]);

  return BaseModalLayout;
}(React.PureComponent);

_defineProperty(BaseModalLayout, "Header", Header);

_defineProperty(BaseModalLayout, "Content", Content);

_defineProperty(BaseModalLayout, "Footer", Footer);

_defineProperty(BaseModalLayout, "Footnote", Footnote);

_defineProperty(BaseModalLayout, "Illustration", Illustration);

BaseModalLayout.propTypes = {
  /** additional css classes */
  className: PropTypes.string,

  /** data hook for testing */
  dataHook: PropTypes.string,

  /** callback for when the close button is clicked */
  onCloseButtonClick: PropTypes.func,

  /** callback for when the help button is clicked */
  onHelpButtonClick: PropTypes.func,

  /** a global theme for the modal, will be applied as stylable state and will affect footer buttons skin */
  theme: PropTypes.oneOf(['standard', 'premium', 'destructive'])
};
BaseModalLayout.defaultProps = {
  theme: 'standard'
};
BaseModalLayout.displayName = 'BaseModalLayout';
export default BaseModalLayout;