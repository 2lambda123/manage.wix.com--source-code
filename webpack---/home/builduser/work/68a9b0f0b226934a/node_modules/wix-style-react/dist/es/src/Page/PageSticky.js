import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["children", "className", "style"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import { PageContext } from './PageContext';
import { st, classes } from './Page.st.css';
export var PageSticky = function PageSticky(_ref) {
  var children = _ref.children,
      className = _ref.className,
      style = _ref.style,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(PageContext.Consumer, null, function (_ref2) {
    var stickyStyle = _ref2.stickyStyle;
    var result;

    if (typeof children === 'function') {
      result = children({
        style: style,
        className: classes.sticky
      });
    } else {
      result = /*#__PURE__*/React.createElement("div", _extends({
        className: st(classes.sticky, {}, className),
        style: _objectSpread(_objectSpread({}, stickyStyle), style)
      }, props), children);
    }

    return result;
  });
};
PageSticky.displayName = 'Page.Sticky';
PageSticky.propTypes = {
  children: PropTypes.element.isRequired,
  style: PropTypes.object
};