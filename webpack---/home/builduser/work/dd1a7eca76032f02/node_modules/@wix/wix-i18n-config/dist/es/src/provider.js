function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

import React, { Component } from 'react';
import { I18nextProvider } from 'react-i18next';

var Provider = /*#__PURE__*/function (_Component) {
  _inheritsLoose(Provider, _Component);

  function Provider() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Provider.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        i18n = _this$props.i18n;

    if (i18n.options._polyfill.isLoading && i18n.options.react.useSuspense) {
      throw i18n.options._polyfill.promise; // use react suspense to pause until polyfills loaded
    }

    return /*#__PURE__*/React.createElement(I18nextProvider, {
      i18n: i18n
    }, children);
  };

  return Provider;
}(Component);

export default Provider;