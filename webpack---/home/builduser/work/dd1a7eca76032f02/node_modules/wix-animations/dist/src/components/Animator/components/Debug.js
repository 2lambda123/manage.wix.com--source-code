"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Debug = _interopRequireDefault(require("./Debug.scss"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var options = ['enter', 'entering', 'entered', 'exit', 'exiting'];

var Buttons = function Buttons(_ref) {
  var onSelect = _ref.onSelect,
      selected = _ref.selected;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: _Debug["default"].buttons
  }, options.map(function (option, index) {
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: _Debug["default"].button + " " + (selected === option && _Debug["default"].selected),
      key: index,
      onClick: function onClick() {
        return onSelect(option);
      }
    }, option);
  }));
};

var styles = {
  position: 'fixed',
  background: '#f27052',
  padding: '20px 30px 20px',
  color: 'white',
  fontSize: '16px',
  borderRadius: '5px',
  boxShadow: '0 0 10px grey'
};

var Debug = /*#__PURE__*/function (_Component) {
  _inheritsLoose(Debug, _Component);

  function Debug(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      debug: false,
      vertical: 'top',
      horizontal: 'right'
    };
    return _this;
  }

  var _proto = Debug.prototype;

  _proto.onSelect = function onSelect(id) {
    this.setState({
      debug: id
    });
    this.props.onSelect(id);
  };

  _proto.render = function render() {
    var _objectSpread2,
        _this2 = this;

    var hasChildren = this.props.hasChildren;
    var _this$state = this.state,
        vertical = _this$state.vertical,
        horizontal = _this$state.horizontal;
    return /*#__PURE__*/_react["default"].createElement("div", {
      style: _objectSpread(_objectSpread({}, styles), {}, (_objectSpread2 = {}, _objectSpread2[vertical] = vertical === 'bottom' ? '120px' : '20px', _objectSpread2[horizontal] = '20px', _objectSpread2))
    }, /*#__PURE__*/_react["default"].createElement("div", {
      style: {
        marginBottom: '20px',
        fontWeight: 'bold'
      }
    }, "Animator Debugger", hasChildren ? ' - Choose Debug Phase:' : ''), hasChildren && /*#__PURE__*/_react["default"].createElement(Buttons, {
      selected: this.state.debug,
      onSelect: function onSelect(id) {
        return _this2.onSelect(id);
      }
    }), !hasChildren && /*#__PURE__*/_react["default"].createElement("div", {
      style: {
        width: '350px',
        fontSize: '16px',
        marginTop: '15px',
        lineHeight: '24px',
        border: '1px solid white',
        padding: '15px'
      }
    }, "There are no existing children inside your Animator Component. Make sure your children are mounted to getthis debugger working."), /*#__PURE__*/_react["default"].createElement("div", {
      className: _Debug["default"].positioning
    }, "Box Position: \xA0", /*#__PURE__*/_react["default"].createElement("span", null, vertical !== 'top' && /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement("a", {
      onClick: function onClick() {
        return _this2.setState({
          vertical: 'top'
        });
      }
    }, "Set Top"), ",\xA0"), vertical === 'top' && /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement("a", {
      onClick: function onClick() {
        return _this2.setState({
          vertical: 'bottom'
        });
      }
    }, "Set Bottom"), ",\xA0"), horizontal !== 'right' && /*#__PURE__*/_react["default"].createElement("a", {
      onClick: function onClick() {
        return _this2.setState({
          horizontal: 'right'
        });
      }
    }, "Set Right"), horizontal === 'right' && /*#__PURE__*/_react["default"].createElement("a", {
      onClick: function onClick() {
        return _this2.setState({
          horizontal: 'left'
        });
      }
    }, "Set Left"))));
  };

  return Debug;
}(_react.Component);

var _default = Debug;
exports["default"] = _default;