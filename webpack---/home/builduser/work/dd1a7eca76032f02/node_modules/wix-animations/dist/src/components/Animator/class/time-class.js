"use strict";

exports.__esModule = true;
exports.ChildTime = exports.Time = void 0;

var _constants = require("../constants/constants");

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var getDurationFromTiming = function getDurationFromTiming(timing) {
  return _constants.timingMap[timing];
};

var Time = /*#__PURE__*/function () {
  function Time(props, _ref) {
    var enter = _ref.enter,
        exit = _ref.exit;
    this.isAnimation = void 0;
    this.hasSequence = void 0;
    this.props = void 0;
    this.isEnter = void 0;
    this.isExit = void 0;
    this.delay = void 0;
    this.isAnimation = !!_constants.animationProps.find(function (p) {
      return !!props[p];
    });
    this.hasSequence = !!props.sequence;
    this.delay = props.delay;
    this.props = props;
    this.isEnter = enter;
    this.isExit = exit;
  }

  var _proto = Time.prototype;

  _proto.getTotalDelay = function getTotalDelay() {
    var delay = 0;

    if (this.isEnter && this.delay.enter) {
      delay = this.delay.enter;
    } else if (this.isExit && this.delay.exit) {
      delay = this.delay.exit;
    }

    return delay;
  };

  _proto.getSingleDuration = function getSingleDuration() {
    if (!this.isAnimation) {
      return 0;
    }

    var _this$props = this.props,
        translate = _this$props.translate,
        timing = _this$props.timing;
    return translate ? _constants.propsDefault.duration : getDurationFromTiming(timing);
  };

  _proto.getDelayInPosition = function getDelayInPosition(index) {
    var children = this.props.children;
    var duration = this.getTotalDelay();

    if (this.hasSequence && this.isAnimation && children.length > 1) {
      duration = (index - 1) * _constants.propsDefault.sequenceDelay + duration;
    }

    return duration;
  };

  _proto.getTotalDuration = function getTotalDuration() {
    var children = this.props.children;
    return this.getSingleDuration() + this.getDelayInPosition(children.length);
  };

  return Time;
}();

exports.Time = Time;

var ChildTime = /*#__PURE__*/function (_Time) {
  _inheritsLoose(ChildTime, _Time);

  function ChildTime(props, transition, index) {
    var _this;

    _this = _Time.call(this, props, transition) || this;
    _this.index = void 0;
    _this.index = index;
    return _this;
  }

  var _proto2 = ChildTime.prototype;

  _proto2.getDelay = function getDelay() {
    var children = this.props.children;
    var delay = this.getTotalDelay();

    if (this.hasSequence && this.isAnimation && children.length > 1) {
      delay = (this.index - 1) * _constants.propsDefault.sequenceDelay + delay;
    }

    return delay;
  };

  _proto2.getDuration = function getDuration() {
    return this.getSingleDuration() + this.getDelayInPosition(this.index);
  };

  return ChildTime;
}(Time);

exports.ChildTime = ChildTime;