import { assertEnabledApi } from '../util/assert-enabled-api';
export const createStandaloneComponentFlowAPI = (requireableBMComponent, { flowAPIDelegate, fedopsLoggerOrGet, }) => (flowAPIDeps) => {
    var _a, _b;
    const flowAPIInstancesOrGet = flowAPIDelegate.flowAPIInstancesOrGet;
    const fedopsLoggerFromEssentials = typeof fedopsLoggerOrGet === 'function' ? null : fedopsLoggerOrGet;
    const { createFedopsLogger, Experiments, initI18n, asyncMessagesLoader, createBILogger, } = flowAPIDeps;
    const componentI18n = requireableBMComponent.asyncMessagesLoader != null
        ? flowAPIDelegate.getComponentI18nInstanceSync(requireableBMComponent.asyncMessagesLoader, flowAPIDeps)
        : null;
    const i18n = typeof flowAPIInstancesOrGet.i18nOrGet !== 'function'
        ? flowAPIInstancesOrGet.i18nOrGet
        : initI18n === null || initI18n === void 0 ? void 0 : initI18n({
            locale: flowAPIDelegate.bmModule.moduleParams.accountLanguage,
            asyncMessagesLoader,
            useSuspense: (_b = (_a = flowAPIDelegate.module.config.translations) === null || _a === void 0 ? void 0 : _a.suspense) !== null && _b !== void 0 ? _b : true,
            disableAutoInit: true,
        });
    const fedopsLogger = fedopsLoggerFromEssentials !== null && fedopsLoggerFromEssentials !== void 0 ? fedopsLoggerFromEssentials : createFedopsLogger === null || createFedopsLogger === void 0 ? void 0 : createFedopsLogger(requireableBMComponent.component.componentId, Object.assign({}, flowAPIDelegate.module.config.fedops));
    const biLogger = typeof flowAPIInstancesOrGet.biLoggerOrGet !== 'function'
        ? flowAPIInstancesOrGet.biLoggerOrGet
        : createBILogger === null || createBILogger === void 0 ? void 0 : createBILogger({});
    const experiments = typeof flowAPIInstancesOrGet.experimentsOrGet !== 'function'
        ? flowAPIInstancesOrGet.experimentsOrGet
        : Experiments
            ? new Experiments()
            : undefined;
    return flowAPIDelegate.createBMComponentAPISync(requireableBMComponent.component, {
        flowAPIDeps,
        componentI18n,
        fedopsLogger,
        flowAPIInstances: {
            get i18n() {
                assertEnabledApi(i18n, 'i18n');
                return i18n;
            },
            get biLogger() {
                assertEnabledApi(biLogger, 'biLogger');
                return biLogger;
            },
            get experiments() {
                assertEnabledApi(experiments, 'experiments');
                return experiments;
            },
        },
    });
};
//# sourceMappingURL=createStandaloneComponentFlowAPI.js.map