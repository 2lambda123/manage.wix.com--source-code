"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BiLogger = void 0;
var tslib_1 = require("tslib");
var SentryReporter_1 = require("../SentryReporter/SentryReporter");
var web_bi_logger_1 = require("@wix/web-bi-logger");
var BI_LOGGER_DEFAULTS = { src: 17 };
var BiLogger = /** @class */ (function () {
    function BiLogger(additionalParams) {
        if (additionalParams === void 0) { additionalParams = {}; }
        this.biLoggerInstance = web_bi_logger_1.default
            .factory({ endpoint: 'pre' })
            .updateDefaults(tslib_1.__assign(tslib_1.__assign({}, BI_LOGGER_DEFAULTS), additionalParams))
            .logger();
    }
    BiLogger.assetsBi = function (asset, newBiFormat) {
        var _a;
        if (newBiFormat === void 0) { newBiFormat = false; }
        if (!asset) {
            return {};
        }
        try {
            return tslib_1.__assign(tslib_1.__assign({ assetId: asset.bannerTemplate.pageSetting.name, assetCampaignGuid: asset.bannerId }, (newBiFormat ? {} : { saleGroup: asset.saleType })), (_a = { isPremium: asset.isPremium || false }, _a[newBiFormat
                ? 'realEstateId'
                : 'bannerLocationOnPage'] = asset.bannerPosition, _a.lightboxGuid = asset.lightboxGuid, _a));
        }
        catch (e) {
            SentryReporter_1.reportSentryError(e, {
                realEstateId: asset && asset.bannerPosition,
                reportingClass: 'BiLogger.assetsBi',
            });
            return {};
        }
    };
    BiLogger.prototype.log = function (eventId, newEventStyle, additionalLogParams, locale, metasiteId, bannerRoot, realEstateId) {
        if (newEventStyle === void 0) { newEventStyle = false; }
        if (additionalLogParams === void 0) { additionalLogParams = {}; }
        this.biLoggerInstance.log(makeDealerBi({
            eventId: eventId,
            additionalLogParams: additionalLogParams,
            locale: locale,
            metasiteId: metasiteId,
            bannerRoot: bannerRoot,
            realEstateId: realEstateId,
        }, newEventStyle));
    };
    return BiLogger;
}());
exports.BiLogger = BiLogger;
function makeDealerBi(args, newBiFormat) {
    if (newBiFormat === void 0) { newBiFormat = false; }
    var additional = filterKeyWithValues(args.additionalLogParams) || {};
    if (!newBiFormat) {
        additional = tslib_1.__assign(tslib_1.__assign({}, additional), { promotionAssetType: 'dealer-banner', abTest: 'react-banner', premiumLng: args.locale });
    }
    else {
        additional = tslib_1.__assign(tslib_1.__assign({}, additional), { realEstateId: args.realEstateId });
    }
    return tslib_1.__assign(tslib_1.__assign({ msid: args.metasiteId, evid: args.eventId }, BiLogger.assetsBi(args.bannerRoot, newBiFormat)), additional);
}
var filterKeyWithValues = function (dictionary) {
    return Object.keys(dictionary)
        .filter(function (key) { return dictionary[key] !== undefined; })
        .reduce(function (acc, key) {
        var _a;
        return (tslib_1.__assign(tslib_1.__assign({}, acc), (_a = {}, _a[key] = dictionary[key], _a)));
    }, {});
};
//# sourceMappingURL=BiLogger.js.map