"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _set = _interopRequireDefault(require("lodash/set"));

var _unset = _interopRequireDefault(require("lodash/unset"));

var _forEach = _interopRequireDefault(require("lodash/forEach"));

var _uniqueId = _interopRequireDefault(require("lodash/uniqueId"));

var _ReactModuleContainerErrors = require("./ReactModuleContainerErrors");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ModuleRegistry = /*#__PURE__*/function () {
  function ModuleRegistry() {
    this.registeredComponents = {};
    this.registeredMethods = {};
    this.eventListeners = {};
    this.modules = {};
  }

  var _proto = ModuleRegistry.prototype;

  _proto.cleanAll = function cleanAll() {
    this.registeredComponents = {};
    this.registeredMethods = {};
    this.eventListeners = {};
    this.modules = {};
  };

  _proto.registerModule = function registerModule(globalID, ModuleFactory, args) {
    if (args === void 0) {
      args = [];
    }

    if (this.modules[globalID]) {
      throw new Error("A module with id \"" + globalID + "\" is already registered");
    }

    this.modules[globalID] = _construct(ModuleFactory, args);
  };

  _proto.getModule = function getModule(globalID) {
    return this.modules[globalID];
  };

  _proto.getAllModules = function getAllModules() {
    var _this = this;

    return Object.keys(this.modules).map(function (moduleId) {
      return _this.modules[moduleId];
    });
  };

  _proto.registerComponent = function registerComponent(globalID, generator) {
    this.registeredComponents[globalID] = generator;
  };

  _proto.component = function component(globalID) {
    var generator = this.registeredComponents[globalID];

    if (!generator) {
      this.notifyListeners('reactModuleContainer.error', new _ReactModuleContainerErrors.UnregisteredComponentUsedError(globalID));
      return undefined;
    }

    return generator();
  };

  _proto.addListener = function addListener(globalID, callback) {
    var _this2 = this;

    var callbackKey = (0, _uniqueId["default"])('eventListener');
    (0, _set["default"])(this.eventListeners, [globalID, callbackKey], callback);
    return {
      remove: function remove() {
        return (0, _unset["default"])(_this2.eventListeners[globalID], callbackKey);
      }
    };
  };

  _proto.notifyListeners = function notifyListeners(globalID) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var listenerCallbacks = this.eventListeners[globalID];

    if (!listenerCallbacks) {
      return;
    }

    (0, _forEach["default"])(listenerCallbacks, function (callback) {
      return invokeSafely(globalID, callback, args);
    });
  };

  _proto.registerMethod = function registerMethod(globalID, generator) {
    this.registeredMethods[globalID] = generator;
  };

  _proto.invoke = function invoke(globalID) {
    var generator = this.registeredMethods[globalID];

    if (!generator) {
      this.notifyListeners('reactModuleContainer.error', new _ReactModuleContainerErrors.UnregisteredMethodInvokedError(globalID));
      return undefined;
    }

    var method = generator();

    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    return method.apply(void 0, args);
  };

  return ModuleRegistry;
}();

var singleton;

if (typeof window !== 'undefined') {
  singleton = window.ModuleRegistry || new ModuleRegistry();
  window.ModuleRegistry = singleton;
} else {
  singleton = new ModuleRegistry();
}

var _default = singleton;
exports["default"] = _default;

function invokeSafely(globalID, callback, args) {
  try {
    callback.apply(void 0, args);
  } catch (err) {
    singleton.notifyListeners('reactModuleContainer.error', new _ReactModuleContainerErrors.ListenerCallbackError(globalID, err));
  }
}