/* eslint-disable */
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnalyticsNgServer = void 0;
var http_1 = require("@wix/ambassador/runtime/http");
var AnalyticsNgServer = function (baseUrl, httpClientConfig) {
    var httpClient = new http_1.AmbassadorHTTPClient(baseUrl, httpClientConfig);
    return {
        AlertsService: function () {
            return function (headers) {
                var service = {
                    createAlert: function (createAlertRequest) { return httpClient.invoke('POST', '/api/v1/alerts', createAlertRequest, headers); },
                    deleteAlert: function (deleteAlertRequest) { return httpClient.invoke('DELETE', '/api/v1/alerts/{alert_id}', deleteAlertRequest, headers); },
                    getAlert: function (getAlertRequest) { return httpClient.invoke('GET', '/api/v1/alerts/{alert_id}', getAlertRequest, headers); },
                    listAlertMeasures: function (any) { return httpClient.invoke('GET', '/api/v1/alerts/measures', any, headers); },
                    listAlerts: function (any) { return httpClient.invoke('GET', '/api/v1/alerts', any, headers); },
                    manualTriggerAlert: function (triggerAlertRequest) { return httpClient.invoke('POST', '/api/v1/admin/alerts/trigger', triggerAlertRequest, headers); },
                    updateAlert: function (updateAlertRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/alerts/{alert_id}', updateAlertRequest, headers);
                    },
                };
                service.createAlert.__http_method = 'POST';
                service.createAlert.__http_url = '/api/v1/alerts';
                service.deleteAlert.__http_method = 'DELETE';
                service.deleteAlert.__http_url = '/api/v1/alerts/{alert_id}';
                service.getAlert.__http_method = 'GET';
                service.getAlert.__http_url = '/api/v1/alerts/{alert_id}';
                service.listAlertMeasures.__http_method = 'GET';
                service.listAlertMeasures.__http_url = '/api/v1/alerts/measures';
                service.listAlerts.__http_method = 'GET';
                service.listAlerts.__http_url = '/api/v1/alerts';
                service.manualTriggerAlert.__http_method = 'POST';
                service.manualTriggerAlert.__http_url = '/api/v1/admin/alerts/trigger';
                service.updateAlert.__http_method = 'PATCH';
                service.updateAlert.__http_url = '/api/v1/alerts/{alert_id}';
                return service;
            };
        },
        CategoryService: function () {
            return function (headers) {
                var service = {
                    createCategory: function (createCategoryRequest) {
                        return httpClient.invoke('POST', '/api/v1/categories', createCategoryRequest, headers);
                    },
                    deleteCategory: function (deleteCategoryRequest) {
                        return httpClient.invoke('DELETE', '/api/v1/categories/{categoryId}', deleteCategoryRequest, headers);
                    },
                    getCategory: function (getCategoryRequest) {
                        return httpClient.invoke('GET', '/api/v1/categories/{categoryId}', getCategoryRequest, headers);
                    },
                    listCategories: function (any) { return httpClient.invoke('GET', '/api/v1/categories', any, headers); },
                    updateCategory: function (updateCategoryRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/categories/{categoryId}', updateCategoryRequest, headers);
                    },
                };
                service.createCategory.__http_method = 'POST';
                service.createCategory.__http_url = '/api/v1/categories';
                service.deleteCategory.__http_method = 'DELETE';
                service.deleteCategory.__http_url = '/api/v1/categories/{categoryId}';
                service.getCategory.__http_method = 'GET';
                service.getCategory.__http_url = '/api/v1/categories/{categoryId}';
                service.listCategories.__http_method = 'GET';
                service.listCategories.__http_url = '/api/v1/categories';
                service.updateCategory.__http_method = 'PATCH';
                service.updateCategory.__http_url = '/api/v1/categories/{categoryId}';
                return service;
            };
        },
        DashboardGroupService: function () {
            return function (headers) {
                var service = {
                    createDashboardGroup: function (createDashboardGroupRequest) {
                        return httpClient.invoke('POST', '/api/v1/dashboard-groups', createDashboardGroupRequest, headers);
                    },
                    deleteDashboardGroup: function (deleteDashboardGroupRequest) {
                        return httpClient.invoke('DELETE', '/api/v1/dashboard-groups/{groupId}', deleteDashboardGroupRequest, headers);
                    },
                    getDashboardGroup: function (getDashboardGroupRequest) {
                        return httpClient.invoke('GET', '/api/v1/dashboard-groups/{groupId}', getDashboardGroupRequest, headers);
                    },
                    listDashboardGroups: function (any) { return httpClient.invoke('GET', '/api/v1/dashboard-groups', any, headers); },
                    updateDashboardGroup: function (updateDashboardGroupRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/dashboard-groups/{groupId}', updateDashboardGroupRequest, headers);
                    },
                };
                service.createDashboardGroup.__http_method = 'POST';
                service.createDashboardGroup.__http_url = '/api/v1/dashboard-groups';
                service.deleteDashboardGroup.__http_method = 'DELETE';
                service.deleteDashboardGroup.__http_url = '/api/v1/dashboard-groups/{groupId}';
                service.getDashboardGroup.__http_method = 'GET';
                service.getDashboardGroup.__http_url = '/api/v1/dashboard-groups/{groupId}';
                service.listDashboardGroups.__http_method = 'GET';
                service.listDashboardGroups.__http_url = '/api/v1/dashboard-groups';
                service.updateDashboardGroup.__http_method = 'PATCH';
                service.updateDashboardGroup.__http_url = '/api/v1/dashboard-groups/{groupId}';
                return service;
            };
        },
        DashboardService: function () {
            return function (headers) {
                var service = {
                    cancelSyncDashboards: function (cancelSyncDashboardsRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/dashboards/prod-sync/{taskId}/cancel', cancelSyncDashboardsRequest, headers);
                    },
                    checkDashboardDownloadStatus: function (checkDashboardDownloadStatusRequest) {
                        return httpClient.invoke('GET', '/api/v1/dashboards/{dashboardId}/download/{taskId}/status', checkDashboardDownloadStatusRequest, headers);
                    },
                    checkSyncDashboardsStatus: function (checkSyncDashboardsStatusRequest) {
                        return httpClient.invoke('GET', '/api/v1/dashboards/prod-sync/{taskId}/status', checkSyncDashboardsStatusRequest, headers);
                    },
                    createDashboard: function (createDashboardRequest) {
                        return httpClient.invoke('POST', '/api/v1/dashboards', createDashboardRequest, headers);
                    },
                    createUserDashboard: function (createUserDashboardRequest) {
                        return httpClient.invoke('POST', '/api/v1/dashboards/generate', createUserDashboardRequest, headers);
                    },
                    deleteDashboard: function (deleteDashboardRequest) {
                        return httpClient.invoke('DELETE', '/api/v1/dashboards/{dashboardId}', deleteDashboardRequest, headers);
                    },
                    downloadDashboard: function (downloadDashboardRequest) {
                        return httpClient.invoke('GET', '/api/v1/dashboards/{dashboardId}/download', downloadDashboardRequest, headers);
                    },
                    duplicatedDashboard: function (duplicateDashboardRequest) {
                        return httpClient.invoke('POST', '/api/v1/dashboards/{dashboardId}/duplicate', duplicateDashboardRequest, headers);
                    },
                    getDashboard: function (getDashboardRequest) {
                        return httpClient.invoke('GET', '/api/v1/dashboards/{dashboardId}', getDashboardRequest, headers);
                    },
                    getDashboardDownloadResult: function (getDashboardDownloadResultRequest) {
                        return httpClient.invoke('GET', '/api/v1/dashboards/{dashboardId}/download/{taskId}/result', getDashboardDownloadResultRequest, headers);
                    },
                    getDashboardEmbedUrl: function (getDashboardEmbedUrlRequest) {
                        return httpClient.invoke('GET', '/api/v1/dashboards/{dashboardId}/embedUrl', getDashboardEmbedUrlRequest, headers);
                    },
                    getDashboardsPermissions: function (any) { return httpClient.invoke('GET', '/api/v1/dashboards/permissions', any, headers); },
                    getDashboardsSettings: function (any) { return httpClient.invoke('GET', '/api/v1/dashboards/settings', any, headers); },
                    listDashboards: function (listDashboardsRequest) {
                        return httpClient.invoke('GET', '/api/v1/dashboards', listDashboardsRequest, headers);
                    },
                    queryDashboards: function (queryDashboardsRequest) {
                        return httpClient.invoke('POST', '/api/v1/dashboards/query', queryDashboardsRequest, headers);
                    },
                    syncDashboards: function (syncDashboardsRequest) {
                        return httpClient.invoke('POST', '/api/v1/dashboards/prod-sync', syncDashboardsRequest, headers);
                    },
                    syncDashboardsServers: function (any) { return httpClient.invoke('GET', '/api/v1/dashboards/prod-sync/servers', any, headers); },
                    syncDashboardsTasks: function (any) { return httpClient.invoke('GET', '/api/v1/dashboards/prod-sync/tasks', any, headers); },
                    updateDashboard: function (updateDashboardRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/dashboards/{dashboardId}', updateDashboardRequest, headers);
                    },
                };
                service.cancelSyncDashboards.__http_method = 'PATCH';
                service.cancelSyncDashboards.__http_url = '/api/v1/dashboards/prod-sync/{taskId}/cancel';
                service.checkDashboardDownloadStatus.__http_method = 'GET';
                service.checkDashboardDownloadStatus.__http_url = '/api/v1/dashboards/{dashboardId}/download/{taskId}/status';
                service.checkSyncDashboardsStatus.__http_method = 'GET';
                service.checkSyncDashboardsStatus.__http_url = '/api/v1/dashboards/prod-sync/{taskId}/status';
                service.createDashboard.__http_method = 'POST';
                service.createDashboard.__http_url = '/api/v1/dashboards';
                service.createUserDashboard.__http_method = 'POST';
                service.createUserDashboard.__http_url = '/api/v1/dashboards/generate';
                service.deleteDashboard.__http_method = 'DELETE';
                service.deleteDashboard.__http_url = '/api/v1/dashboards/{dashboardId}';
                service.downloadDashboard.__http_method = 'GET';
                service.downloadDashboard.__http_url = '/api/v1/dashboards/{dashboardId}/download';
                service.duplicatedDashboard.__http_method = 'POST';
                service.duplicatedDashboard.__http_url = '/api/v1/dashboards/{dashboardId}/duplicate';
                service.getDashboard.__http_method = 'GET';
                service.getDashboard.__http_url = '/api/v1/dashboards/{dashboardId}';
                service.getDashboardDownloadResult.__http_method = 'GET';
                service.getDashboardDownloadResult.__http_url = '/api/v1/dashboards/{dashboardId}/download/{taskId}/result';
                service.getDashboardEmbedUrl.__http_method = 'GET';
                service.getDashboardEmbedUrl.__http_url = '/api/v1/dashboards/{dashboardId}/embedUrl';
                service.getDashboardsPermissions.__http_method = 'GET';
                service.getDashboardsPermissions.__http_url = '/api/v1/dashboards/permissions';
                service.getDashboardsSettings.__http_method = 'GET';
                service.getDashboardsSettings.__http_url = '/api/v1/dashboards/settings';
                service.listDashboards.__http_method = 'GET';
                service.listDashboards.__http_url = '/api/v1/dashboards';
                service.queryDashboards.__http_method = 'POST';
                service.queryDashboards.__http_url = '/api/v1/dashboards/query';
                service.syncDashboards.__http_method = 'POST';
                service.syncDashboards.__http_url = '/api/v1/dashboards/prod-sync';
                service.syncDashboardsServers.__http_method = 'GET';
                service.syncDashboardsServers.__http_url = '/api/v1/dashboards/prod-sync/servers';
                service.syncDashboardsTasks.__http_method = 'GET';
                service.syncDashboardsTasks.__http_url = '/api/v1/dashboards/prod-sync/tasks';
                service.updateDashboard.__http_method = 'PATCH';
                service.updateDashboard.__http_url = '/api/v1/dashboards/{dashboardId}';
                return service;
            };
        },
        DataService: function () {
            return function (headers) {
                var service = {
                    createSavedQuery: function (createSavedQueryRequest) {
                        return httpClient.invoke('POST', '/api/v1/queries/saved', createSavedQueryRequest, headers);
                    },
                    deleteSavedQuery: function (deleteSavedQueryRequest) {
                        return httpClient.invoke('DELETE', '/api/v1/queries/saved/{queryId}', deleteSavedQueryRequest, headers);
                    },
                    downloadData: function (downloadRequest) {
                        return httpClient.invoke('POST', '/api/v1/data/download/{request.view}', downloadRequest, headers);
                    },
                    getDataView: function (getDataViewRequest) { return httpClient.invoke('GET', '/api/v1/data/views/{view}', getDataViewRequest, headers); },
                    getSavedQuery: function (getSavedQueryRequest) {
                        return httpClient.invoke('GET', '/api/v1/queries/saved/{queryId}', getSavedQueryRequest, headers);
                    },
                    listDataViews: function (any) { return httpClient.invoke('GET', '/api/v1/data/views', any, headers); },
                    listSavedQuery: function (any) { return httpClient.invoke('GET', '/api/v1/data/queries/saved', any, headers); },
                    queryDataView: function (queryDataViewRequest) {
                        return httpClient.invoke('POST', '/api/v1/data/views/{view}', queryDataViewRequest, headers);
                    },
                    queryDataViewWithAggregate: function (queryDataViewAggregatedRequest) {
                        return httpClient.invoke('POST', '/api/v1/data/views/{query.view}/aggregated', queryDataViewAggregatedRequest, headers);
                    },
                    runSavedQuery: function (runSavedQueryRequest) {
                        return httpClient.invoke('POST', '/api/v1/data/queries/saved/{query_name}', runSavedQueryRequest, headers);
                    },
                    runSavedQueryWithAggregate: function (runSavedQueryAggregatedRequest) {
                        return httpClient.invoke('POST', '/api/v1/data/queries/saved/{query.query_name}/aggregated', runSavedQueryAggregatedRequest, headers);
                    },
                    updateSavedQuery: function (updateSavedQueryRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/queries/saved/{queryId}', updateSavedQueryRequest, headers);
                    },
                };
                service.createSavedQuery.__http_method = 'POST';
                service.createSavedQuery.__http_url = '/api/v1/queries/saved';
                service.deleteSavedQuery.__http_method = 'DELETE';
                service.deleteSavedQuery.__http_url = '/api/v1/queries/saved/{queryId}';
                service.downloadData.__http_method = 'POST';
                service.downloadData.__http_url = '/api/v1/data/download/{request.view}';
                service.getDataView.__http_method = 'GET';
                service.getDataView.__http_url = '/api/v1/data/views/{view}';
                service.getSavedQuery.__http_method = 'GET';
                service.getSavedQuery.__http_url = '/api/v1/queries/saved/{queryId}';
                service.listDataViews.__http_method = 'GET';
                service.listDataViews.__http_url = '/api/v1/data/views';
                service.listSavedQuery.__http_method = 'GET';
                service.listSavedQuery.__http_url = '/api/v1/data/queries/saved';
                service.queryDataView.__http_method = 'POST';
                service.queryDataView.__http_url = '/api/v1/data/views/{view}';
                service.queryDataViewWithAggregate.__http_method = 'POST';
                service.queryDataViewWithAggregate.__http_url = '/api/v1/data/views/{query.view}/aggregated';
                service.runSavedQuery.__http_method = 'POST';
                service.runSavedQuery.__http_url = '/api/v1/data/queries/saved/{query_name}';
                service.runSavedQueryWithAggregate.__http_method = 'POST';
                service.runSavedQueryWithAggregate.__http_url = '/api/v1/data/queries/saved/{query.query_name}/aggregated';
                service.updateSavedQuery.__http_method = 'PATCH';
                service.updateSavedQuery.__http_url = '/api/v1/queries/saved/{queryId}';
                return service;
            };
        },
        ForecastService: function () {
            return function (headers) {
                var service = {
                    getForecastData: function (getForecastRequest) { return httpClient.invoke('POST', '/api/v1/forecast', getForecastRequest, headers); },
                };
                service.getForecastData.__http_method = 'POST';
                service.getForecastData.__http_url = '/api/v1/forecast';
                return service;
            };
        },
        IndustryBenchmarkService: function () {
            return function (headers) {
                var service = {
                    getCountriesAndIndustriesMap: function (getCountriesAndIndustriesMapRequest) {
                        return httpClient.invoke('GET', '/api/v1/industry-benchmark/countries-and-industries', getCountriesAndIndustriesMapRequest, headers);
                    },
                    getIndustryBenchmark: function (getIndustryBenchmarkRequest) {
                        return httpClient.invoke('GET', '/api/v1/industry-benchmark', getIndustryBenchmarkRequest, headers);
                    },
                    getPerformanceBenchmark: function (getPerformanceBenchmarkRequest) {
                        return httpClient.invoke('GET', '/api/v1/performance-benchmark', getPerformanceBenchmarkRequest, headers);
                    },
                    getSiteSpeed: function (getSiteSpeedRequest) {
                        return httpClient.invoke('GET', '/api/v1/performance-benchmark/site-speed', getSiteSpeedRequest, headers);
                    },
                    updateIndustryBenchmarkConfig: function (updateIndustryBenchmarkConfigRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/industry-benchmark', updateIndustryBenchmarkConfigRequest, headers);
                    },
                };
                service.getCountriesAndIndustriesMap.__http_method = 'GET';
                service.getCountriesAndIndustriesMap.__http_url = '/api/v1/industry-benchmark/countries-and-industries';
                service.getIndustryBenchmark.__http_method = 'GET';
                service.getIndustryBenchmark.__http_url = '/api/v1/industry-benchmark';
                service.getPerformanceBenchmark.__http_method = 'GET';
                service.getPerformanceBenchmark.__http_url = '/api/v1/performance-benchmark';
                service.getSiteSpeed.__http_method = 'GET';
                service.getSiteSpeed.__http_url = '/api/v1/performance-benchmark/site-speed';
                service.updateIndustryBenchmarkConfig.__http_method = 'PATCH';
                service.updateIndustryBenchmarkConfig.__http_url = '/api/v1/industry-benchmark';
                return service;
            };
        },
        InsightsService: function () {
            return function (headers) {
                var service = {
                    getInsightsV2: function (getInsightsRequest) { return httpClient.invoke('POST', '/api/v2/insights', getInsightsRequest, headers); },
                    getInsightsV3: function (getInsightsV3Request) {
                        return httpClient.invoke('GET', '/api/v3/insights/{category}', getInsightsV3Request, headers);
                    },
                };
                service.getInsightsV2.__http_method = 'POST';
                service.getInsightsV2.__http_url = '/api/v2/insights';
                service.getInsightsV3.__http_method = 'GET';
                service.getInsightsV3.__http_url = '/api/v3/insights/{category}';
                return service;
            };
        },
        QueryService: function () {
            return function (headers) {
                var service = {
                    getViewData: function (getViewDataRequest) {
                        return httpClient.invoke('POST', '/api/v1/query/view/{view}', getViewDataRequest, headers);
                    },
                };
                service.getViewData.__http_method = 'POST';
                service.getViewData.__http_url = '/api/v1/query/view/{view}';
                return service;
            };
        },
        ReportsService: function () {
            return function (headers) {
                var service = {
                    getOverviews: function (getOverviewsRequest) {
                        return httpClient.invoke('POST', '/api/v1/reports/overviews/{view}', getOverviewsRequest, headers);
                    },
                    getOverviewsV2: function (getOverviewsRequest) {
                        return httpClient.invoke('POST', '/api/v2/reports/overviews/{view}', getOverviewsRequest, headers);
                    },
                };
                service.getOverviews.__http_method = 'POST';
                service.getOverviews.__http_url = '/api/v1/reports/overviews/{view}';
                service.getOverviewsV2.__http_method = 'POST';
                service.getOverviewsV2.__http_url = '/api/v2/reports/overviews/{view}';
                return service;
            };
        },
        ScheduledPlanService: function () {
            return function (headers) {
                var service = {
                    createScheduledPlan: function (createScheduledPlanRequest) {
                        return httpClient.invoke('POST', '/api/v1/schedules', createScheduledPlanRequest, headers);
                    },
                    deleteScheduledPlan: function (deleteScheduledPlanRequest) {
                        return httpClient.invoke('DELETE', '/api/v1/schedules/{dashboardId}', deleteScheduledPlanRequest, headers);
                    },
                    getScheduledPlan: function (getScheduledPlanRequest) {
                        return httpClient.invoke('GET', '/api/v1/schedules/{dashboardId}', getScheduledPlanRequest, headers);
                    },
                    listScheduledPlans: function (listScheduledPlansRequest) {
                        return httpClient.invoke('GET', '/api/v1/schedules', listScheduledPlansRequest, headers);
                    },
                    runOnceScheduledPlan: function (runOnceScheduledPlanRequest) {
                        return httpClient.invoke('POST', '/api/v1/schedules/runonce', runOnceScheduledPlanRequest, headers);
                    },
                    updateScheduledPlan: function (updateScheduledPlanRequest) {
                        return httpClient.invoke('PATCH', '/api/v1/schedules/{dashboardId}', updateScheduledPlanRequest, headers);
                    },
                };
                service.createScheduledPlan.__http_method = 'POST';
                service.createScheduledPlan.__http_url = '/api/v1/schedules';
                service.deleteScheduledPlan.__http_method = 'DELETE';
                service.deleteScheduledPlan.__http_url = '/api/v1/schedules/{dashboardId}';
                service.getScheduledPlan.__http_method = 'GET';
                service.getScheduledPlan.__http_url = '/api/v1/schedules/{dashboardId}';
                service.listScheduledPlans.__http_method = 'GET';
                service.listScheduledPlans.__http_url = '/api/v1/schedules';
                service.runOnceScheduledPlan.__http_method = 'POST';
                service.runOnceScheduledPlan.__http_url = '/api/v1/schedules/runonce';
                service.updateScheduledPlan.__http_method = 'PATCH';
                service.updateScheduledPlan.__http_url = '/api/v1/schedules/{dashboardId}';
                return service;
            };
        },
        SubscriptionService: function () {
            return function (headers) {
                var service = {
                    listSubscriptions: function (listSubscriptionsRequest) {
                        return httpClient.invoke('GET', '/api/v1/subscriptions', listSubscriptionsRequest, headers);
                    },
                    subscribe: function (subscribeRequest) { return httpClient.invoke('PUT', '/api/v1/subscriptions/subscribe', subscribeRequest, headers); },
                    unsubscribe: function (unsubscribeRequest) { return httpClient.invoke('PUT', '/api/v1/subscriptions/unsubscribe', unsubscribeRequest, headers); },
                };
                service.listSubscriptions.__http_method = 'GET';
                service.listSubscriptions.__http_url = '/api/v1/subscriptions';
                service.subscribe.__http_method = 'PUT';
                service.subscribe.__http_url = '/api/v1/subscriptions/subscribe';
                service.unsubscribe.__http_method = 'PUT';
                service.unsubscribe.__http_url = '/api/v1/subscriptions/unsubscribe';
                return service;
            };
        },
        UnsubscribeService: function () {
            return function (headers) {
                var service = {
                    listUnsubscribes: function (listUnsubscribesRequest) {
                        return httpClient.invoke('GET', '/api/v1/unsubscribe', listUnsubscribesRequest, headers);
                    },
                    removeUnsubscribeFromTopic: function (unsubscribeFromTopicRequest) {
                        return httpClient.invoke('DELETE', '/api/v1/unsubscribe/{topic}', unsubscribeFromTopicRequest, headers);
                    },
                    unsubscribeFromTopic: function (unsubscribeFromTopicRequest) {
                        return httpClient.invoke('POST', '/api/v1/unsubscribe/{topic}', unsubscribeFromTopicRequest, headers);
                    },
                };
                service.listUnsubscribes.__http_method = 'GET';
                service.listUnsubscribes.__http_url = '/api/v1/unsubscribe';
                service.removeUnsubscribeFromTopic.__http_method = 'DELETE';
                service.removeUnsubscribeFromTopic.__http_url = '/api/v1/unsubscribe/{topic}';
                service.unsubscribeFromTopic.__http_method = 'POST';
                service.unsubscribeFromTopic.__http_url = '/api/v1/unsubscribe/{topic}';
                return service;
            };
        },
    };
};
exports.AnalyticsNgServer = AnalyticsNgServer;
exports.AnalyticsNgServer.__transport = 'http';
__exportStar(require("./types"), exports);
//# sourceMappingURL=http.js.map