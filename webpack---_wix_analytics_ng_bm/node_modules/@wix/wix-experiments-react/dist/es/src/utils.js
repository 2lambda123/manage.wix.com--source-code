var createDependencyKeyFromObject = function (obj) {
    if (obj === void 0) { obj = {}; }
    return Object.entries(obj)
        .map(function (_a) {
        var key = _a[0], value = _a[1];
        return key + "=" + value;
    })
        .sort()
        .join('&');
};
export var generateDependencyKeys = function (options) {
    var _a;
    var scopes = !options.scope
        ? ['']
        : Array.isArray(options.scope)
            ? options.scope
            : [options.scope];
    return {
        baseUrl: options.baseUrl || '',
        useNewAPI: (_a = options.useNewAPI) !== null && _a !== void 0 ? _a : false,
        requestContext: createDependencyKeyFromObject(options.requestContext || {}),
        experiments: createDependencyKeyFromObject(options.experiments || {}),
        scope: scopes.sort().join('&'),
    };
};
export var getDisplayName = function (Component) {
    return (Component.displayName ||
        Component.name ||
        (Component.constructor && Component.constructor.name) ||
        'Anonymous');
};
export var extreactOptions = function (props) {
    if (props.options) {
        return props.options;
    }
    return props;
};
//# sourceMappingURL=utils.js.map